<channel version="4.0.0">
  <id>ab7d9121-bd5f-47c1-964a-53531cd178dd</id>
  <nextMetaDataId>11</nextMetaDataId>
  <name>Import CSV -  Populate Bank Account</name>
  <description>@Description: Provide a channel to take a CSV file in specified format and can generate either HL7v2 ADT (ITI-8) or HL7v3 PIX (ITI-44) messaging to either File Writer, TCPIP Port HL7v2 endpoint or Web Server Sender HL7v3 Web Service endpoint
@Date:        2019-02-15 JER - Created to generate HL7 to send to file or via HL7v2 TCPIP Sender to receiving system
@Requirement: CSV format must be (unless modified):  msh_41,msh_61,pid_31,pid_51,pid_52,pid_7,pid_8,pid_131

@History
2019-02-15 JER - Modified to include HL7v3 File Writer (validated) and Web Service Sender (not validated)


</description>
  <revision>1</revision>
  <sourceConnector version="4.0.0">
    <metaDataId>0</metaDataId>
    <name>sourceConnector</name>
    <properties class="com.mirth.connect.connectors.file.FileReceiverProperties" version="4.0.0">
      <pluginProperties/>
      <pollConnectorProperties version="4.0.0">
        <pollingType>INTERVAL</pollingType>
        <pollOnStart>true</pollOnStart>
        <pollingFrequency>300000</pollingFrequency>
        <pollingHour>0</pollingHour>
        <pollingMinute>0</pollingMinute>
        <cronJobs/>
        <pollConnectorPropertiesAdvanced>
          <weekly>true</weekly>
          <inactiveDays>
            <boolean>false</boolean>
            <boolean>false</boolean>
            <boolean>false</boolean>
            <boolean>false</boolean>
            <boolean>false</boolean>
            <boolean>false</boolean>
            <boolean>false</boolean>
            <boolean>false</boolean>
          </inactiveDays>
          <dayOfMonth>1</dayOfMonth>
          <allDay>true</allDay>
          <startingHour>8</startingHour>
          <startingMinute>0</startingMinute>
          <endingHour>17</endingHour>
          <endingMinute>0</endingMinute>
        </pollConnectorPropertiesAdvanced>
      </pollConnectorProperties>
      <sourceConnectorProperties version="4.0.0">
        <responseVariable>None</responseVariable>
        <respondAfterProcessing>true</respondAfterProcessing>
        <processBatch>true</processBatch>
        <firstResponse>false</firstResponse>
        <processingThreads>1</processingThreads>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
        <queueBufferSize>1000</queueBufferSize>
      </sourceConnectorProperties>
      <scheme>FILE</scheme>
      <host>C:/temp/file/in</host>
      <fileFilter>*.csv</fileFilter>
      <regex>false</regex>
      <directoryRecursion>false</directoryRecursion>
      <ignoreDot>true</ignoreDot>
      <anonymous>true</anonymous>
      <username>anonymous</username>
      <password>anonymous</password>
      <timeout>10000</timeout>
      <secure>true</secure>
      <passive>true</passive>
      <validateConnection>true</validateConnection>
      <afterProcessingAction>MOVE</afterProcessingAction>
      <moveToDirectory>C:/Mirth Connect/files/archive</moveToDirectory>
      <moveToFileName>${originalFilename}_${SYSTIME}</moveToFileName>
      <errorReadingAction>NONE</errorReadingAction>
      <errorResponseAction>AFTER_PROCESSING</errorResponseAction>
      <errorMoveToDirectory></errorMoveToDirectory>
      <errorMoveToFileName></errorMoveToFileName>
      <checkFileAge>false</checkFileAge>
      <fileAge>1000</fileAge>
      <fileSizeMinimum>0</fileSizeMinimum>
      <fileSizeMaximum></fileSizeMaximum>
      <ignoreFileSizeMaximum>true</ignoreFileSizeMaximum>
      <sortBy>date</sortBy>
      <binary>false</binary>
      <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
    </properties>
    <transformer version="4.0.0">
      <elements>
        <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.0.0">
          <name>Parse CSV and Obectify</name>
          <sequenceNumber>0</sequenceNumber>
          <enabled>false</enabled>
          <script>var debug= 0;  // 0= OFF, 1= ON
var transDescription= &apos;Parse CSV and Build HL7&apos;
var objMsgContents= parseCSVtoObject(msg, debug);
channelMap.put(&apos;objMsgContents&apos;,objMsgContents);</script>
        </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        <com.mirth.connect.plugins.mapper.MapperStep version="4.0.0">
          <name>transactionDate</name>
          <sequenceNumber>1</sequenceNumber>
          <enabled>true</enabled>
          <variable>transactionDate</variable>
          <mapping>msg[&apos;row&apos;][0][&apos;column1&apos;].toString()</mapping>
          <defaultValue></defaultValue>
          <replacements/>
          <scope>CHANNEL</scope>
        </com.mirth.connect.plugins.mapper.MapperStep>
        <com.mirth.connect.plugins.mapper.MapperStep version="4.0.0">
          <name>referenceNumber</name>
          <sequenceNumber>2</sequenceNumber>
          <enabled>true</enabled>
          <variable>referenceNumber</variable>
          <mapping>msg[&apos;row&apos;][0][&apos;column2&apos;].toString()</mapping>
          <defaultValue></defaultValue>
          <replacements/>
          <scope>CHANNEL</scope>
        </com.mirth.connect.plugins.mapper.MapperStep>
        <com.mirth.connect.plugins.mapper.MapperStep version="4.0.0">
          <name>payeeName</name>
          <sequenceNumber>3</sequenceNumber>
          <enabled>true</enabled>
          <variable>payeeName</variable>
          <mapping>msg[&apos;row&apos;][0][&apos;column3&apos;].toString()</mapping>
          <defaultValue></defaultValue>
          <replacements/>
          <scope>CHANNEL</scope>
        </com.mirth.connect.plugins.mapper.MapperStep>
        <com.mirth.connect.plugins.mapper.MapperStep version="4.0.0">
          <name>transactionMemo</name>
          <sequenceNumber>4</sequenceNumber>
          <enabled>true</enabled>
          <variable>transactionMemo</variable>
          <mapping>msg[&apos;row&apos;][0][&apos;column4&apos;].toString()</mapping>
          <defaultValue></defaultValue>
          <replacements/>
          <scope>CHANNEL</scope>
        </com.mirth.connect.plugins.mapper.MapperStep>
        <com.mirth.connect.plugins.mapper.MapperStep version="4.0.0">
          <name>amount</name>
          <sequenceNumber>5</sequenceNumber>
          <enabled>true</enabled>
          <variable>amount</variable>
          <mapping>msg[&apos;row&apos;][0][&apos;column5&apos;].toString()</mapping>
          <defaultValue></defaultValue>
          <replacements/>
          <scope>CHANNEL</scope>
        </com.mirth.connect.plugins.mapper.MapperStep>
        <com.mirth.connect.plugins.mapper.MapperStep version="4.0.0">
          <name>categoryName</name>
          <sequenceNumber>6</sequenceNumber>
          <enabled>true</enabled>
          <variable>categoryName</variable>
          <mapping>msg[&apos;row&apos;][0][&apos;column6&apos;].toString()</mapping>
          <defaultValue></defaultValue>
          <replacements/>
          <scope>CHANNEL</scope>
        </com.mirth.connect.plugins.mapper.MapperStep>
      </elements>
      <inboundTemplate encoding="base64"></inboundTemplate>
      <outboundTemplate encoding="base64"></outboundTemplate>
      <inboundDataType>DELIMITED</inboundDataType>
      <outboundDataType>RAW</outboundDataType>
      <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="4.0.0">
        <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="4.0.0">
          <columnDelimiter>,</columnDelimiter>
          <recordDelimiter>\n</recordDelimiter>
          <quoteToken>&quot;</quoteToken>
          <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
          <quoteEscapeToken>\</quoteEscapeToken>
          <numberedRows>false</numberedRows>
          <ignoreCR>true</ignoreCR>
        </serializationProperties>
        <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="4.0.0">
          <columnDelimiter>,</columnDelimiter>
          <recordDelimiter>\n</recordDelimiter>
          <quoteToken>&quot;</quoteToken>
          <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
          <quoteEscapeToken>\</quoteEscapeToken>
        </deserializationProperties>
        <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="4.0.0">
          <splitType>Record</splitType>
          <batchSkipRecords>1</batchSkipRecords>
          <batchMessageDelimiter></batchMessageDelimiter>
          <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
          <batchGroupingColumn></batchGroupingColumn>
          <batchScript></batchScript>
        </batchProperties>
      </inboundProperties>
      <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="4.0.0">
        <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="4.0.0">
          <splitType>JavaScript</splitType>
          <batchScript></batchScript>
        </batchProperties>
      </outboundProperties>
    </transformer>
    <filter version="4.0.0">
      <elements/>
    </filter>
    <transportName>File Reader</transportName>
    <mode>SOURCE</mode>
    <enabled>true</enabled>
    <waitForPrevious>true</waitForPrevious>
  </sourceConnector>
  <destinationConnectors>
    <connector version="4.0.0">
      <metaDataId>9</metaDataId>
      <name>Destination DBWriter - localhost:3306/test</name>
      <properties class="com.mirth.connect.connectors.jdbc.DatabaseDispatcherProperties" version="4.0.0">
        <pluginProperties/>
        <destinationConnectorProperties version="4.0.0">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <driver>com.mysql.cj.jdbc.Driver</driver>
        <url>$mysqlUrlLocalHostString</url>
        <username>$mysqlUserId</username>
        <password></password>
        <query>var dbConn;

var selectStatement= &quot;SELECT 1 FROM test.account_activity WHERE activity_date= &apos;&quot;+$(&apos;transactionDate&apos;)+&quot;&apos; AND activity_description= &apos;&quot;+$(&apos;transactionMemo&apos;)+&quot;&apos; LIMIT 1&quot;;
channelMap.put(&apos;selectStatement&apos;,selectStatement);
var insertStatement= &quot;INSERT INTO test.account_activity (activity_account_type, payee_name, activity_category, activity_date, activity_description, activity_type, activity_amount, inserted_datetime) VALUES (&quot;;
channelMap.put(&apos;insertStatement&apos;,insertStatement);

var currentDateTime= new Date().toISOString().replace(/T/, &apos; &apos;).replace(/\..+/, &apos;&apos;);

var transactionDate= $(&apos;transactionDate&apos;).toString();
if(transactionDate.indexOf(&apos;/&apos;)&gt;1) {
	var convertTransactionDate= transactionDate.split(&apos;/&apos;)[2]+&apos;-&apos;+transactionDate.split(&apos;/&apos;)[0]+&apos;-&apos;+transactionDate.split(&apos;/&apos;)[1];
} else {
	var convertTransactionDate= transactionDate;
}


try {
	dbConn = DatabaseConnectionFactory.createDatabaseConnection(&apos;com.mysql.cj.jdbc.Driver&apos;,&apos;jdbc:mysql://localhost:3306/test&apos;,&apos;$mysqlUserId&apos;,&apos;&apos;);


	var resultSelect = dbConn.executeCachedQuery(selectStatement);
	var resultSize = resultSelect.size();

	if(resultSize&lt;1) {
		insertStatement+= &quot;&apos;Checking&apos;,&apos;&quot;+$(&apos;payeeName&apos;)+&quot;&apos;,&apos;&quot;+$(&apos;categoryName&apos;)+&quot;&apos;,&apos;&quot;+convertTransactionDate+&quot;&apos;,&apos;&quot;+$(&apos;transactionMemo&apos;)+&quot;&apos;,&apos;Debit&apos;,&apos;&quot;+$(&apos;amount&apos;)+&quot;&apos;,&apos;&quot;+currentDateTime+&quot;&apos;)&quot;;
		channelMap.put(&apos;insertStatement&apos;,insertStatement);
		var resultInsert = dbConn.executeUpdate(insertStatement);
	}

	/*
	while (result.next()) {
        	var entry = result.getString(1) + &quot;//&quot; + result.getString(2);
        	list.add(entry);
    	}
	*/

} finally {
	if (dbConn) { 
		dbConn.close();
	}
}</query>
        <useScript>true</useScript>
      </properties>
      <transformer version="4.0.0">
        <elements/>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="4.0.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="4.0.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="4.0.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="4.0.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="4.0.0">
        <elements/>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="4.0.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="4.0.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="4.0.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="4.0.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="4.0.0">
        <elements/>
      </filter>
      <transportName>Database Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="4.0.0">
      <metaDataId>5</metaDataId>
      <name>Send HL7v2 msg - File (C:/Mirth Connect/files/out/hl7v2)</name>
      <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="4.0.0">
        <pluginProperties/>
        <destinationConnectorProperties version="4.0.0">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <scheme>FILE</scheme>
        <host>C:/Mirth Connect/files/out/hl7v2/</host>
        <outputPattern>${PatientId}_${PatientLastName}_${PatientFirstName}_${SYSTIME}.hl7</outputPattern>
        <anonymous>true</anonymous>
        <username>anonymous</username>
        <password>anonymous</password>
        <timeout>10000</timeout>
        <keepConnectionOpen>true</keepConnectionOpen>
        <maxIdleTime>0</maxIdleTime>
        <secure>true</secure>
        <passive>true</passive>
        <validateConnection>true</validateConnection>
        <outputAppend>true</outputAppend>
        <errorOnExists>false</errorOnExists>
        <temporary>false</temporary>
        <binary>false</binary>
        <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
        <template>${message.encodedData}</template>
      </properties>
      <transformer version="4.0.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.0.0">
            <name>Create HL7v2</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var debug= 0;  // 0= OFF, 1= ON
var currDateTime= getCurrentDateTime();	// only supports YYYYMMDDHHMMSS
var transDescription= &apos;Create HL7v2&apos;
var objMsgContents= channelMap.get(&apos;objMsgContents&apos;);

// set or modify these values as needed
var msgCode= &apos;ADT&apos;;
var eventType= &apos;A08&apos;;
channelMap.put(&apos;msgType&apos;,msgCode+&apos;^&apos;+eventType);
channelMap.put(&apos;currentUUID&apos;,UUIDGenerator.getUUID());
channelMap.put(&apos;messageId&apos;,$(&apos;currentUUID&apos;));

var sendingApplication= &apos;MedHost&apos;;
var receivingApplication= &apos;YourHIE&apos;
var messageProcessingId= &apos;P&apos;;  // reference HL7 Table 0103 WHERE P= Production, T= Test, D= Debugging, N= Non-Production, V= Valdation
var hl7version= &apos;2.5&apos;;
var patientClass= &apos;O&apos;;  		// reference HL7 Table 0004 https://www.hl7.org/fhir/v2/0004/index.html
// var localAssigningAuthorityOid= &apos;&amp;1.2.3.4.5.6.7.8.9.0&amp;ISO&apos;; // if needed would be applied to PID.3.4.1 include local assigningAuthority Oid here
//
tmp[&apos;MSH&apos;][&apos;MSH.3&apos;][&apos;MSH.3.1&apos;]= sendingApplication;
tmp[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;]= objMsgContents.SendingFacility;
tmp[&apos;MSH&apos;][&apos;MSH.5&apos;][&apos;MSH.5.1&apos;]= receivingApplication;
tmp[&apos;MSH&apos;][&apos;MSH.6&apos;][&apos;MSH.6.1&apos;]= objMsgContents.ReceivingFacility;
tmp[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;]= currDateTime;
tmp[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.1&apos;]= msgCode;
tmp[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;]= eventType;
tmp[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;]= $(&apos;currentUUID&apos;);
tmp[&apos;MSH&apos;][&apos;MSH.11&apos;][&apos;MSH.11.1&apos;]= messageProcessingId;
tmp[&apos;MSH&apos;][&apos;MSH.12&apos;][&apos;MSH.12.1&apos;]= hl7version;
tmp[&apos;EVN&apos;][&apos;EVN.1&apos;][&apos;EVN.1.1&apos;]= eventType;
tmp[&apos;EVN&apos;][&apos;EVN.2&apos;][&apos;EVN.2.1&apos;]= currDateTime;
tmp[&apos;PID&apos;][&apos;PID.3&apos;][&apos;PID.3.1&apos;]= objMsgContents.PatientIdentifier;
tmp[&apos;PID&apos;][&apos;PID.3&apos;][&apos;PID.3.1&apos;]= objMsgContents.PatientIdentifier;

tmp[&apos;PID&apos;][&apos;PID.3&apos;][&apos;PID.3.4&apos;]= objMsgContents.SendingFacility;
// if need to include OID use this instead 
//tmp[&apos;PID&apos;][&apos;PID.3&apos;][&apos;PID.3.4&apos;]= objMsgContents.SendingFacility+localAssigningAuthorityOid;

tmp[&apos;PID&apos;][&apos;PID.5&apos;][&apos;PID.5.1&apos;]= objMsgContents.PatientLastName;
tmp[&apos;PID&apos;][&apos;PID.5&apos;][&apos;PID.5.2&apos;]= objMsgContents.PatientFirstName;
tmp[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;]= objMsgContents.PatientDOB;
tmp[&apos;PID&apos;][&apos;PID.8&apos;][&apos;PID.8.1&apos;]= objMsgContents.PatientGender.toString().substring(0, 1);
tmp[&apos;PID&apos;][&apos;PID.13&apos;][&apos;PID.13.1&apos;]= objMsgContents.PatientPhoneNumber;
tmp[&apos;PV1&apos;][&apos;PV1.2&apos;][&apos;PV1.2.1&apos;]= patientClass;

channelMap.put(&apos;hl7Message&apos;,tmp);
if(debug&gt;0) { logger.error(&apos;DEBUG::&apos;+transDescription+&apos; msg: &apos;+tmp); }</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64">Cg==</inboundTemplate>
        <outboundTemplate encoding="base64">TVNIfF5+XCZ8U0VORElOR19BUFBMSUNBVElPTnxTRU5ESU5HX0ZBQ0lMSVRZfFJFQ0VJVklOR19BUFBMSUNBVElPTnxSRUNFSVZJTkdfRkFDSUxJVFl8MjAxODA2MTIxMjQ1MTh8fEFEVF5BMDh8MTY1ODAxMjQ3fFB8Mi4zfHx8fApFVk58QTA4fDIwMTEwNjEzMDcyMDQ5fHx8ClBJRHwxfHwxNjU4MDEyNDdeXl5TRU5ESU5HX0ZBQ0lMSVRZXnx8VEVTVDE2NTgwMTI0N15URVNUUEVSU09OMTAwMHx8MTkyODExMTh8TXx8fHx8KDQwNyk5MzktMTI4OXwKUFYxfDF8fA==</outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="4.0.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="4.0.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="4.0.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="4.0.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="4.0.0">
        <elements/>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="4.0.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="4.0.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="4.0.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="4.0.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="4.0.0">
        <elements/>
      </filter>
      <transportName>File Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>false</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
  </destinationConnectors>
  <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
  <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
  <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data

// Deploy script 
// var dbConn = getMySqlConn();
// globalChannelMap.put(&apos;mysqlConn&apos;, dbConn);

return;</deployScript>
  <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
  <properties version="4.0.0">
    <clearGlobalChannelMap>true</clearGlobalChannelMap>
    <messageStorageMode>DEVELOPMENT</messageStorageMode>
    <encryptData>false</encryptData>
    <removeContentOnCompletion>false</removeContentOnCompletion>
    <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
    <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
    <initialState>STOPPED</initialState>
    <storeAttachments>false</storeAttachments>
    <metaDataColumns/>
    <attachmentProperties version="4.0.0">
      <type>None</type>
      <properties/>
    </attachmentProperties>
    <resourceIds class="linked-hash-map">
      <entry>
        <string>Default Resource</string>
        <string>[Default Resource]</string>
      </entry>
    </resourceIds>
  </properties>
  <exportData>
    <metadata>
      <enabled>false</enabled>
      <lastModified>
        <time>1638042784119</time>
        <timezone>America/Chicago</timezone>
      </lastModified>
      <pruningSettings>
        <archiveEnabled>true</archiveEnabled>
        <pruneErroredMessages>false</pruneErroredMessages>
      </pruningSettings>
    </metadata>
    <codeTemplateLibraries>
      <codeTemplateLibrary version="4.0.0">
        <id>e16c8d14-3775-4146-8975-0d93ea65b7c7</id>
        <name>CSV</name>
        <revision>5</revision>
        <lastModified>
          <time>1672445597904</time>
          <timezone>America/Chicago</timezone>
        </lastModified>
        <description></description>
        <includeNewChannels>false</includeNewChannels>
        <enabledChannelIds>
          <string>ab7d9121-bd5f-47c1-964a-53531cd178dd</string>
          <string>fba4345d-b56d-4b31-802c-cdac2248902d</string>
          <string>9ba29622-ed1f-4a34-9cbe-6f3df0eb3026</string>
        </enabledChannelIds>
        <disabledChannelIds>
          <string>c5aa527b-0e36-4790-8302-e1a6a472455e</string>
          <string>4e15d4c9-43b4-4d2c-9185-701707cd2f6a</string>
          <string>f7c77a5d-b086-4aed-aa56-e72984abd5ea</string>
          <string>65d47b29-67e5-4533-917c-337880fb8b17</string>
          <string>b7f455da-a5a4-4c75-be8f-d6f2c3561ac8</string>
          <string>42b2b012-ffc4-41ba-a71e-00fbd1cc1c67</string>
          <string>ead4368c-a612-459c-950e-50e49df05d9b</string>
          <string>81988bfb-2e74-4e25-ac01-1a000e027e97</string>
          <string>4964d3cc-7004-41c7-a704-da97ac92caf3</string>
          <string>954d2af0-df2c-46c6-95bc-02661a8d4424</string>
          <string>8664ea57-77f2-481d-8f1c-9b45761285e8</string>
          <string>fd14f323-1f60-4ec5-b3e1-6ce8248bbcf3</string>
          <string>e248ef99-284c-41f3-adac-d7b43433b16f</string>
          <string>14b7de16-de3e-4994-b123-b4d0d3d712aa</string>
          <string>6910529c-6cd1-4838-9a4f-d3c84faa2866</string>
          <string>8913e845-1fff-427c-bec0-e0a01d131f89</string>
          <string>19a0dcf7-3736-4b25-9049-80301c6cd04d</string>
          <string>f1688a2f-ece0-4292-b5f9-e56c50b6bc5a</string>
          <string>c74d49f9-3866-495c-a5b4-90cb4754c6f8</string>
          <string>7a3b0715-12e0-4803-aa51-c1a947ef9b66</string>
          <string>dff92eca-e23d-4802-8e3c-023f3af3e640</string>
          <string>a3e80233-747a-4ce0-9f8f-59dcbe8e2ca6</string>
          <string>0ace74f9-8ee8-45a5-8093-8d5bb95dae90</string>
          <string>32ea3c4a-9c59-4482-beb2-22d729e5e379</string>
          <string>a827a980-9c7f-410c-893a-141429f7b30a</string>
          <string>d6ea31a1-1aa6-4a53-adde-10a1bcdcd3c5</string>
          <string>4966bc7c-223c-4c44-8f71-4625cfcc0cc0</string>
          <string>72383579-097e-4205-b030-ce272c90b835</string>
          <string>88f9a267-e37f-418d-aaf2-d077b7a0cdca</string>
          <string>ace8b46e-8a2f-490e-afd1-24202f8b4b17</string>
          <string>a2b31875-5c31-4052-938f-a69550a8cb55</string>
          <string>37b05d6c-c044-4394-a60a-deaee676ce0d</string>
          <string>71368dee-5964-4073-bab7-ae0fd3ae90b0</string>
          <string>4c3b5879-a8d9-48be-83cc-5f7c5777a188</string>
          <string>c65d1ffa-65af-4ee8-803a-2f32b201889d</string>
          <string>a757905f-315a-43be-a624-38780a3d7574</string>
          <string>1c6037e0-7bf9-41ae-b896-5be7b77e711f</string>
          <string>631f9a02-6b74-4ecd-9582-221b98a0450e</string>
          <string>c2277647-41dc-4e15-bce4-2ae23cec064b</string>
          <string>c1fd4789-03e5-4ec3-91d2-cdded4b13365</string>
          <string>318f77fc-a631-48e0-8a4e-a87831bd81a7</string>
          <string>38e80069-5a80-4483-9a22-02c928973719</string>
          <string>ba9dcc01-6b1c-4fc3-afc4-cf1c5da9a8aa</string>
          <string>77033047-c5e7-4308-b2ed-d361923ed9a2</string>
          <string>2e0d9b6c-294f-4506-8632-dc4622b4f651</string>
          <string>a6fc8ba1-0134-4d1a-a341-cd9a2f295595</string>
          <string>a45d1db0-9b84-49d3-b26b-243dbf2a4f70</string>
          <string>bfc00235-7e2e-457a-b27f-e5288e9c28c4</string>
          <string>754a8caa-2161-45d8-b261-e32d8b0fb044</string>
          <string>c3882ee4-e2e6-47c6-8da9-801a847e0459</string>
          <string>076d39da-7152-40db-91a1-1746167239e9</string>
          <string>9370b181-aa9c-4db3-b7dc-2cd81cc91fdd</string>
          <string>e678dbf5-f021-43dc-84ae-967500d5c31a</string>
          <string>7741037b-845e-4e6d-b6aa-c9f249b06084</string>
          <string>c65024ed-4660-4423-9636-cb6309cae138</string>
          <string>0972a85f-5ad7-4a93-88e1-5f991b7f7879</string>
          <string>3fdef7e5-20e2-4e6f-aad4-a156ddb2e5e2</string>
          <string>a25fa941-8ba3-47eb-81d1-24c9e45fe29d</string>
          <string>1b12c7a8-abee-4c24-85a4-d3b447e9d280</string>
          <string>5cfc8ad8-0fb2-48bf-a318-1aabd86cf60e</string>
          <string>10ef3f18-f1c1-495c-80be-026eb56436c5</string>
          <string>c15d4352-13b2-4698-a771-b3593449d7ba</string>
          <string>64e32643-e41c-4986-9550-c634cb02f9ba</string>
          <string>347deee2-a3c1-4542-bc3e-c619defe0b64</string>
          <string>9e040198-05cf-11e8-ba89-0ed5f89f718b</string>
          <string>dc8e6472-bc7e-4ebe-a8dd-968b791e2975</string>
          <string>66487d57-e34e-4a9a-8296-e62a66d3ab8b</string>
          <string>99b43124-34ef-4ead-a348-ef0ac0a52539</string>
          <string>4c2e73a8-aabe-4c04-9ba5-50ab49d3cb95</string>
          <string>0df5acd6-0251-4546-9d35-ed7f1515e00b</string>
          <string>db4e2d12-f41b-4da9-87b8-a1feb4c29054</string>
          <string>a6ec1677-5012-430f-bcbc-f41fe39ecf1f</string>
          <string>5c5b6b2c-f3fd-456d-a90d-d684b5fb061e</string>
          <string>42e730bb-0721-435e-8dcf-d25d6d5d1dc6</string>
          <string>c90c935e-e3de-4ffe-839f-5560b39f07fb</string>
          <string>18803b99-6545-4d09-9277-a559ee2e94fd</string>
          <string>5231fded-a3aa-44e8-bd77-3ad84d39e1d2</string>
          <string>89faf430-5bd7-4440-9ed0-4b02d3462403</string>
        </disabledChannelIds>
        <codeTemplates>
          <codeTemplate version="4.0.0">
            <id>57cb9c3b-3e0a-4a17-9c1a-fcc6d0d4ee16</id>
            <name>createHL7FromObject</name>
            <revision>1</revision>
            <lastModified>
              <time>1650911308116</time>
              <timezone>GMT-06:00</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>/** createHL7FromObject

  	- Desc: This function receives an Object and returns formed HL7 in XML format
  	- Modified
	2020-03-04 JER - Created
	
Message Structure

MSH|^~\&amp;|||||||&lt;Event&gt;||&lt;Processing ID&gt;|&lt;Version&gt;|
PID|||&lt;Patient Identifiers&gt;||&lt;Patient Name&gt;||&lt;Date of Birth&gt;|&lt;Sex&gt;||||||||||&lt;PatientVisit ID&gt;|&lt;SSN&gt;|
PV1|||&lt;Patient Location&gt;||||||||||||||||&lt;Patient Visit ID&gt;|
TXA||&lt;Report Type&gt;||&lt;Activity Date/Time&gt;|&lt;Primary Provider ID&gt;|&lt;Origination
Date/Time&gt;|&lt;Transcription Date/Time&gt;|||&lt;Assigned Document Authenticator ID&gt;||&lt;Document ID&gt;|||||&lt;Document Completion Status&gt;||&lt;Document Availability Status&gt;|
OBX||&lt;Value Type&gt;|||&lt;Observation Value&gt;|||&lt;Abnormal Flag&gt;|


Data Element Details
Required
	PID-3: Patient Identifiers
	TXA-2: Report Type
	TXA-4: Activity Date/Time
	TXA-5: Primary Activity Provider ID
 	TXA-12: Document ID - Unique ID that globally identifies a document
	OBX-2: Value Type - TX or FT for transcriptions. RP for reference pointers
	OBX-5: Observation Value - Body of the document

	
   	@param {String} msg - this contains a RAW message (i.e. msg)
	@return {Object} objMsgContent - this object contains objectification of the RAW msg string
*/
function createHL7FromObject (msgObject, debug) {

	var debug= 0;  // 0= OFF, 1= ON
	var currDateTime= getCurrentDateTime();	// only supports YYYYMMDDHHMMSS
	var transDescription= &apos;createHL7FromObject&apos;;
	var objMsgContent= msgObject;

	// set or modify these values as needed
	var setID = &apos;1&apos;;
	var msgCode= &apos;MDM&apos;;
	var eventType= &apos;T02&apos;;
	channelMap.put(&apos;msgType&apos;,msgCode+&apos;^&apos;+eventType);
	channelMap.put(&apos;currentUUID&apos;,UUIDGenerator.getUUID());
	channelMap.put(&apos;messageId&apos;,$(&apos;currentUUID&apos;));
	
	var sendingApplication= &apos;ABC-APPLICATION&apos;;
	var receivingApplication= &apos;EPIC&apos;
	var messageProcessingId= &apos;P&apos;;  // reference HL7 Table 0103 WHERE P= Production, T= Test, D= Debugging, N= Non-Production, V= Valdation
	var hl7version= &apos;2.3&apos;;
	var patientClass= &apos;I&apos;;  		// reference HL7 Table 0004 https://www.hl7.org/fhir/v2/0004/index.html
	//
	tmp[&apos;MSH&apos;][&apos;MSH.3&apos;][&apos;MSH.3.1&apos;]= sendingApplication;
	tmp[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;]= channelMap.get(&apos;SendingFacility&apos;);
	tmp[&apos;MSH&apos;][&apos;MSH.5&apos;][&apos;MSH.5.1&apos;]= receivingApplication;
	tmp[&apos;MSH&apos;][&apos;MSH.6&apos;][&apos;MSH.6.1&apos;]= channelMap.get(&apos;ReceivingFacility&apos;);
	tmp[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;]= currDateTime;
	tmp[&apos;MSH&apos;][&apos;MSH.8&apos;][&apos;MSH.8.1&apos;]= &apos;&apos;;
	tmp[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.1&apos;]= msgCode;
	tmp[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;]= eventType;
	tmp[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;]= $(&apos;currentUUID&apos;);
	tmp[&apos;MSH&apos;][&apos;MSH.11&apos;][&apos;MSH.11.1&apos;]= messageProcessingId;
	tmp[&apos;MSH&apos;][&apos;MSH.12&apos;][&apos;MSH.12.1&apos;]= hl7version;
	
	tmp[&apos;PID&apos;][&apos;PID.1&apos;][&apos;PID.1.1&apos;] = setID;
	tmp[&apos;PID&apos;][&apos;PID.3&apos;][&apos;PID.3.1&apos;]= objMsgContent.PatId;
	tmp[&apos;PID&apos;][&apos;PID.5&apos;][&apos;PID.5.1&apos;]= objMsgContent.PatientLastNm;
	tmp[&apos;PID&apos;][&apos;PID.5&apos;][&apos;PID.5.2&apos;]= objMsgContent.PatientFirstNm;
	tmp[&apos;PID&apos;][&apos;PID.5&apos;][&apos;PID.5.3&apos;]= objMsgContent.PatientMiddleNm;
	tmp[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;]= objMsgContent.PatientDOB;
	tmp[&apos;PID&apos;][&apos;PID.8&apos;][&apos;PID.8.1&apos;]= objMsgContent.PatientGender.toString().substring(0, 1);
	tmp[&apos;PID&apos;][&apos;PID.18&apos;][&apos;PID.18.1&apos;]= objMsgContent.EncounterId;
	tmp[&apos;PID&apos;][&apos;PID.19&apos;][&apos;PID.19.1&apos;]= objMsgContent.PatientSSN;
	
	tmp[&apos;PV1&apos;][&apos;PV1.1&apos;][&apos;PV1.1.1&apos;] = setID;
	tmp[&apos;PV1&apos;][&apos;PV1.19&apos;][&apos;PV1.19.1&apos;] = objMsgContent.EncounterId;
	
	tmp[&apos;TXA&apos;][&apos;TXA.1&apos;][&apos;TXA.1.1&apos;] = setID;
	tmp[&apos;TXA&apos;][&apos;TXA.2&apos;][&apos;TXA.2.1&apos;] = objMsgContent.ReportType;
	tmp[&apos;TXA&apos;][&apos;TXA.4&apos;][&apos;TXA.4.1&apos;] = objMsgContent.Activity_DTTM;
	tmp[&apos;TXA&apos;][&apos;TXA.5&apos;][&apos;TXA.5.1&apos;] = objMsgContent.ProvId;
	tmp[&apos;TXA&apos;][&apos;TXA.4&apos;][&apos;TXA.6.1&apos;] = objMsgContent.OriginiationDTTM;
	tmp[&apos;TXA&apos;][&apos;TXA.4&apos;][&apos;TXA.7.1&apos;] = objMsgContent.TranscribedDTTM;
	tmp[&apos;TXA&apos;][&apos;TXA.12&apos;][&apos;TXA.12.1&apos;] = objMsgContent.DocumentId;
	tmp[&apos;TXA&apos;][&apos;TXA.12&apos;][&apos;TXA.17.1&apos;] = objMsgContent.DOCStatus.toString().substring(0, 1);
	
	tmp[&apos;OBX&apos;][&apos;OBX.1&apos;][&apos;OBX.1.1&apos;] = setID;
	tmp[&apos;OBX&apos;][&apos;OBX.2&apos;][&apos;OBX.2.1&apos;] = objMsgContent.ValueType; 
	tmp[&apos;OBX&apos;][&apos;OBX.5&apos;][&apos;OBX.5.1&apos;] = objMsgContent.DocumentBodyRTF;
	
	if (debug&gt;0) { logger.error(transDescription+&apos; tmp: &apos;+tmp); }	
	// var message = SerializerFactory.getSerializer(&apos;HL7V2&apos;).fromXML(tmp);
	
	return tmp;
}</code>
            </properties>
          </codeTemplate>
          <codeTemplate version="4.0.0">
            <id>52de370a-1383-4a87-91d9-0edfc5b1b195</id>
            <name>getCurrentDateTime</name>
            <revision>1</revision>
            <lastModified>
              <time>1650911308073</time>
              <timezone>GMT-06:00</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>/** getCurrentDateTime

  	- Desc: This function returns current DateTime only YYYYMMDDHHMMSS format

	@return {string} datetime - this string object contains the current DateTime only YYYYMMDDHHMMSS format
*/
function getCurrentDateTime() {
	var today = new Date();
	// set Date with leading zeros if needed
	var tMonth= today.getMonth()+1;
	if(tMonth.toString().length&lt;2) tMonth= &apos;0&apos;+tMonth;
	var tDay= today.getDate()
	if(tDay.toString().length&lt;2) tDay= &apos;0&apos;+tDay;
	var date = today.getFullYear()+&apos;&apos;+tMonth+&apos;&apos;+tDay;
	
	// set Time with leading zeros if needed
	var tHour= today.getHours();
	if(tHour.toString().length&lt;2) tHour= &apos;0&apos;+tHour;
	var tMinute= today.getMinutes();
	if(tMinute.toString().length&lt;2) tMinute= &apos;0&apos;+tMinute;
	var tSecond= today.getSeconds();
	if(tSecond.toString().length&lt;2) tSecond= &apos;0&apos;+tSecond;
	
	var time = tHour+&apos;&apos;+tMinute+&apos;&apos;+tSecond;
	var dateTime = date+&apos;&apos;+time;

	return dateTime;
}</code>
            </properties>
          </codeTemplate>
          <codeTemplate version="4.0.0">
            <id>b2763dd8-0786-491f-940f-62342980ffd0</id>
            <name>occurrences</name>
            <revision>1</revision>
            <lastModified>
              <time>1650911308138</time>
              <timezone>GMT-06:00</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>/** occurrences

	-Desc: This function that count occurrences of a substring in a string.
	
 	@param {String} string               The string
 	@param {String} subString            The sub string to search for
 	@param {Boolean} [allowOverlapping]  Optional. (Default:false)
 	
 	@author Vitim.us https://gist.github.com/victornpb/7736865
 	@see Unit Test https://jsfiddle.net/Victornpb/5axuh96u/
 	@see http://stackoverflow.com/questions/4009756/how-to-count-string-occurrence-in-string/7924240#7924240
 */
function occurrences(string, subString, allowOverlapping) {

    string += &quot;&quot;;
    subString += &quot;&quot;;
    if (subString.length &lt;= 0) return (string.length + 1);

    var n = 0,
        pos = 0,
        step = allowOverlapping ? 1 : subString.length;

    while (true) {
        pos = string.indexOf(subString, pos);
        if (pos &gt;= 0) {
            ++n;
            pos += step;
        } else break;
    }
    return n;
}</code>
            </properties>
          </codeTemplate>
          <codeTemplate version="4.0.0">
            <id>ae1b069c-7384-490e-b649-b8aaf508eb9c</id>
            <name>parseCSVtoObject</name>
            <revision>1</revision>
            <lastModified>
              <time>1650911308185</time>
              <timezone>GMT-06:00</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>/** parseCSVtoObject

  	- Desc: This function receives a RAW msg string and returns string objectified

   	@param {String} msg - this contains a RAW message (i.e. msg)
	@return {Object} objMsgContents - this object contains objectification of the RAW msg string
*/
function parseCSVtoObject (msg, debug) {

	// var debug=1; // 0= OFF, 1= channelMap, 2= logger.error
	var funcDescription= &apos;parseCSVtoObject&apos;;
	if(debug&gt;0) { logger.error(&apos;DEBUG::&apos;+funcDescription+&apos; msg: &apos;+msg); }
	
	// create obj Message Contents
	var objMsgContents= new Object(); 
	
// CHS FACILITY NAME
	if(msg[&apos;row&apos;][&apos;column1&apos;].toString().length&gt;0) {
		objMsgContents.FacName= msg[&apos;row&apos;][&apos;column1&apos;].toString();
	} else {
		objMsgContents.FacName= &apos;&apos;;
	}
	channelMap.put(&apos;FacName&apos;,objMsgContents.FacName);	
// CHS REGION
	if(msg[&apos;row&apos;][&apos;column2&apos;].toString().length&gt;0) {
		objMsgContents.ChsRegion= msg[&apos;row&apos;][&apos;column2&apos;].toString();
	} else {
		objMsgContents.ChsRegion= &apos;X&apos;;
	}
	channelMap.put(&apos;ChsRegion&apos;,objMsgContents.ChsRegion);
// CHS EHR SYSTEM	
	if(msg[&apos;row&apos;][&apos;column3&apos;].toString().length&gt;0) {
		objMsgContents.adtEHR= msg[&apos;row&apos;][&apos;column3&apos;].toString();
	} else {
		objMsgContents.adtEHR= &apos;&apos;;
	}
	channelMap.put(&apos;adtEHR&apos;,objMsgContents.adtEHR);	
// SENDING FACILITY	
	if(msg[&apos;row&apos;][&apos;column4&apos;].toString().length&gt;0) {
		objMsgContents.SendingFacility= msg[&apos;row&apos;][&apos;column4&apos;].toString()
	} else {
		objMsgContents.SendingFacility= &apos;&apos;;
	}
// RECV FACILITY	
	if(msg[&apos;row&apos;][&apos;column5&apos;].toString().length&gt;0) {
		objMsgContents.ReceivingFacility= msg[&apos;row&apos;][&apos;column5&apos;].toString();
	} else {
		objMsgContents.ReceivingFacility= &apos;&apos;;
	}
	channelMap.put(&apos;ReceivingFacility&apos;,objMsgContents.ReceivingFacility);
// PAT MRN	
	if(msg[&apos;row&apos;][&apos;column6&apos;].toString().length&gt;0) {
		objMsgContents.PatientIdentifier= msg[&apos;row&apos;][&apos;column6&apos;].toString();
	} else {
		objMsgContents.PatientIdentifier= &apos;&apos;;
	}
	channelMap.put(&apos;PatientId&apos;,objMsgContents.PatientIdentifier);		
// PAT ACCT #	
	if(msg[&apos;row&apos;][&apos;column7&apos;].toString().length&gt;0) {
		objMsgContents.PatientAcct= msg[&apos;row&apos;][&apos;column7&apos;].toString();
	} else {
		objMsgContents.PatientAcct= &apos;&apos;;
	}
	channelMap.put(&apos;PatientAcct&apos;,objMsgContents.PatientAcct);	
// PAT LAST NAME	
	if(msg[&apos;row&apos;][&apos;column8&apos;].toString().length&gt;0) {
		objMsgContents.PatientLastName= msg[&apos;row&apos;][&apos;column8&apos;].toString();
	} else {
		objMsgContents.PatientLastName= &apos;&apos;;
	}
	channelMap.put(&apos;PatientLastName&apos;,objMsgContents.PatientLastName);
// PAT ADDRESS FIRST NAME	
	if(msg[&apos;row&apos;][&apos;column9&apos;].toString().length&gt;0) {
		objMsgContents.PatientFirstName= msg[&apos;row&apos;][&apos;column9&apos;].toString();
	} else {
		objMsgContents.PatientFirstName= &apos;&apos;;
	}
	channelMap.put(&apos;PatientFirstName&apos;,objMsgContents.PatientFirstName);
// PAT ADDRESS DOB	
	if(msg[&apos;row&apos;][&apos;column10&apos;].toString().length&gt;0) {
		objMsgContents.PatientDOB= msg[&apos;row&apos;][&apos;column10&apos;].toString();
	} else {
		objMsgContents.PatientDOB= &apos;19000101&apos;;
	}
// PAT GENDER	
	if(msg[&apos;row&apos;][&apos;column11&apos;].toString().length&gt;0) {
		objMsgContents.PatientGender= msg[&apos;row&apos;][&apos;column11&apos;].toString();
	} else {
		objMsgContents.PatientGender= &apos;&apos;;
	}
// PAT PHONE	
	if(msg[&apos;row&apos;][&apos;column12&apos;].toString().length&gt;0) {
		objMsgContents.PatientPhoneNumber= msg[&apos;row&apos;][&apos;column12&apos;].toString();
	} else {
		objMsgContents.PatientPhoneNumber= &apos;&apos;;
	}
// PAT ADDRESS STREET	
	if(msg[&apos;row&apos;][&apos;column13&apos;].toString().length&gt;0) {
		objMsgContents.PatientAddressStreet= msg[&apos;row&apos;][&apos;column13&apos;].toString();
	} else {
		objMsgContents.PatientAddressStreet= &apos;&apos;;
	}
	channelMap.put(&apos;PatientAddressStreet&apos;,objMsgContents.PatientAddressStreet);
// PAT ADDRESS CITY	
	if(msg[&apos;row&apos;][&apos;column14&apos;].toString().length&gt;0) {
		objMsgContents.PatientAddressCity= msg[&apos;row&apos;][&apos;column14&apos;].toString();
	} else {
		objMsgContents.PatientAddressCity= &apos;&apos;;
	}
	channelMap.put(&apos;PatientAddressCity&apos;,objMsgContents.PatientAddressCity);
// PAT ADDRESS ST	
	if(msg[&apos;row&apos;][&apos;column15&apos;].toString().length&gt;0) {
		objMsgContents.PatientAddressState= msg[&apos;row&apos;][&apos;column15&apos;].toString();
	} else {
		objMsgContents.PatientAddressState= &apos;&apos;;
	}
	channelMap.put(&apos;PatientAddressState&apos;,objMsgContents.PatientAddressState);	
// PAT ADDRESS ZIP
	if(msg[&apos;row&apos;][&apos;column16&apos;].toString().length&gt;0) {
		objMsgContents.PatientAddressZip= msg[&apos;row&apos;][&apos;column16&apos;].toString();
	} else {
		objMsgContents.PatientAddressZip= &apos;&apos;;
	}
	channelMap.put(&apos;PatientAddressZip&apos;,objMsgContents.PatientAddressZip);	
	
	if(debug&gt;0) { logger.error(&apos;DEBUG::&apos;+funcDescription+&apos; object: &apos;+JSON.stringify(objMsgContents)); }
	return objMsgContents;
} // end function</code>
            </properties>
          </codeTemplate>
          <codeTemplate version="4.0.0">
            <id>20fccfb1-1271-4619-a849-649feea2da3c</id>
            <name>parseHL7MDMtoObject</name>
            <revision>1</revision>
            <lastModified>
              <time>1650911308161</time>
              <timezone>GMT-06:00</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>/** parseHL7MDMtoObject

  	- Desc: This function receives a RAW HL7v2 MDM message string and returns string objectified
  	- Modified
	2020-03-03 JER - Modified to iterate through the instances of the row XML object into JS Object
	2020-03-27 JER - parse DOB to provide YYYYMMDD format
	
   	@param {String} msg - this contains a RAW message (i.e. msg)
	@return {Object} objMsgContent - this object contains objectification of the RAW msg string
*/
function parseHL7MDMtoObject (msg, debug) {

	// var debug=1; // 0= OFF, 1= channelMap, 2= logger.error
	var funcDescription= &apos;parseHL7MDMtoObject&apos;;
	var intCount= 0;
	var chkNumeric= false;
	if(debug&gt;0) { logger.error(&apos;DEBUG::&apos;+funcDescription+&apos; msg: &apos;+msg); } 

	var arrORUMessageSegments= new Array();

	for each(element in msg.children()) {
		if (element.name()== &apos;MSH&apos;) {
			var msgSegment= new Object();
			msgSegment.SendingApplication= 		element[&apos;MSH.3&apos;][&apos;MSH.3.1&apos;].toString();
			msgSegment.SendingFacility= 			element[&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString();
			msgSegment.ReceivingApplication=		element[&apos;MSH.5&apos;][&apos;MSH.5.1&apos;].toString();
			msgSegment.ReceivingFacility=			element[&apos;MSH.6&apos;][&apos;MSH.6.1&apos;].toString();
			msgSegment.MessageDateTime=			element[&apos;MSH.7&apos;][&apos;MSH.7.1&apos;].toString();
			msgSegment.MessagesType=				element[&apos;MSH.9&apos;][&apos;MSH.9.1&apos;].toString();
			msgSegment.MessageEventType=			element[&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString();
			msgSegment.MessageControlId=			element[&apos;MSH.10&apos;][&apos;MSH.10.1&apos;].toString();
			arrORUMessageSegments.push(msgSegment);
		} else if (element.name()== &apos;PID&apos;) {
			var msgSegment= new Object();
			msgSegment.PatientId= 				element[&apos;PID.3&apos;][&apos;PID.3.1&apos;].toString();
			msgSegment.LastName=				element[&apos;PID.5&apos;][&apos;PID.5.1&apos;].toString();
			msgSegment.FirstName=				element[&apos;PID.5&apos;][&apos;PID.5.2&apos;].toString();
			msgSegment.MiddleName=				element[&apos;PID.5&apos;][&apos;PID.5.2&apos;].toString();
			msgSegment.DateOfBirth=				element[&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString();
			msgSegment.Gender=					element[&apos;PID.8&apos;][&apos;PID.8.1&apos;].toString();
			msgSegment.AccountNumber=			element[&apos;PID.18&apos;][&apos;PID.18.1&apos;].toString();
			msgSegment.SSN=					element[&apos;PID.19&apos;][&apos;PID.19.1&apos;].toString();
			arrORUMessageSegments.push(msgSegment);
		} else if (element.name()== &apos;PV1&apos;) {
			msgSegment.VisitNumber=				element[&apos;PV1.19&apos;][&apos;PV1.19.1&apos;].toString();
			arrORUMessageSegments.push(msgSegment);
		} else if (element.name()== &apos;TXA&apos;) {
			var documentType=					element[&apos;TXA.2&apos;][&apos;TXA.2.1&apos;].toString();
			msgSegment.DocumentType=				documentType;
			var activityDateTime=				element[&apos;TXA.4&apos;][&apos;TXA.4.2&apos;].toString().replace(/[^0-9a-zA-Z]/g,&apos;&apos;);
			msgSegment.ActivityDateTime=			activityDateTime.substring(0,8);
			msgSegment.OriginationDateTime=		activityDateTime.substring(0,8);
			msgSegment.TranscriptionDateTime=		activityDateTime.substring(0,8);
			msgSegment.ProviderCode=				element[&apos;TXA.5&apos;][&apos;TXA.5.1&apos;].toString();
			msgSegment.DocumentNumberId=			element[&apos;TXA.12&apos;][&apos;TXA.12.1&apos;].toString();
			msgSegment.DocumentNamespaceId=		element[&apos;TXA.12&apos;][&apos;TXA.12.2&apos;].toString();
			arrORUMessageSegments.push(msgSegment);
		} else if (element.name()== &apos;OBX&apos;) {
			msgSegment.ValueType=				documentType;
			msgSegment.ObservationId=			element[&apos;OBX.2&apos;][&apos;OBX.2.1&apos;].toString();
			arrORUMessageSegments.push(msgSegment);
		}
	}

	if(debug&gt;0) { logger.error(&apos;arrORUMessageSegments.length: &apos;+arrORUMessageSegments.length); }
	channelMap.put(&apos;arrORUMessageSegments&apos;,arrORUMessageSegments);
	return arrORUMessageSegments;
}</code>
            </properties>
          </codeTemplate>
          <codeTemplate version="4.0.0">
            <id>41993c2f-fcb7-49bc-8ca4-6347847c3743</id>
            <name>parseRTFtoObject</name>
            <revision>1</revision>
            <lastModified>
              <time>1650911308096</time>
              <timezone>GMT-06:00</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>/** parseRTFtoObject

  	- Desc: This function receives a RAW msg string and returns string objectified
  	- Modified
	2020-03-03 JER - Modified to iterate through the instances of the row XML object into JS Object
	2020-03-27 JER - parse DOB to provide YYYYMMDD format
	
   	@param {String} msg - this contains a RAW message (i.e. msg)
	@return {Object} objMsgContent - this object contains objectification of the RAW msg string
*/
function parseRTFtoObject (msg, debug) {

	// var debug=1; // 0= OFF, 1= channelMap, 2= logger.error
	var funcDescription= &apos;parseRTFtoObject&apos;;
	var intCount= 0;
	var chkNumeric= false;
	if(debug&gt;0) { logger.error(&apos;DEBUG::&apos;+funcDescription+&apos; msg: &apos;+msg); } 

	// create Message objects
	var arrMsgContents= new Array();
	
	for each (row in msg[&apos;row&apos;]) {
		if (row.children().length()&gt;1) {
			if(debug&gt;0) { 
				logger.error(&apos;row[&apos;+intCount+&apos;].children.length: &apos;+row.children().length()+&apos; row children names: &apos;+row.children());
			}
			
			for each (child in row.children()) {
				
				if (child.localName().toString() == &apos;Patient_ID&apos;) {
					chkNumeric= isNumeric(child.toString());
					if(debug&gt;0) {
						logger.error(child.localName().toString()+&apos;.isNumeric:&apos;+chkNumeric);
					}
					if(isNumeric(child.toString())== true) {
						// create each Message object
						var objMsgContent= new Object();
						
						// Patient ID
						if(child.toString().length&gt;0) {
							objMsgContent.PatId= child.toString();
						} else {
							objMsgContent.PatId= &apos;&apos;;
						}
						//channelMap.put(&apos;PatId&apos;,objMsgContent.PatId);
					}
				}

				if(chkNumeric==  true) {
					// ReportType
					if(child.localName().toString() == &apos;ReportType&apos;) {
						if(child.toString().length&gt;0) {
							objMsgContent.ReportType= child.toString();
						} else {
							objMsgContent.ReportType= &apos;X&apos;;
						}	
						//channelMap.put(&apos;ReportType&apos;,objMsgContent.ReportType);
					// Activity_DTTM	
					} else if(child.localName().toString() == &apos;Activity_DTTM&apos;) {
						if(child.toString().length&gt;0) {
							objMsgContent.ActivityDT= child.toString();
						} else {
							objMsgContent.ActivityDT= &apos;&apos;;
						}	
						//channelMap.put(&apos;ActivityDT&apos;,objMsgContent.ActivityDT);
					// Prov_ID	
					} else if(child.localName().toString() == &apos;Prov_ID&apos;) {
						if(child.toString().length&gt;0) {
							objMsgContent.ProvId= child.toString();
						} else {
							objMsgContent.ProvId= &apos;&apos;;
						}	
						//channelMap.put(&apos;ProvId&apos;,objMsgContent.ProvId);
					// Prov_Last_Nm
					} else if(child.localName().toString() == &apos;Prov_Last_Nm&apos;) {
						if(child.toString().length&gt;0) {
							objMsgContent.ProvLastNm= child.toString();
						} else {
							objMsgContent.ProvLastNm= &apos;&apos;;
						}	
						// channelMap.put(&apos;ProvLastNm&apos;,objMsgContent.ProvLastNm);
					// Prov_First_Nm
					} else if(child.localName().toString() == &apos;Prov_First_Nm&apos;) {
						if(child.toString().length&gt;0) {
							objMsgContent.ProvFirstNm= child.toString();
						} else {
							objMsgContent.ProvFirstNm= &apos;&apos;;
						}	
						// channelMap.put(&apos;ProvFirstNm&apos;,objMsgContent.ProvFirstNm);
					// Prov_Middle_Nm
					} else if(child.localName().toString() == &apos;Prov_Middle_Nm&apos;) {
						if(child.toString().length&gt;0) {
							objMsgContent.ProvMiddleNm= child.toString();
						} else {
							objMsgContent.ProvMiddleNm= &apos;&apos;;
						}	
						// channelMap.put(&apos;ProvMiddleNm&apos;,objMsgContent.ProvFirstNm);
					// DocumentID
					} else if(child.localName().toString() == &apos;DocumentID&apos;) {
						if(child.toString().length&gt;0) {
							objMsgContent.DocumentId= child.toString();
						} else {
							objMsgContent.DocumentId= &apos;&apos;;
						}	
						// channelMap.put(&apos;DocumentId&apos;,objMsgContent.DocumentId);
					// Value_Type
					} else if(child.localName().toString() == &apos;Value_Type&apos;) {
						if(child.toString().length&gt;0) {
							objMsgContent.ValueType= child.toString();
						} else {
							objMsgContent.ValueType= &apos;&apos;;
						}	
						// channelMap.put(&apos;ValueType&apos;,objMsgContent.ValueType);							
					// Patient_Last_Nm
					} else if(child.localName().toString() == &apos;Patient_Last_Nm&apos;) {
						if(child.toString().length&gt;0) {
							objMsgContent.PatientLastNm= child.toString();
						} else {
							objMsgContent.PatientLastNm= &apos;&apos;;
						}	
						// channelMap.put(&apos;PatientLastNm&apos;,objMsgContent.PatientLastNm);
					// Patient_First_Nm
					} else if(child.localName().toString() == &apos;Patient_First_Nm&apos;) {
						if(child.toString().length&gt;0) {
							objMsgContent.PatientFirstNm= child.toString();
						} else {
							objMsgContent.PatientFirstNm= &apos;&apos;;
						}	
						// channelMap.put(&apos;PatientFirstNm&apos;,objMsgContent.PatientFirstNm);
					// Patient_Middle_Nm
					} else if(child.localName().toString() == &apos;Patient_Middle_Nm&apos;) {
						if(child.toString().length&gt;0) {
							objMsgContent.PatientMiddleNm= child.toString();
						} else {
							objMsgContent.PatientMiddleNm= &apos;&apos;;
						}	
						// channelMap.put(&apos;PatientMiddleNm&apos;,objMsgContent.PatientMiddleNm);
					// Patient_DOB
					} else if(child.localName().toString() == &apos;Patient_DOB&apos;) {
						if(child.toString().length&gt;0) {

							// 2020-03-27 JER - parse DOB to provide YYYYMMDD format
							var strPatientDOB= 	child.toString().replace(/-/g,&apos;&apos;).replace(/:/g,&apos;&apos;).replace(&apos; &apos;,&apos;&apos;);
							var newPatientDOB= 	strPatientDOB.substring(0,8);
							if(debug&gt;0) { logger.error(&apos;DEBUG::&apos;+funcDescription+&apos; strPatientDOB: &apos;+strPatientDOB+&apos; newPatientDOB: &apos;+newPatientDOB); } 
							objMsgContent.PatientDOB= newPatientDOB;
							// objMsgContent.PatientDOB= child.toString();
						} else {
							objMsgContent.PatientDOB= &apos;&apos;;
						}	
						// channelMap.put(&apos;PatientDOB&apos;,objMsgContent.PatientDOB);
					// Patient_Gender
					} else if(child.localName().toString() == &apos;Patient_Gender&apos;) {
						if(child.toString().length&gt;0) {
							objMsgContent.PatientGender= child.toString();
						} else {
							objMsgContent.PatientGender= &apos;&apos;;
						}	
						// channelMap.put(&apos;PatientGender&apos;,objMsgContent.PatientGender);
					// Encounter_ID
					} else if(child.localName().toString() == &apos;Encounter_ID&apos;) {
						if(child.toString().length&gt;0) {
							objMsgContent.EncounterID= child.toString();
						} else {
							objMsgContent.EncounterID= &apos;&apos;;
						}	
						// channelMap.put(&apos;EncounterID&apos;,objMsgContent.EncounterID);
					// Patient_SSN
					} else if(child.localName().toString() == &apos;Patient_SSN&apos;) {
						if(child.toString().length&gt;0) {
							objMsgContent.PatientSSN= child.toString();
						} else {
							objMsgContent.PatientSSN= &apos;&apos;;
						}	
						// channelMap.put(&apos;PatientSSN&apos;,objMsgContent.PatientSSN);
					// DOCStatus
					} else if(child.localName().toString() == &apos;DOCStatus&apos;) {
						if(child.toString().length&gt;0) {
							objMsgContent.DOCStatus= child.toString();
						} else {
							objMsgContent.DOCStatus= &apos;&apos;;
						}	
						// channelMap.put(&apos;DOCStatus&apos;,objMsgContent.DOCStatus);	
					// OriginiationDTTM
					} else if(child.localName().toString() == &apos;OriginiationDTTM&apos;) {
						if(child.toString().length&gt;0) {
							objMsgContent.OriginiationDTTM= child.toString();
						} else {
							objMsgContent.OriginiationDTTM= &apos;&apos;;
						}	
						// channelMap.put(&apos;OriginiationDTTM&apos;,objMsgContent.OriginiationDTTM);
					// TranscribedDTTM
					} else if(child.localName().toString() == &apos;TranscribedDTTM&apos;) {
						if(child.toString().length&gt;0) {
							objMsgContent.TranscribedDTTM= child.toString();
						} else {
							objMsgContent.TranscribedDTTM= &apos;&apos;;
						}	
						// channelMap.put(&apos;TranscribedDTTM&apos;,objMsgContent.TranscribedDTTM);	
					// Document_Body_RTF
					} else if(child.localName().toString() == &apos;Document_Body_RTF&apos;) {
						if(child.toString().length&gt;0) {
							objMsgContent.DocumentBodyRTF= child.toString();
						} else {
							objMsgContent.DocumentBodyRTF= &apos;&apos;;
						}	
						// channelMap.put(&apos;DocumentBodyRTF&apos;,objMsgContent.DocumentBodyRTF);		
					}
					
				}
			}
			
			if(debug&gt;0) { logger.error(&apos;DEBUG::&apos;+funcDescription+&apos; object: &apos;+JSON.stringify(objMsgContent)); }
			// store objMsgContent in arrMsgContents
			if(chkNumeric==  true) arrMsgContents.push(objMsgContent);
		}
		intCount++;
		var chkNumeric= false;
	}
	if(debug&gt;0) { logger.error(&apos;arrMsgContents.length: &apos;+arrMsgContents.length); }
	channelMap.put(&apos;arrMsgContents&apos;,arrMsgContents);
	return arrMsgContents;
} // end function

function isNumeric(num){
  return !isNaN(num)
}</code>
            </properties>
          </codeTemplate>
        </codeTemplates>
      </codeTemplateLibrary>
      <codeTemplateLibrary version="4.0.0">
        <id>0e6800ae-6d84-4245-9e09-2c1a2f28d8fc</id>
        <name>WebPT-Common</name>
        <revision>2</revision>
        <lastModified>
          <time>1678715257049</time>
          <timezone>America/Chicago</timezone>
        </lastModified>
        <description></description>
        <includeNewChannels>true</includeNewChannels>
        <enabledChannelIds>
          <string>3792b059-e098-436c-81fe-23502ef5042b</string>
        </enabledChannelIds>
        <disabledChannelIds/>
        <codeTemplates>
          <codeTemplate version="4.0.0">
            <id>43f73dbc-f73d-4178-9aa0-b451c05922e2</id>
            <name>Check if String contains</name>
            <revision>1</revision>
            <lastModified>
              <time>1678476122790</time>
              <timezone>America/Chicago</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>CHANNEL_UNDEPLOY</contextType>
                <contextType>CHANNEL_PREPROCESSOR</contextType>
                <contextType>GLOBAL_UNDEPLOY</contextType>
                <contextType>CHANNEL_BATCH</contextType>
                <contextType>GLOBAL_POSTPROCESSOR</contextType>
                <contextType>GLOBAL_PREPROCESSOR</contextType>
                <contextType>GLOBAL_DEPLOY</contextType>
                <contextType>CHANNEL_POSTPROCESSOR</contextType>
                <contextType>CHANNEL_ATTACHMENT</contextType>
                <contextType>CHANNEL_DEPLOY</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>COMPILED_CODE</type>
              <code>/**
	To verify if one string (source) contains another string (target).

	@param {String} arg1 - target string to lookup in the source string
	@return {String} return true if the source string contains the target string
*/
String.prototype.contains = function(arg1) {
	
	return this.indexOf(arg1) &gt; -1;
		
};</code>
            </properties>
          </codeTemplate>
          <codeTemplate version="4.0.0">
            <id>6a420042-a38d-4d6b-8567-d0290086256a</id>
            <name>Check if String contains HTTP code</name>
            <revision>1</revision>
            <lastModified>
              <time>1678476122593</time>
              <timezone>America/Chicago</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>CHANNEL_UNDEPLOY</contextType>
                <contextType>CHANNEL_PREPROCESSOR</contextType>
                <contextType>GLOBAL_UNDEPLOY</contextType>
                <contextType>CHANNEL_BATCH</contextType>
                <contextType>GLOBAL_POSTPROCESSOR</contextType>
                <contextType>GLOBAL_PREPROCESSOR</contextType>
                <contextType>GLOBAL_DEPLOY</contextType>
                <contextType>CHANNEL_POSTPROCESSOR</contextType>
                <contextType>CHANNEL_ATTACHMENT</contextType>
                <contextType>CHANNEL_DEPLOY</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>COMPILED_CODE</type>
              <code>/**
	To verify if the given string contains HTTP status code.

	@param - no parameter
	@return {String} return true if the string contains the HTTP status code, false otherwise
*/

function isHttpCode2xx(arg1) {
	var code2xx = [&apos;200&apos;,&apos;201&apos;,&apos;202&apos;,&apos;203&apos;,&apos;204&apos;,&apos;205&apos;,&apos;206&apos;,&apos;207&apos;,&apos;208&apos;];	
	var length = code2xx.length;
	
	while(length--) {
   		if (arg1.indexOf(code2xx[length]) &gt; -1) {
       		return true;
   		}   		
	}
	return false;
}

function isHttpCode4xx(arg1) {
	var code4xx = [&apos;400&apos;,&apos;401&apos;,&apos;402&apos;,&apos;403&apos;,&apos;404&apos;,&apos;405&apos;,&apos;406&apos;,&apos;407&apos;,&apos;408&apos;,&apos;409&apos;,&apos;410&apos;,&apos;411&apos;,&apos;412&apos;,&apos;413&apos;,&apos;414&apos;,&apos;415&apos;,&apos;416&apos;,&apos;417&apos;,&apos;429&apos;,&apos;431&apos;,&apos;451&apos;];	
	var length = code4xx.length;
	
	while(length--) {
   		if (arg1.indexOf(code4xx[length]) &gt; -1) {
       		return true;
   		}   		
	}
	return false;
}

function isHttpCode5xx(arg1) {
	var code5xx = [&apos;500&apos;,&apos;501&apos;,&apos;502&apos;,&apos;503&apos;,&apos;504&apos;,&apos;505&apos;,&apos;506&apos;,&apos;510&apos;,&apos;511&apos;];	
	var length = code5xx.length;
	
	while(length--) {
   		if (arg1.indexOf(code5xx[length]) &gt; -1) {
       		return true;
   		}   		
	}
	return false;
}
</code>
            </properties>
          </codeTemplate>
          <codeTemplate version="4.0.0">
            <id>8515e088-5c50-47ee-9e2f-9fad1ecf48bd</id>
            <name>Check if String is JSON</name>
            <revision>1</revision>
            <lastModified>
              <time>1678476123309</time>
              <timezone>America/Chicago</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>/**
	Added by Kirby Knight
	12/21/2020
	Test for JSON

	@param {String} arg1 - arg1 description
	@return {String} return description
*/
function isJson(str) {
    try {
        JSON.parse(str);
    } catch (e) {
        return false;
    }
    return true;
}</code>
            </properties>
          </codeTemplate>
          <codeTemplate version="4.0.0">
            <id>5f2f84ba-3e66-4be3-8260-8fbd8258bd92</id>
            <name>Check if the PDF is valid</name>
            <revision>1</revision>
            <lastModified>
              <time>1678476122055</time>
              <timezone>America/Chicago</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>/**
	Modify the description here. Modify the function name and parameters as needed. One function per
	template is recommended; create a new code template for each new function.

	@param {String} arg1 - arg1 description
	@return {String} return description
*/
//This function is used for checking the word &quot;PDF&quot; in inbound attachment.
function isValidBase64PDF(base64) {
	const ENCODED_PDF_SIGN = &quot;JVBERi&quot;; // %PDF sign
	const PDF_EOF = &quot;JSVFT0YNCg&quot;; // %EOF
	var pdfBase64Size = (base64.length() * (3 / 4)) - 1;
	
	return (base64.indexOf(ENCODED_PDF_SIGN) != -1 &amp;&amp; base64.indexOf(PDF_EOF) != -1 &amp;&amp; pdf_base64_size &gt; 36);
}
</code>
            </properties>
          </codeTemplate>
          <codeTemplate version="4.0.0">
            <id>42dbc1c3-72e4-4ece-a6b8-5cd188446027</id>
            <name>Convert JSON date to HL7v2 date</name>
            <revision>1</revision>
            <lastModified>
              <time>1678476122137</time>
              <timezone>America/Chicago</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>CHANNEL_UNDEPLOY</contextType>
                <contextType>CHANNEL_PREPROCESSOR</contextType>
                <contextType>GLOBAL_UNDEPLOY</contextType>
                <contextType>CHANNEL_BATCH</contextType>
                <contextType>GLOBAL_POSTPROCESSOR</contextType>
                <contextType>GLOBAL_PREPROCESSOR</contextType>
                <contextType>GLOBAL_DEPLOY</contextType>
                <contextType>CHANNEL_POSTPROCESSOR</contextType>
                <contextType>CHANNEL_ATTACHMENT</contextType>
                <contextType>CHANNEL_DEPLOY</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>/**
	To convert JSON date/time format to HL7v2 date only format.

	@param {String} datetime - JSON date/time (yyyy-MM-ddThh:mm:ss.sss-00:00) or (yyyy-MM-dd)
	@return {String} return HL7v2 date (yyyyMMdd)
*/
function convertToHL7v2Date(datetime) { 

	var date = datetime.toString().match(/\d{4}\-\d{2}\-\d{2}/);
	return ((date.length &gt; 0) ? date[0].replace(/\-/g,&apos;&apos;) : date.replace(/\-/g,&apos;&apos;));
	
};</code>
            </properties>
          </codeTemplate>
          <codeTemplate version="4.0.0">
            <id>5b60cf28-571b-4aa8-94fe-d3cdf069471b</id>
            <name>Convert JSON datetime to HL7v2 datetime</name>
            <revision>1</revision>
            <lastModified>
              <time>1678476122430</time>
              <timezone>America/Chicago</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>CHANNEL_UNDEPLOY</contextType>
                <contextType>CHANNEL_PREPROCESSOR</contextType>
                <contextType>GLOBAL_UNDEPLOY</contextType>
                <contextType>CHANNEL_BATCH</contextType>
                <contextType>GLOBAL_POSTPROCESSOR</contextType>
                <contextType>GLOBAL_PREPROCESSOR</contextType>
                <contextType>GLOBAL_DEPLOY</contextType>
                <contextType>CHANNEL_POSTPROCESSOR</contextType>
                <contextType>CHANNEL_ATTACHMENT</contextType>
                <contextType>CHANNEL_DEPLOY</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>/**
	To convert JSON date/time format to HL7v2 date only format.
	Possible formats:
	&quot;2016-01-01T00:00:00.000Z&quot;	JavaScript built-in JSON object
	&quot;2016-01-01T00:00:00-00:00&quot;	ISO 8601

	@param {String} datetime - JSON date/time with offset (yyyy-MM-ddThh:mm:ss.sss-/+00:00) or (yyyy-MM-dd)
	@return {String} return HL7v2 DTM date type
*/
function convertToHL7v2DateTime(datetime) { 

	var date = [];
	var hl7Date = &quot;&quot;;
	var timeZome = &quot;&quot;;

	if (datetime.indexOf(&quot;T&quot;) &gt; -1) {

		var zone = datetime.toString().slice(datetime.indexOf(&quot;T&quot;) + 1);
		if (zone.indexOf(&quot;+&quot;) &gt; 0) timeZone = &quot;+&quot;;
		if (zone.indexOf(&quot;-&quot;) &gt; 0) timeZone = &quot;-&quot;;

		if (datetime.indexOf(&quot;Z&quot;) &gt; 0) {
			date = datetime.toString().split(/\-|\+|T|:|\./g);
		} else {
			date = datetime.toString().split(/\-|\+|T|:/g);
		}
		
		for (var i=0; i &lt; 6; i++) {			
			hl7Date += date[i]; 
		}
		
		var offset = date.slice(6);
		for (var i=0; i &lt; offset.length; i++) {
			timeZone += offset[i];
		}

		return hl7Date + timeZone;

	} else {
		return convertToHL7v2Date(datetime);
	}
};</code>
            </properties>
          </codeTemplate>
          <codeTemplate version="4.0.0">
            <id>bb21449a-df39-48c6-be52-24106c8df4c4</id>
            <name>Destination Formatting</name>
            <revision>1</revision>
            <lastModified>
              <time>1678476122703</time>
              <timezone>America/Chicago</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>/**
	Kirby Knight 03/10/2021
	
	This function will remove all other ROOT.Meta.Destinations nodes that are not passed in the
	destination variable and removes the ROOT.Meta.Destinations[x].Destination node

	@param {Any} destination - 
	@return {String} return description
*/
function formatDestinations(destination) {
var arrDestinations = msg[&apos;Meta&apos;][&apos;Destinations&apos;];
	//  Start at the end of the array because of the posibility of deleted array items 
	for (var i = arrDestinations.length - 1; i &gt;= 0; i--) {
		if (arrDestinations[i][&apos;Destination&apos;] == destination){
			delete arrDestinations[i][&apos;Destination&apos;]
		}else if (arrDestinations[i][&apos;Destination&apos;] != destination){
			arrDestinations.splice(i, 1);
		}
	}
}</code>
            </properties>
          </codeTemplate>
          <codeTemplate version="4.0.0">
            <id>d014f2fc-cf80-47ad-9de8-6c84807e2f70</id>
            <name>Extract JSON node data</name>
            <revision>1</revision>
            <lastModified>
              <time>1678476121748</time>
              <timezone>America/Chicago</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>CHANNEL_UNDEPLOY</contextType>
                <contextType>CHANNEL_PREPROCESSOR</contextType>
                <contextType>GLOBAL_UNDEPLOY</contextType>
                <contextType>CHANNEL_BATCH</contextType>
                <contextType>GLOBAL_POSTPROCESSOR</contextType>
                <contextType>GLOBAL_PREPROCESSOR</contextType>
                <contextType>GLOBAL_DEPLOY</contextType>
                <contextType>CHANNEL_POSTPROCESSOR</contextType>
                <contextType>CHANNEL_ATTACHMENT</contextType>
                <contextType>CHANNEL_DEPLOY</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>/**
	Validates if node is not NULL or &quot;undefined&quot;. If the given node is an array, return a string of values.

	@param {String} node - node to extract the data from
	@return {String} return given node value or empty string if such node does not exist
*/
function extract(node) {

	try {
		var result = &quot;&quot;;

		if (null == node) return result;
		
		if ((typeof node) !== &quot;undefined&quot;) {

			if (Object.prototype.toString.call(node) === &apos;[object Array]&apos;) {
				result = org.apache.commons.lang3.StringUtils.join(node, &quot; &quot;)
			} else 
				result = node;
		}
	} finally {
		return result.toString().trim();
	}
}

</code>
            </properties>
          </codeTemplate>
          <codeTemplate version="4.0.0">
            <id>7ed44f8a-fa40-4f3e-9426-3021604eabe0</id>
            <name>Get Feature Value by Name and Database</name>
            <revision>1</revision>
            <lastModified>
              <time>1678476123262</time>
              <timezone>America/Chicago</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>/**
	Returns a string containing the feature value (system property) for a specific client database.

	@param {String} featureName - name of the feature, ie: &quot;BetterPTBidirectionalScheduling&quot;
	@param {String} databaseIdentifier - database name or databaseID / TenantID
	@param {String} databaseIdentifierType - what value is provided in databaseIdentifier. current options include &quot;ID&quot; or &quot;NAME&quot;
	@return {String} returns feature value
*/
function getFeatureValueByNameDatabase(featureName, databaseIdentifier, databaseIdentifierType) {
	var paramList = new Packages.java.util.ArrayList();
	paramList.add(featureName);
	paramList.add(databaseIdentifier);
	paramList.add(databaseIdentifierType);
	
	var sSQL = &apos;EXEC [dbo].[pr_FeatureValueByNameDatabase] ?, ?, ?&apos;;
	
	try {
		var result = executeSharedDBStatementFhirCh(sSQL, true, paramList);
		var featureValue ;
		if(result.next()){			//Added
		 featureValue = result.getString(1);
		}
		return featureValue;
	} catch (e) {
		logger.error(e);
	}
}
</code>
            </properties>
          </codeTemplate>
          <codeTemplate version="4.0.0">
            <id>9842be2c-c633-42ac-87f1-f91aca9e370f</id>
            <name>JSON Patient IDs</name>
            <revision>1</revision>
            <lastModified>
              <time>1678476121776</time>
              <timezone>America/Chicago</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>/**
	This function populates the MR and PI patient IDS to channelMap

	@return {String} return description
*/
function jsonPatientIds() {
	for each (patId in msg[&apos;Patient&apos;][&apos;Identifiers&apos;]) {
	if (patId[&apos;IDType&apos;].toString() == &apos;MR&apos;){
		channelMap.put(&apos;extPatId&apos;, patId[&apos;ID&apos;].toString());
	}else if(patId[&apos;IDType&apos;].toString() == &apos;PI&apos;){
		channelMap.put(&apos;patId&apos;, patId[&apos;ID&apos;].toString());
	}
}
}</code>
            </properties>
          </codeTemplate>
          <codeTemplate version="4.0.0">
            <id>a3f85cc2-9b95-45a9-9cb1-937197e09cdc</id>
            <name>Verify JSON node for existance</name>
            <revision>1</revision>
            <lastModified>
              <time>1678476122542</time>
              <timezone>America/Chicago</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>CHANNEL_UNDEPLOY</contextType>
                <contextType>CHANNEL_PREPROCESSOR</contextType>
                <contextType>GLOBAL_UNDEPLOY</contextType>
                <contextType>CHANNEL_BATCH</contextType>
                <contextType>GLOBAL_POSTPROCESSOR</contextType>
                <contextType>GLOBAL_PREPROCESSOR</contextType>
                <contextType>GLOBAL_DEPLOY</contextType>
                <contextType>CHANNEL_POSTPROCESSOR</contextType>
                <contextType>CHANNEL_ATTACHMENT</contextType>
                <contextType>CHANNEL_DEPLOY</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>/**
	Verify if the given node exists.

	@param {String} node - node to verify for existance
	@return {String} return true if the given node exists, false otherwise
*/
function keyExists(node) {
	return ( ((typeof node) !== &quot;undefined&quot;) &amp;&amp; ((typeof node) !== null) );
}</code>
            </properties>
          </codeTemplate>
        </codeTemplates>
      </codeTemplateLibrary>
      <codeTemplateLibrary version="4.0.0">
        <id>394664c0-d536-4310-970e-181dc03ee7da</id>
        <name>WebPT-Conversions</name>
        <revision>2</revision>
        <lastModified>
          <time>1690140133427</time>
          <timezone>America/Chicago</timezone>
        </lastModified>
        <description></description>
        <includeNewChannels>true</includeNewChannels>
        <enabledChannelIds>
          <string>c5aa527b-0e36-4790-8302-e1a6a472455e</string>
          <string>4e15d4c9-43b4-4d2c-9185-701707cd2f6a</string>
          <string>f7c77a5d-b086-4aed-aa56-e72984abd5ea</string>
          <string>65d47b29-67e5-4533-917c-337880fb8b17</string>
          <string>b7f455da-a5a4-4c75-be8f-d6f2c3561ac8</string>
          <string>42b2b012-ffc4-41ba-a71e-00fbd1cc1c67</string>
          <string>ead4368c-a612-459c-950e-50e49df05d9b</string>
          <string>81988bfb-2e74-4e25-ac01-1a000e027e97</string>
          <string>4964d3cc-7004-41c7-a704-da97ac92caf3</string>
          <string>954d2af0-df2c-46c6-95bc-02661a8d4424</string>
          <string>8664ea57-77f2-481d-8f1c-9b45761285e8</string>
          <string>fd14f323-1f60-4ec5-b3e1-6ce8248bbcf3</string>
          <string>e248ef99-284c-41f3-adac-d7b43433b16f</string>
          <string>6910529c-6cd1-4838-9a4f-d3c84faa2866</string>
          <string>8913e845-1fff-427c-bec0-e0a01d131f89</string>
          <string>19a0dcf7-3736-4b25-9049-80301c6cd04d</string>
          <string>2d61ede3-55be-462f-b71c-d7ecc67baabd</string>
          <string>32516e02-db8c-47f3-aba9-adfff1ea28c2</string>
          <string>f1688a2f-ece0-4292-b5f9-e56c50b6bc5a</string>
          <string>2a908305-89cf-4e4f-9a66-c6fed1e9d976</string>
          <string>c74d49f9-3866-495c-a5b4-90cb4754c6f8</string>
          <string>7a3b0715-12e0-4803-aa51-c1a947ef9b66</string>
          <string>dff92eca-e23d-4802-8e3c-023f3af3e640</string>
          <string>a3e80233-747a-4ce0-9f8f-59dcbe8e2ca6</string>
          <string>0ace74f9-8ee8-45a5-8093-8d5bb95dae90</string>
          <string>32ea3c4a-9c59-4482-beb2-22d729e5e379</string>
          <string>a827a980-9c7f-410c-893a-141429f7b30a</string>
          <string>fba4345d-b56d-4b31-802c-cdac2248902d</string>
          <string>9ba29622-ed1f-4a34-9cbe-6f3df0eb3026</string>
          <string>d6ea31a1-1aa6-4a53-adde-10a1bcdcd3c5</string>
          <string>4966bc7c-223c-4c44-8f71-4625cfcc0cc0</string>
          <string>72383579-097e-4205-b030-ce272c90b835</string>
          <string>88f9a267-e37f-418d-aaf2-d077b7a0cdca</string>
          <string>ace8b46e-8a2f-490e-afd1-24202f8b4b17</string>
          <string>a2b31875-5c31-4052-938f-a69550a8cb55</string>
          <string>cdfecd0a-b177-441d-8b7e-9c239d4a5816</string>
          <string>37b05d6c-c044-4394-a60a-deaee676ce0d</string>
          <string>71368dee-5964-4073-bab7-ae0fd3ae90b0</string>
          <string>4c3b5879-a8d9-48be-83cc-5f7c5777a188</string>
          <string>c65d1ffa-65af-4ee8-803a-2f32b201889d</string>
          <string>3792b059-e098-436c-81fe-23502ef5042b</string>
          <string>8a4eb453-fc7a-484a-8e15-422d9b490edf</string>
          <string>a757905f-315a-43be-a624-38780a3d7574</string>
          <string>1c6037e0-7bf9-41ae-b896-5be7b77e711f</string>
          <string>631f9a02-6b74-4ecd-9582-221b98a0450e</string>
          <string>c2277647-41dc-4e15-bce4-2ae23cec064b</string>
          <string>c1fd4789-03e5-4ec3-91d2-cdded4b13365</string>
          <string>318f77fc-a631-48e0-8a4e-a87831bd81a7</string>
          <string>38e80069-5a80-4483-9a22-02c928973719</string>
          <string>73070cc2-f8a4-46a8-8d28-a1c1d4648520</string>
          <string>ba9dcc01-6b1c-4fc3-afc4-cf1c5da9a8aa</string>
          <string>77033047-c5e7-4308-b2ed-d361923ed9a2</string>
          <string>a6fc8ba1-0134-4d1a-a341-cd9a2f295595</string>
          <string>a45d1db0-9b84-49d3-b26b-243dbf2a4f70</string>
          <string>ab7d9121-bd5f-47c1-964a-53531cd178dd</string>
          <string>bfc00235-7e2e-457a-b27f-e5288e9c28c4</string>
          <string>754a8caa-2161-45d8-b261-e32d8b0fb044</string>
          <string>c3882ee4-e2e6-47c6-8da9-801a847e0459</string>
          <string>9370b181-aa9c-4db3-b7dc-2cd81cc91fdd</string>
          <string>e678dbf5-f021-43dc-84ae-967500d5c31a</string>
          <string>7741037b-845e-4e6d-b6aa-c9f249b06084</string>
          <string>c65024ed-4660-4423-9636-cb6309cae138</string>
          <string>0972a85f-5ad7-4a93-88e1-5f991b7f7879</string>
          <string>3fdef7e5-20e2-4e6f-aad4-a156ddb2e5e2</string>
          <string>a25fa941-8ba3-47eb-81d1-24c9e45fe29d</string>
          <string>1b12c7a8-abee-4c24-85a4-d3b447e9d280</string>
          <string>5cfc8ad8-0fb2-48bf-a318-1aabd86cf60e</string>
          <string>10ef3f18-f1c1-495c-80be-026eb56436c5</string>
          <string>c15d4352-13b2-4698-a771-b3593449d7ba</string>
          <string>64e32643-e41c-4986-9550-c634cb02f9ba</string>
          <string>347deee2-a3c1-4542-bc3e-c619defe0b64</string>
          <string>9e040198-05cf-11e8-ba89-0ed5f89f718b</string>
          <string>dc8e6472-bc7e-4ebe-a8dd-968b791e2975</string>
          <string>66487d57-e34e-4a9a-8296-e62a66d3ab8b</string>
          <string>99b43124-34ef-4ead-a348-ef0ac0a52539</string>
          <string>4c2e73a8-aabe-4c04-9ba5-50ab49d3cb95</string>
          <string>0df5acd6-0251-4546-9d35-ed7f1515e00b</string>
          <string>db4e2d12-f41b-4da9-87b8-a1feb4c29054</string>
          <string>a6ec1677-5012-430f-bcbc-f41fe39ecf1f</string>
          <string>5c5b6b2c-f3fd-456d-a90d-d684b5fb061e</string>
          <string>42e730bb-0721-435e-8dcf-d25d6d5d1dc6</string>
          <string>c90c935e-e3de-4ffe-839f-5560b39f07fb</string>
          <string>18803b99-6545-4d09-9277-a559ee2e94fd</string>
          <string>5231fded-a3aa-44e8-bd77-3ad84d39e1d2</string>
          <string>89faf430-5bd7-4440-9ed0-4b02d3462403</string>
        </enabledChannelIds>
        <disabledChannelIds/>
        <codeTemplates>
          <codeTemplate version="4.0.0">
            <id>3a388aa0-c0ba-460c-b790-1c42c081c84d</id>
            <name>Convert FHIR codes to HL7v2 codes</name>
            <revision>1</revision>
            <lastModified>
              <time>1678476122899</time>
              <timezone>America/Chicago</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>CHANNEL_UNDEPLOY</contextType>
                <contextType>CHANNEL_PREPROCESSOR</contextType>
                <contextType>GLOBAL_UNDEPLOY</contextType>
                <contextType>CHANNEL_BATCH</contextType>
                <contextType>GLOBAL_POSTPROCESSOR</contextType>
                <contextType>GLOBAL_PREPROCESSOR</contextType>
                <contextType>GLOBAL_DEPLOY</contextType>
                <contextType>CHANNEL_POSTPROCESSOR</contextType>
                <contextType>CHANNEL_ATTACHMENT</contextType>
                <contextType>CHANNEL_DEPLOY</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>/**
	Map FHIR codes to corresponding HL7v2.6 codes using the Table number.

	@param {String} FhirCode - FHIR code
	@param {String} tableName - HL7v2.6 Table Name	
	@return {String} return corresponsing HL7v2.6 code if known or &quot;Unknown&quot; result
*/
function convertToHL7v2Table(FhirCode,tableNumber) {

	var code = &apos;&apos;;
	if (&apos;undefined&apos; !== typeof FhirCode &amp;&amp; null !== FhirCode) {
		code = FhirCode.toString().toLowerCase();	
	}
	

	switch(tableNumber) {
		case &quot;0001&quot;:
			if (&apos;female&apos; == code || &apos;f&apos; == code) return &apos;F&apos;; else
			if (&apos;male&apos; == code || &apos;m&apos; == code) return &apos;M&apos;; else
			if (&apos;other&apos; == code) return &apos;O&apos;; else
			return &apos;U&apos;; 			
		break;

		case &quot;0004&quot;:
			// http://hl7.org/fhir/encounter-class
			if (&apos;emergency&apos; == code) return &apos;E&apos;; else				
			if (&apos;inpatient&apos; == code) return &apos;I&apos;; else
			if (&apos;outpatient&apos; == code) return &apos;O&apos;; else
			return &quot;U&quot;;
		break;

		case &quot;0190&quot;:
			// http://hl7.org/fhir/ValueSet/address-type
			if (&apos;postal&apos; == code) return &apos;H&apos;; else				
			if (&apos;physical&apos; == code) return &apos;P&apos;; else
			if (&apos;both&apos; == code) return &apos;H&apos;; else
			return &quot;M&quot;;
		break;		

		case &quot;0201&quot;:
			// http://hl7.org/fhir/ValueSet/contact-point-use
			if (&apos;home&apos; == code) return &apos;PRN&apos;; else				
			if (&apos;work&apos; == code) return &apos;WPN&apos;; else
			if (&apos;mobile&apos; == code) return &apos;PRS&apos;; else
			if (&apos;temp&apos; == code) return &apos;TMP&apos;; else			
			if (&apos;old&apos; == code) return &apos;OLD&apos;; else
			return &quot;PRN&quot;;
		break;	

		case &quot;0202&quot;:
			// http://hl7.org/fhir/contact-point-system
			if (&apos;phone&apos; == code) return &apos;PH&apos;; else				
			if (&apos;fax&apos; == code) return &apos;FX&apos;; else
			if (&apos;pager&apos; == code) return &apos;BP&apos;; else
			if (&apos;email&apos; == code) return &apos;Internet&apos;; else
			return &quot;PH&quot;;
		break;	

		case &quot;0063&quot;:
			// http://hl7.org/fhir/ValueSet/patient-contact-relationship
			// (SN) Partial list
			if (&apos;parent&apos; == code) return &apos;PAR&apos;; else
			if (&apos;MTH&apos; == code) return &apos;MTH&apos;; else
			if (&apos;FTH&apos; == code) return &apos;FTH&apos;; else	
			if (&apos;caregiver&apos; == code) return &apos;CGV&apos;; else
			if (&apos;SPS&apos; == code) return &apos;SPO&apos;; else
			if (&apos;CHILD&apos; == code) return &apos;CHD&apos;; else
			if (&apos;GRNDCHILD&apos; == code) return &apos;GCH&apos;; else
			if (&apos;GRPRN&apos; == code) return &apos;GRP&apos;; else
			if (&apos;SIB&apos; == code) return &apos;SIB&apos;; else
			if (&apos;BRO&apos; == code) return &apos;BRO&apos;; else
			if (&apos;SIS&apos; == code) return &apos;SIS&apos;; else
			if (&apos;friend&apos; == code) return &apos;FND&apos;; else
			if (&apos;ONESELF&apos; == code) return &apos;SEL&apos;; else
			if (&apos;emergency&apos; == code) return &apos;EMC&apos;; else
			return &apos;UNK&apos;;		
		break;
		default:
			return &apos;U&apos;;
	}


}</code>
            </properties>
          </codeTemplate>
        </codeTemplates>
      </codeTemplateLibrary>
      <codeTemplateLibrary version="4.0.0">
        <id>2fc8cbf3-0d92-4d1d-a3d6-136c09bd9f2a</id>
        <name>WebPT-Custom Database Functions</name>
        <revision>5</revision>
        <lastModified>
          <time>1703964939898</time>
          <timezone>America/Chicago</timezone>
        </lastModified>
        <description></description>
        <includeNewChannels>true</includeNewChannels>
        <enabledChannelIds>
          <string>c5aa527b-0e36-4790-8302-e1a6a472455e</string>
          <string>4e15d4c9-43b4-4d2c-9185-701707cd2f6a</string>
          <string>f7c77a5d-b086-4aed-aa56-e72984abd5ea</string>
          <string>65d47b29-67e5-4533-917c-337880fb8b17</string>
          <string>b7f455da-a5a4-4c75-be8f-d6f2c3561ac8</string>
          <string>42b2b012-ffc4-41ba-a71e-00fbd1cc1c67</string>
          <string>ead4368c-a612-459c-950e-50e49df05d9b</string>
          <string>81988bfb-2e74-4e25-ac01-1a000e027e97</string>
          <string>4964d3cc-7004-41c7-a704-da97ac92caf3</string>
          <string>954d2af0-df2c-46c6-95bc-02661a8d4424</string>
          <string>fd14f323-1f60-4ec5-b3e1-6ce8248bbcf3</string>
          <string>e248ef99-284c-41f3-adac-d7b43433b16f</string>
          <string>e20d28dc-e360-4b54-a225-5c6cddeba9a3</string>
          <string>6910529c-6cd1-4838-9a4f-d3c84faa2866</string>
          <string>8913e845-1fff-427c-bec0-e0a01d131f89</string>
          <string>19a0dcf7-3736-4b25-9049-80301c6cd04d</string>
          <string>32516e02-db8c-47f3-aba9-adfff1ea28c2</string>
          <string>b19c96b2-afb4-4248-83a8-96f521b20489</string>
          <string>f1688a2f-ece0-4292-b5f9-e56c50b6bc5a</string>
          <string>ed58a744-1f83-44aa-ad23-feef56e2f5e6</string>
          <string>4a98f7b0-d1f3-478d-ad65-550f8287fe24</string>
          <string>7a3b0715-12e0-4803-aa51-c1a947ef9b66</string>
          <string>dff92eca-e23d-4802-8e3c-023f3af3e640</string>
          <string>a3e80233-747a-4ce0-9f8f-59dcbe8e2ca6</string>
          <string>0ace74f9-8ee8-45a5-8093-8d5bb95dae90</string>
          <string>32ea3c4a-9c59-4482-beb2-22d729e5e379</string>
          <string>a827a980-9c7f-410c-893a-141429f7b30a</string>
          <string>fba4345d-b56d-4b31-802c-cdac2248902d</string>
          <string>9ba29622-ed1f-4a34-9cbe-6f3df0eb3026</string>
          <string>d6ea31a1-1aa6-4a53-adde-10a1bcdcd3c5</string>
          <string>4966bc7c-223c-4c44-8f71-4625cfcc0cc0</string>
          <string>72383579-097e-4205-b030-ce272c90b835</string>
          <string>88f9a267-e37f-418d-aaf2-d077b7a0cdca</string>
          <string>a2b31875-5c31-4052-938f-a69550a8cb55</string>
          <string>37b05d6c-c044-4394-a60a-deaee676ce0d</string>
          <string>71368dee-5964-4073-bab7-ae0fd3ae90b0</string>
          <string>5cc5d7df-228a-4d24-b774-681c717e1876</string>
          <string>4c3b5879-a8d9-48be-83cc-5f7c5777a188</string>
          <string>c65d1ffa-65af-4ee8-803a-2f32b201889d</string>
          <string>5c763fad-3eae-4e87-b944-0dbfe25814e0</string>
          <string>3792b059-e098-436c-81fe-23502ef5042b</string>
          <string>8a4eb453-fc7a-484a-8e15-422d9b490edf</string>
          <string>a757905f-315a-43be-a624-38780a3d7574</string>
          <string>1c6037e0-7bf9-41ae-b896-5be7b77e711f</string>
          <string>631f9a02-6b74-4ecd-9582-221b98a0450e</string>
          <string>c2277647-41dc-4e15-bce4-2ae23cec064b</string>
          <string>c1fd4789-03e5-4ec3-91d2-cdded4b13365</string>
          <string>318f77fc-a631-48e0-8a4e-a87831bd81a7</string>
          <string>38e80069-5a80-4483-9a22-02c928973719</string>
          <string>ba9dcc01-6b1c-4fc3-afc4-cf1c5da9a8aa</string>
          <string>77033047-c5e7-4308-b2ed-d361923ed9a2</string>
          <string>2e0d9b6c-294f-4506-8632-dc4622b4f651</string>
          <string>d3f6504f-12cd-4e69-a920-6bb3a2195cc2</string>
          <string>a6fc8ba1-0134-4d1a-a341-cd9a2f295595</string>
          <string>57fa694a-2758-4e52-b725-967a74786d1f</string>
          <string>a45d1db0-9b84-49d3-b26b-243dbf2a4f70</string>
          <string>ab7d9121-bd5f-47c1-964a-53531cd178dd</string>
          <string>bfc00235-7e2e-457a-b27f-e5288e9c28c4</string>
          <string>6be39ce0-8f88-42fb-b3a4-4afd4da39734</string>
          <string>754a8caa-2161-45d8-b261-e32d8b0fb044</string>
          <string>9370b181-aa9c-4db3-b7dc-2cd81cc91fdd</string>
          <string>e678dbf5-f021-43dc-84ae-967500d5c31a</string>
          <string>7741037b-845e-4e6d-b6aa-c9f249b06084</string>
          <string>c65024ed-4660-4423-9636-cb6309cae138</string>
          <string>0972a85f-5ad7-4a93-88e1-5f991b7f7879</string>
          <string>3fdef7e5-20e2-4e6f-aad4-a156ddb2e5e2</string>
          <string>ccd59c71-8d2a-40e9-8647-57e000ec6f43</string>
          <string>a25fa941-8ba3-47eb-81d1-24c9e45fe29d</string>
          <string>8cbc4731-752e-4e2e-a61d-018ed3e0cef0</string>
          <string>1b12c7a8-abee-4c24-85a4-d3b447e9d280</string>
          <string>5cfc8ad8-0fb2-48bf-a318-1aabd86cf60e</string>
          <string>10ef3f18-f1c1-495c-80be-026eb56436c5</string>
          <string>c15d4352-13b2-4698-a771-b3593449d7ba</string>
          <string>64e32643-e41c-4986-9550-c634cb02f9ba</string>
          <string>347deee2-a3c1-4542-bc3e-c619defe0b64</string>
          <string>9e040198-05cf-11e8-ba89-0ed5f89f718b</string>
          <string>dc8e6472-bc7e-4ebe-a8dd-968b791e2975</string>
          <string>66487d57-e34e-4a9a-8296-e62a66d3ab8b</string>
          <string>99b43124-34ef-4ead-a348-ef0ac0a52539</string>
          <string>4c2e73a8-aabe-4c04-9ba5-50ab49d3cb95</string>
          <string>0df5acd6-0251-4546-9d35-ed7f1515e00b</string>
          <string>93f57fef-8fc0-4b05-91de-b1cdb48034a2</string>
          <string>db4e2d12-f41b-4da9-87b8-a1feb4c29054</string>
          <string>a6ec1677-5012-430f-bcbc-f41fe39ecf1f</string>
          <string>5c5b6b2c-f3fd-456d-a90d-d684b5fb061e</string>
          <string>42e730bb-0721-435e-8dcf-d25d6d5d1dc6</string>
          <string>c90c935e-e3de-4ffe-839f-5560b39f07fb</string>
          <string>18803b99-6545-4d09-9277-a559ee2e94fd</string>
          <string>5231fded-a3aa-44e8-bd77-3ad84d39e1d2</string>
          <string>89faf430-5bd7-4440-9ed0-4b02d3462403</string>
        </enabledChannelIds>
        <disabledChannelIds/>
        <codeTemplates>
          <codeTemplate version="4.0.0">
            <id>23c0b510-63e4-40fa-a4e1-7b2b92ce9a96</id>
            <name>Execute Statement Shared DB Conn clientDb Ch</name>
            <revision>1</revision>
            <lastModified>
              <time>1678476122401</time>
              <timezone>America/Chicago</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>/**
Executes a SQL statement using a shared database connection stored in the Global Map. If the
connection does not exist, creates it.

@param {String} statement - The SQL statement to execute
@param {Boolean} isQuery - true if the statement is a SELECT, otherwise false
@param {List} paramList - A Java List object containing the parameters for the statement (optional)
 */
function executeSharedDBStatementclientDbCh(statement, isQuery, paramList) {
    var result;

    try {
        var dbConnclientDbCh = globalChannelMap.get(&quot;dbConnclientDbCh&quot;);

        if (dbConnclientDbCh == null || dbConnclientDbCh.getConnection().isClosed()) {
            dbConnclientDbCh = DatabaseConnectionFactory.createDatabaseConnection($(&apos;dbDriverMsSql&apos;), $(&apos;dbClient&apos;), $(&apos;dbUserFhir&apos;), $(&apos;dbPwFhir&apos;));
            globalChannelMap.put(&quot;dbConnclientDbCh&quot;, dbConnclientDbCh);
        }

        if (paramList == undefined) {
            paramList = new Packages.java.util.ArrayList();
        }

        if (isQuery) {
            result = dbConnclientDbCh.executeCachedQuery(statement, paramList);
        } else {
            result = dbConnclientDbCh.executeUpdate(statement, paramList);
        }
    } catch (e) {
        logger.error(e);
    }
    finally {
        return result;
    }
}
</code>
            </properties>
          </codeTemplate>
          <codeTemplate version="4.0.0">
            <id>4efb3110-a83f-48b5-93ad-79c847b51865</id>
            <name>Execute Statement Shared DB Conn clntAcl Ch</name>
            <revision>1</revision>
            <lastModified>
              <time>1678476123455</time>
              <timezone>America/Chicago</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>/**
	Executes a SQL statement using a shared database connection stored in the Global Map. If the
	connection does not exist, creates it.

	@param {String} statement - The SQL statement to execute
	@param {Boolean} isQuery - true if the statement is a SELECT, otherwise false
	@param {List} paramList - A Java List object containing the parameters for the statement (optional)
*/
function executeSharedDBStatementClntAclCh(statement, isQuery, paramList)
{
	var result;

	try
	{
		var dbConnClntAclCh = globalChannelMap.get(&quot;dbConnClntAclCh&quot;);

		if (dbConnClntAclCh == null || dbConnClntAclCh.getConnection().isClosed())
		{
			dbConnClntAclCh = DatabaseConnectionFactory.createDatabaseConnection($(&apos;dbDriverMsSql&apos;),$(&apos;dbClntAcl&apos;),$(&apos;dbUserFhir&apos;),$(&apos;dbPwFhir&apos;));
			globalChannelMap.put(&quot;dbConnClntAclCh&quot;, dbConnClntAclCh);
		}

		if (paramList == undefined)
		{
			paramList = new Packages.java.util.ArrayList();
		}

		if (isQuery)
		{
			result = dbConnClntAclCh.executeCachedQuery(statement, paramList);
		}
		else
		{
			result = dbConnClntAclCh.executeUpdate(statement, paramList);
		}
	}
	catch (e)
	{
		logger.error(e);
	}
	finally
	{
		return result;
	}
}</code>
            </properties>
          </codeTemplate>
          <codeTemplate version="4.0.0">
            <id>d96d45dd-57f7-4aa9-9bf4-e464d31b94c6</id>
            <name>Execute Statement Shared DB Conn FHIR</name>
            <revision>1</revision>
            <lastModified>
              <time>1678476121922</time>
              <timezone>America/Chicago</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>/**
	Executes a SQL statement using a shared database connection stored in the Global Map. If the
	connection does not exist, creates it.

	@param {String} statement - The SQL statement to execute
	@param {Boolean} isQuery - true if the statement is a SELECT, otherwise false
	@param {List} paramList - A Java List object containing the parameters for the statement (optional)
*/
function executeSharedDBStatementFhir(statement, isQuery, paramList)
{
	var result;

	try
	{
		var dbConnFhir = globalMap.get(&quot;dbConnFhir&quot;);

		if (dbConnFhir == null || dbConnFhir.getConnection().isClosed())
		{
			dbConnFhir = DatabaseConnectionFactory.createDatabaseConnection($(&apos;dbDriverMsSql&apos;),$(&apos;dbUrlFhir&apos;),$(&apos;dbUserFhir&apos;),$(&apos;dbPwFhir&apos;));
			globalMap.put(&quot;dbConnFhir&quot;, dbConnFhir);
		}

		if (paramList == undefined)
		{
			paramList = new Packages.java.util.ArrayList();
		}

		if (isQuery)
		{
			result = dbConnFhir.executeCachedQuery(statement, paramList);
		}
		else
		{
			result = dbConnFhir.executeUpdate(statement, paramList);
		}
	}
	catch (e)
	{
		logger.error(e);
	}
	finally
	{
		return result;
	}
}</code>
            </properties>
          </codeTemplate>
          <codeTemplate version="4.0.0">
            <id>6014068e-c021-4a38-9fa6-6f38f6a2cdab</id>
            <name>Execute Statement Shared DB Conn FHIR Ch</name>
            <revision>1</revision>
            <lastModified>
              <time>1678476123492</time>
              <timezone>America/Chicago</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>/**
	Executes a SQL statement using a shared database connection stored in the Global Channel Map. If the
	connection does not exist, creates it.

	@param {String} statement - The SQL statement to execute
	@param {Boolean} isQuery - true if the statement is a SELECT, otherwise false
	@param {List} paramList - A Java List object containing the parameters for the statement (optional)
*/
function executeSharedDBStatementFhirCh(statement, isQuery, paramList)
{
	var result;

	try
	{
		var dbConnFhirCh = globalChannelMap.get(&quot;dbConnFhirCh&quot;);

		if (dbConnFhirCh == null || dbConnFhirCh.getConnection().isClosed())
		{
			dbConnFhirCh = DatabaseConnectionFactory.createDatabaseConnection($(&apos;dbDriverMsSql&apos;),$(&apos;dbUrlFhir&apos;),$(&apos;dbUserFhir&apos;),$(&apos;dbPwFhir&apos;));
			globalChannelMap.put(&quot;dbConnFhirCh&quot;, dbConnFhirCh);
		}

		if (paramList == undefined)
		{
			paramList = new Packages.java.util.ArrayList();
		}

		if (isQuery)
		{
			result = dbConnFhirCh.executeCachedQuery(statement, paramList);
		}
		else
		{
			result = dbConnFhirCh.executeUpdate(statement, paramList);
		}
	}
	catch (e)
	{
		logger.error(e);
	}
	finally
	{
		return result;
	}
}</code>
            </properties>
          </codeTemplate>
          <codeTemplate version="4.0.0">
            <id>fbd5c4a1-b816-4496-acdf-067005f1d376</id>
            <name>Execute Statement Shared DB Conn Translations Ch</name>
            <revision>1</revision>
            <lastModified>
              <time>1678476123008</time>
              <timezone>America/Chicago</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>CHANNEL_UNDEPLOY</contextType>
                <contextType>CHANNEL_PREPROCESSOR</contextType>
                <contextType>GLOBAL_UNDEPLOY</contextType>
                <contextType>CHANNEL_BATCH</contextType>
                <contextType>GLOBAL_POSTPROCESSOR</contextType>
                <contextType>GLOBAL_PREPROCESSOR</contextType>
                <contextType>GLOBAL_DEPLOY</contextType>
                <contextType>CHANNEL_POSTPROCESSOR</contextType>
                <contextType>CHANNEL_ATTACHMENT</contextType>
                <contextType>CHANNEL_DEPLOY</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>/**
	Executes a SQL statement using a shared database connection stored in the Global Channel Map. If the
	connection does not exist, creates it.

	@param {String} statement - The SQL statement to execute
	@param {Boolean} isQuery - true if the statement is a SELECT, otherwise false
	@param {List} paramList - A Java List object containing the parameters for the statement (optional)
*/
function executeSharedDBStatementTranslationsCh(statement, isQuery, paramList)
{
	var result;

	try
	{
		var dbConnTranslationsCh = globalChannelMap.get(&quot;dbConnTranslationsCh&quot;);

		if (dbConnTranslationsCh == null || dbConnTranslationsCh.getConnection().isClosed())
		{
			dbConnTranslationsCh = DatabaseConnectionFactory.createDatabaseConnection($(&apos;dbDriverMsSql&apos;),$(&apos;dbUrlTranslations&apos;),$(&apos;dbUserFhir&apos;),$(&apos;dbPwFhir&apos;));
			globalChannelMap.put(&quot;dbConnTranslationsCh&quot;, dbConnTranslationsCh);
		}

		if (paramList == undefined)
		{
			paramList = new Packages.java.util.ArrayList();
		}

		if (isQuery)
		{
			result = dbConnTranslationsCh.executeCachedQuery(statement, paramList);
		}
		else
		{
			result = dbConnTranslationsCh.executeUpdate(statement, paramList);
		}
	}
	catch (e)
	{
		logger.error(e);
	}
	finally
	{
		return result;
	}
}</code>
            </properties>
          </codeTemplate>
          <codeTemplate version="4.0.0">
            <id>5d1a5577-4ba4-4d1e-b6cd-e2d924164909</id>
            <name>Execute Statement with Shared DB Conn ODS Ch</name>
            <revision>1</revision>
            <lastModified>
              <time>1678476122280</time>
              <timezone>America/Chicago</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>/**
	Executes a SQL statement using a shared database connection stored in the Global Channel Map. If the
	connection does not exist, creates it.

	@param {String} statement - The SQL statement to execute
	@param {Boolean} isQuery - true if the statement is a SELECT, otherwise false
	@param {List} paramList - A Java List object containing the parameters for the statement
		(optional)
	@return {Any} 
*/
function executeSharedDBStatementOdsCh(statement, isQuery, paramList)
{
	var result;

	try
	{
		var dbConnOdsCh = globalChannelMap.get(&quot;dbConnOdsCh&quot;);

		if (dbConnOdsCh == null || dbConnOdsCh.getConnection().isClosed())
		{
			dbConnOdsCh = DatabaseConnectionFactory.createDatabaseConnection($(&apos;dbDriverMsSql&apos;),$(&apos;dbUrlOds&apos;),$(&apos;dbUserFhir&apos;),$(&apos;dbPwFhir&apos;));
			globalChannelMap.put(&quot;dbConnOdsCh&quot;, dbConnOdsCh);
		}

		if (paramList == undefined)
		{
			paramList = new Packages.java.util.ArrayList();
		}

		if (isQuery)
		{
			result = dbConnOdsCh.executeCachedQuery(statement, paramList);
		}
		else
		{
			result = dbConnOdsCh.executeUpdate(statement, paramList);
		}
	}
	catch (e)
	{
		logger.error(e);
	}
	finally
	{
		return result;
	}
}</code>
            </properties>
          </codeTemplate>
          <codeTemplate version="4.0.0">
            <id>3991db14-0c0b-4123-952c-5164c1ded501</id>
            <name>Execute Statement with Shared DB Conn ODW Ch</name>
            <revision>1</revision>
            <lastModified>
              <time>1678476122960</time>
              <timezone>America/Chicago</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>/**
	Executes a SQL statement using a shared database connection stored in the Global Channel Map. If the
	connection does not exist, creates it.  THis connects to the ODW db in Azure

	@param {String} statement - The SQL statement to execute
	@param {Boolean} isQuery - true if the statement is a SELECT, otherwise false
	@param {List} paramList - A Java List object containing the parameters for the statement
		(optional)
	@return {Any} 
*/
function executeSharedDBStatementOdwCh(statement, isQuery, paramList)
{
	var result;

	try
	{
		var dbConnOdwCh = globalChannelMap.get(&quot;dbConnOdwCh&quot;);

		if (dbConnOdwCh == null || dbConnOdwCh.getConnection().isClosed())
		{
			dbConnOdwCh = DatabaseConnectionFactory.createDatabaseConnection($(&apos;dbDriverMsSql&apos;),$(&apos;dbUrlOdw&apos;),$(&apos;dbUserFhir&apos;),$(&apos;dbPwFhir&apos;));
			globalChannelMap.put(&quot;dbConnOdwCh&quot;, dbConnOdwCh);
		}

		if (paramList == undefined)
		{
			paramList = new Packages.java.util.ArrayList();
		}

		if (isQuery)
		{
			result = dbConnOdwCh.executeCachedQuery(statement, paramList);
		}
		else
		{
			result = dbConnOdwCh.executeUpdate(statement, paramList);
		}
	}
	catch (e)
	{
		logger.error(e);
	}
	finally
	{
		return result;
	}
}</code>
            </properties>
          </codeTemplate>
          <codeTemplate version="4.0.0">
            <id>fae08c88-7550-479a-b8ed-ffef47e8eed9</id>
            <name>executeSharedDBStatementClient</name>
            <revision>1</revision>
            <lastModified>
              <time>1678476121956</time>
              <timezone>America/Chicago</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>/**
	Executes a SQL statement using a shared database connection stored in the Global Map. If the
	connection does not exist, creates it.

	@param {String} statement - The SQL statement to execute
	@param {Boolean} isQuery - true if the statement is a SELECT, otherwise false
	@param {List} paramList - A Java List object containing the parameters for the statement (optional)
*/
function executeSharedDBStatementClient(statement, isQuery, paramList, dbname)
{
	var result;
 	var dburl= &apos;jdbc:sqlserver://AZW1DEV-SQL02.clinicient.com:1433;databaseName=&apos;+dbname+&apos;&apos;;
	try
	{
		var dbConnFhir = globalMap.get(&quot;dbConnFhir&quot;);

		if (dbConnFhir == null || dbConnFhir.getConnection().isClosed())
		{
			dbConnFhir = DatabaseConnectionFactory.createDatabaseConnection($(&apos;dbDriverMsSql&apos;),dburl,$(&apos;dbUserFhir&apos;),$(&apos;dbPwFhir&apos;));
			
			//globalMap.put(&quot;dbConnFhir&quot;, dbConnFhir);
		}

		result = dbConnFhir.executeCachedQuery(statement);
	
	}
	catch (e)
	{
		logger.error(e);
	}
	finally
	{
		return result;
	}
}</code>
            </properties>
          </codeTemplate>
        </codeTemplates>
      </codeTemplateLibrary>
      <codeTemplateLibrary version="4.0.0">
        <id>ed20a457-5beb-4aea-9bb9-cf91112ccc56</id>
        <name>WebPT-Default Functions</name>
        <revision>10</revision>
        <lastModified>
          <time>1690140133487</time>
          <timezone>America/Chicago</timezone>
        </lastModified>
        <description></description>
        <includeNewChannels>true</includeNewChannels>
        <enabledChannelIds>
          <string>c5aa527b-0e36-4790-8302-e1a6a472455e</string>
          <string>4e15d4c9-43b4-4d2c-9185-701707cd2f6a</string>
          <string>f7c77a5d-b086-4aed-aa56-e72984abd5ea</string>
          <string>65d47b29-67e5-4533-917c-337880fb8b17</string>
          <string>b7f455da-a5a4-4c75-be8f-d6f2c3561ac8</string>
          <string>42b2b012-ffc4-41ba-a71e-00fbd1cc1c67</string>
          <string>ead4368c-a612-459c-950e-50e49df05d9b</string>
          <string>81988bfb-2e74-4e25-ac01-1a000e027e97</string>
          <string>4964d3cc-7004-41c7-a704-da97ac92caf3</string>
          <string>954d2af0-df2c-46c6-95bc-02661a8d4424</string>
          <string>8664ea57-77f2-481d-8f1c-9b45761285e8</string>
          <string>fd14f323-1f60-4ec5-b3e1-6ce8248bbcf3</string>
          <string>e248ef99-284c-41f3-adac-d7b43433b16f</string>
          <string>6910529c-6cd1-4838-9a4f-d3c84faa2866</string>
          <string>8913e845-1fff-427c-bec0-e0a01d131f89</string>
          <string>19a0dcf7-3736-4b25-9049-80301c6cd04d</string>
          <string>2d61ede3-55be-462f-b71c-d7ecc67baabd</string>
          <string>32516e02-db8c-47f3-aba9-adfff1ea28c2</string>
          <string>f1688a2f-ece0-4292-b5f9-e56c50b6bc5a</string>
          <string>2a908305-89cf-4e4f-9a66-c6fed1e9d976</string>
          <string>c74d49f9-3866-495c-a5b4-90cb4754c6f8</string>
          <string>7a3b0715-12e0-4803-aa51-c1a947ef9b66</string>
          <string>dff92eca-e23d-4802-8e3c-023f3af3e640</string>
          <string>a3e80233-747a-4ce0-9f8f-59dcbe8e2ca6</string>
          <string>0ace74f9-8ee8-45a5-8093-8d5bb95dae90</string>
          <string>32ea3c4a-9c59-4482-beb2-22d729e5e379</string>
          <string>a827a980-9c7f-410c-893a-141429f7b30a</string>
          <string>fba4345d-b56d-4b31-802c-cdac2248902d</string>
          <string>9ba29622-ed1f-4a34-9cbe-6f3df0eb3026</string>
          <string>d6ea31a1-1aa6-4a53-adde-10a1bcdcd3c5</string>
          <string>4966bc7c-223c-4c44-8f71-4625cfcc0cc0</string>
          <string>72383579-097e-4205-b030-ce272c90b835</string>
          <string>88f9a267-e37f-418d-aaf2-d077b7a0cdca</string>
          <string>ace8b46e-8a2f-490e-afd1-24202f8b4b17</string>
          <string>a2b31875-5c31-4052-938f-a69550a8cb55</string>
          <string>cdfecd0a-b177-441d-8b7e-9c239d4a5816</string>
          <string>37b05d6c-c044-4394-a60a-deaee676ce0d</string>
          <string>71368dee-5964-4073-bab7-ae0fd3ae90b0</string>
          <string>4c3b5879-a8d9-48be-83cc-5f7c5777a188</string>
          <string>c65d1ffa-65af-4ee8-803a-2f32b201889d</string>
          <string>3792b059-e098-436c-81fe-23502ef5042b</string>
          <string>8a4eb453-fc7a-484a-8e15-422d9b490edf</string>
          <string>a757905f-315a-43be-a624-38780a3d7574</string>
          <string>1c6037e0-7bf9-41ae-b896-5be7b77e711f</string>
          <string>631f9a02-6b74-4ecd-9582-221b98a0450e</string>
          <string>c2277647-41dc-4e15-bce4-2ae23cec064b</string>
          <string>c1fd4789-03e5-4ec3-91d2-cdded4b13365</string>
          <string>318f77fc-a631-48e0-8a4e-a87831bd81a7</string>
          <string>38e80069-5a80-4483-9a22-02c928973719</string>
          <string>73070cc2-f8a4-46a8-8d28-a1c1d4648520</string>
          <string>ba9dcc01-6b1c-4fc3-afc4-cf1c5da9a8aa</string>
          <string>77033047-c5e7-4308-b2ed-d361923ed9a2</string>
          <string>a6fc8ba1-0134-4d1a-a341-cd9a2f295595</string>
          <string>a45d1db0-9b84-49d3-b26b-243dbf2a4f70</string>
          <string>ab7d9121-bd5f-47c1-964a-53531cd178dd</string>
          <string>bfc00235-7e2e-457a-b27f-e5288e9c28c4</string>
          <string>754a8caa-2161-45d8-b261-e32d8b0fb044</string>
          <string>c3882ee4-e2e6-47c6-8da9-801a847e0459</string>
          <string>9370b181-aa9c-4db3-b7dc-2cd81cc91fdd</string>
          <string>e678dbf5-f021-43dc-84ae-967500d5c31a</string>
          <string>7741037b-845e-4e6d-b6aa-c9f249b06084</string>
          <string>c65024ed-4660-4423-9636-cb6309cae138</string>
          <string>0972a85f-5ad7-4a93-88e1-5f991b7f7879</string>
          <string>3fdef7e5-20e2-4e6f-aad4-a156ddb2e5e2</string>
          <string>a25fa941-8ba3-47eb-81d1-24c9e45fe29d</string>
          <string>1b12c7a8-abee-4c24-85a4-d3b447e9d280</string>
          <string>5cfc8ad8-0fb2-48bf-a318-1aabd86cf60e</string>
          <string>10ef3f18-f1c1-495c-80be-026eb56436c5</string>
          <string>c15d4352-13b2-4698-a771-b3593449d7ba</string>
          <string>64e32643-e41c-4986-9550-c634cb02f9ba</string>
          <string>347deee2-a3c1-4542-bc3e-c619defe0b64</string>
          <string>9e040198-05cf-11e8-ba89-0ed5f89f718b</string>
          <string>dc8e6472-bc7e-4ebe-a8dd-968b791e2975</string>
          <string>66487d57-e34e-4a9a-8296-e62a66d3ab8b</string>
          <string>99b43124-34ef-4ead-a348-ef0ac0a52539</string>
          <string>4c2e73a8-aabe-4c04-9ba5-50ab49d3cb95</string>
          <string>0df5acd6-0251-4546-9d35-ed7f1515e00b</string>
          <string>db4e2d12-f41b-4da9-87b8-a1feb4c29054</string>
          <string>a6ec1677-5012-430f-bcbc-f41fe39ecf1f</string>
          <string>5c5b6b2c-f3fd-456d-a90d-d684b5fb061e</string>
          <string>42e730bb-0721-435e-8dcf-d25d6d5d1dc6</string>
          <string>c90c935e-e3de-4ffe-839f-5560b39f07fb</string>
          <string>18803b99-6545-4d09-9277-a559ee2e94fd</string>
          <string>5231fded-a3aa-44e8-bd77-3ad84d39e1d2</string>
          <string>89faf430-5bd7-4440-9ed0-4b02d3462403</string>
        </enabledChannelIds>
        <disabledChannelIds/>
        <codeTemplates>
          <codeTemplate version="4.0.0">
            <id>a8a9a0c8-9322-46dc-bef8-011eb3d70291</id>
            <name>Create Header for CSV</name>
            <revision>1</revision>
            <lastModified>
              <time>1678476121678</time>
              <timezone>America/Chicago</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>/**
	This creates a header for csv files based on the contents of the header variable.  The header
	variable is populated in the channel from the outbound msg template

	@return {String} return description
*/
function createHeader() {
	//Destination transformer.  this creates the header for each new file

	var path = java.nio.file.Paths.get($(&apos;filePath&apos;)+$(&apos;fileName&apos;));
	var bytes = (new java.lang.String($(&apos;header&apos;))).getBytes(&quot;UTF-8&quot;);
	try {
	  java.nio.file.Files.write(path, bytes, java.nio.file.StandardOpenOption.CREATE_NEW);
	}
	catch (e) {
	  //logger.info(&quot; should throw IOException if file already exists&quot;);
	
	}
}</code>
            </properties>
          </codeTemplate>
          <codeTemplate version="4.0.0">
            <id>5a886a1f-dab1-41b5-94c6-1a639907d7da</id>
            <name>Filter Message Evaluate Received Checksum</name>
            <revision>33</revision>
            <lastModified>
              <time>1678916806664</time>
              <timezone>America/Chicago</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>/**  This code works by calculating a checksum for each provided message.  We save off the most recent 100 unique checksum values in a global 
	array so if the current message has been recently received we are able to ignore it.
	
	@author:  	Jeffrey Ritz
	@scriptName: 	filterEvaluateReceivedChecksum.js
	@created: 	2023-03-09
	@param {object} msg - Inbound connectorMessage.getRawData()
	@param {boolean} filter - return filter boolean (true= filter msg, false= do not filter msg)
		persist received_checksum global ChannelMap array
		persist filterMessage ChannelMap variable
	@history
*/
function filterEvaluateReceivedChecksum(msg) {	

	var scriptName= &apos;filterEvaluateReceivedChecksum&apos;
	var filter = false;
	var received_len_limit = 999;
	var debug= 0;
	if(typeof(msg)=== &apos;object&apos;) var msg= JSON.stringify(msg);

	if(debug&gt;0) {
		logger.error(&apos;DEBUG::&apos;+scriptName+&apos; A msg typeof: &apos;+typeof(msg)+&apos; msg: &apos;+msg);
		logger.error(&apos;DEBUG::&apos;+scriptName+&apos; B connectorMessage.getRawData() typeof: &apos;+typeof(connectorMessage.getRawData())+&apos; msg: &apos;+connectorMessage.getRawData());
	} // end if 
	
	//calculate checksum for current message (ignoring MSH and ORC segments)
	var checksum = new java.util.zip.CRC32();
	// var dataBytes = new java.lang.String(connectorMessage.getRawData()).getBytes(&apos;UTF-8&apos;);
	// message = new String(message.getBytes(&quot;utf-8&quot;), &quot;utf-8&quot;);
	if(debug&gt;0) logger.error(&apos;DEBUG::&apos;+scriptName+&apos; C msg typeof: &apos;+typeof(msg)+&apos; msg: &apos;+msg);
	// var dataBytes = new java.lang.String(msg.getBytes(&apos;UTF-8&apos;));
	var dataBytes = new java.lang.String(msg).getBytes(&apos;UTF-8&apos;);
	if(debug&gt;0) logger.error(&apos;DEBUG::&apos;+scriptName+&apos; D dataBytes msg typeof: &apos;+typeof(dataBytes)+&apos; dataBytes: &apos;+dataBytes);

	// var messageObjectgetBytes= checksum.update(connectorMessage.getRawData().getBytes());
	if(debug&gt;0) logger.error(&apos;DEBUG::&apos;+scriptName+&apos; E msg typeof: &apos;+typeof(msg)+&apos; msg: &apos;+msg);
	var messageObjectgetBytes= checksum.update(dataBytes);

	if(debug&gt;0) {
		logger.error(&apos;DEBUG::&apos;+scriptName+&apos; msg typeof: &apos;+typeof(msg)+&apos; msg.getBytes(): &apos;+dataBytes);
		logger.error(&apos;DEBUG::&apos;+scriptName+&apos; messageObjectgetBytes typeof: &apos;+typeof(messageObjectgetBytes)+&apos; messageObjectgetBytes: &apos;+messageObjectgetBytes);
	} // end if 
	
	$c(&apos;checksum&apos;, checksum.getValue());
	
	//grab the global channel map variable holding the last X unique checksums that we&apos;ve received
	var received = $gc(&apos;received_checksums&apos;);
	
	if (received == undefined) {
		var received = new Array();
		received.push(checksum.getValue());
	} else {
		//check if we&apos;ve recently received this message, skip it if so
		if (received.indexOf(checksum.getValue()) &gt; -1) {
			filter = true;
		//we haven&apos;t seen it recently, so remember it and allow it through
		} else {
			var received_len = received.length;
			if (received_len &gt; received_len_limit) {
				//remove oldest/first entry, shift all entries forward, and add new entry to end
				received.shift();
				received[received_len_limit] = checksum.getValue();
			} else {
				//add new entry to end of array
				received[received_len] = checksum.getValue();
			} // end if 
		} // end if 
	} // end if 

	 //debug code
	/*for (x=0; x&lt;=received_len_limit; x++) {
		$c(&apos;received-&apos;+x, received[x]);
	} */

	$c(&apos;filterMessage&apos;,filter);
	$gc(&apos;received_checksums&apos;,received);

	return filter;

} // end function</code>
            </properties>
          </codeTemplate>
          <codeTemplate version="4.0.0">
            <id>fbd0484d-74a2-48e4-aedd-f97c2fcefa16</id>
            <name>Get Message Checksum</name>
            <revision>12</revision>
            <lastModified>
              <time>1678916806703</time>
              <timezone>America/Chicago</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>/**  This code works by calculating and reutrning a checksum for each provided message
	
	@author:  	Jeffrey Ritz
	@scriptName: 	getMessageChecksum.js
	@created: 	2023-03-09
	@param {object} msg - Inbound connectorMessage.getRawData()
	@param {object} result - return checksum value
	@history
	2023-03-15 JER - Modified to push in values into the arrChecksumValue new Array() to remove the exponential representation of the number value
*/
function getMessageChecksum(msg) {	

	var scriptName= &apos;getMessageChecksum&apos;;
	var debug= 0;
	if(typeof(msg)=== &apos;object&apos;) var msg= JSON.stringify(msg);
	
	//calculate checksum for current message (ignoring MSH and ORC segments)
	var checksum = new java.util.zip.CRC32();
	var dataBytes = new java.lang.String(msg).getBytes(&apos;UTF-8&apos;);
	if(debug&gt;0) {
		logger.error(&apos;DEBUG::&apos;+scriptName+&apos; D dataBytes msg typeof: &apos;+typeof(dataBytes)+&apos; dataBytes: &apos;+dataBytes);
		logger.error(&apos;DEBUG::&apos;+scriptName+&apos; E msg typeof: &apos;+typeof(msg)+&apos; msg: &apos;+msg);
	} // end if 
	var messageObjectgetBytes= checksum.update(dataBytes);

	if(debug&gt;0) {
		logger.error(&apos;DEBUG::&apos;+scriptName+&apos; msg typeof: &apos;+typeof(msg)+&apos; msg.getBytes(): &apos;+dataBytes);
		logger.error(&apos;DEBUG::&apos;+scriptName+&apos; messageObjectgetBytes typeof: &apos;+typeof(messageObjectgetBytes)+&apos; messageObjectgetBytes: &apos;+messageObjectgetBytes);
	} // end if 

	var checksumValue= checksum.getValue();
	// 2023-03-15 JER - Modified to push in values into the arrChecksumValue new Array() 
	var arrChecksumValue= new Array(); 
	arrChecksumValue.push(checksumValue);
	$c(&apos;checksum&apos;, arrChecksumValue);

	return checksumValue;

} // end function</code>
            </properties>
          </codeTemplate>
          <codeTemplate version="4.0.0">
            <id>91db9bd1-ca92-4dcc-bba4-e1ece603fc87</id>
            <name>Remove Child Object From Parent Object Json</name>
            <revision>22</revision>
            <lastModified>
              <time>1678916845037</time>
              <timezone>America/Chicago</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>/**  This function will remove a JSON child object and it&apos;s descendents from a parent object JSON
	
	@author:  	Jeffrey Ritz
	@scriptName: 	removeChildObjectFromParentObjectJson.js
	@created: 	2023-03-09
	@param {object} msg - Inbound connectorMessage.getRawData()
		{string} parentObject - place the name of the string to be designated as the parent object in the JSON
		{string} childObject  - place the name of the string to be designated as the child object to be deleted from the JSON
	@param {object} msg - return modified Json object msg excluding specified Json child object
	@history
*/
function removeChildObjectFromParentObjectJson(msg, parentObject, childObject) {
	
	var scriptName= &apos;removeChildObjectFromParentObjectJson&apos;;
	var debug= 0;

	//var strObjJson= JSON.parse(msg);
	var strObjJson= JSON.stringify(msg);
	
	//var objJson= JSON.parse(msg);
	var newParentObjects= new Object();
	var parentObjects= msg;
	var arrParentObjects= new Array();
	var arrTransactionObjects= new Array();

	if(debug&gt;0) logger.error(&apos;DEBUG::&apos;+scriptName+&apos; typeof parentObjects: &apos;+typeof(parentObjects));
	for (var key in parentObjects) {
		if(debug&gt;0) logger.error(&apos;DEBUG::&apos;+scriptName+&apos; Parent Objects typeof key: &apos;+typeof(key)+&apos; key: &apos;+key);
		if(key== parentObject) {
			if(debug&gt;0) logger.error(&apos;DEBUG::&apos;+scriptName+&apos; Parent Objects typeof objJson[key]: &apos;+typeof(parentObjects[key])+&apos; parentObjects[key]: &apos;+JSON.stringify(parentObjects[key]));
			
			var newChildObjects= new Object();
			var childObjects= parentObjects[key];
			var arrChildObjects= new Array();
			
			for(var key2 in childObjects) {
				if(debug&gt;0) logger.error(&apos;DEBUG::&apos;+scriptName+&apos; typeof key2: &apos;+typeof(key2)+&apos; key2: &apos;+key2+&apos; childObject: &apos;+childObject);
				for(var key3 in childObjects[key2]) {
					if(debug&gt;0) logger.error(&apos;DEBUG::&apos;+scriptName+&apos; typeof key3: &apos;+typeof(key3)+&apos; key3: &apos;+key3+&apos; childObject: &apos;+childObject);
					if(key3== childObject) {
						var transactionObject= new Object();
						if(debug&gt;0) logger.error(&apos;DEBUG::&apos;+scriptName+&apos; childObject typeof: &apos;+typeof(childObjects[key2][key3])+&apos; childObject: &apos;+JSON.stringify(childObjects[key2][key3]));
						transactionObject.key= key3;
						transactionObject.value= childObjects[key2][key3];
						delete childObjects[key2][key3];
						if(debug&gt;0) logger.info(&apos;DEBUG::&apos;+scriptName+&apos; DELETE childObject: &apos;+key3+&apos; of parentObject: &apos;+JSON.stringify(childObjects[key2]));
						arrTransactionObjects.push(transactionObject);
					} // end if
				} // end for 
				arrChildObjects.push(childObjects[key2]);
			} // end for
			newParentObjects[key]= arrChildObjects;
			if(debug&gt;0) logger.error(&apos;DEBUG::&apos;+scriptName+&apos; Add all child keys: &apos;+JSON.stringify(arrChildObjects)+&apos; into ParentObject[&apos;+key+&apos;]: &apos;+newParentObjects[key]);
		} else {
			newParentObjects[key]= parentObjects[key];
			if(debug&gt;0) logger.error(&apos;DEBUG::&apos;+scriptName+&apos; Add key: &apos;+key+&apos; object: &apos;+parentObjects[key]+&apos; string: &apos;+JSON.stringify(parentObjects[key]));
		} // end if
		arrParentObjects.push(newParentObjects);
	} // end for 
	var newMsg= arrParentObjects;
	channelMap.put(&apos;removeChildObjectMsg&apos;,newMsg);
	channelMap.put(&apos;removedChildTransIds&apos;,arrTransactionObjects);
	
	if(debug&gt;0) logger.error(&apos;DEBUG::&apos;+scriptName+&apos; AFTER msg: &apos;+JSON.stringify(newMsg));
	return newMsg;
	
} </code>
            </properties>
          </codeTemplate>
          <codeTemplate version="4.0.0">
            <id>2ff28338-dfb6-445d-a04e-c74b5486a08c</id>
            <name>Remove Object From Json</name>
            <revision>26</revision>
            <lastModified>
              <time>1703964988318</time>
              <timezone>America/Chicago</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>/**  Desc: This function will remove a JSON object and it&apos;s descendents from the msg
	
	fileName: 	removeObjectFromJson.js
	name:		Remove Object From Json	
	Authored:  	Jeffrey Ritz
	Created: 		2023-03-09
	Details:
		@param IN {string} msg - provide parent JSON object (i.e. Inbound connectorMessage.getRawData() - msg)
		@param IN {string} removeObject - provide JSON object to evaluate and remove from parent JSON object (msg)
		OUT (object) newMsg - return JSON object from processing
	@history
	2023-03-15 JER - Modified to include removeObject function parameter to specify specific JSON object by referencing key to be removed
*/
function removeObjectFromJson(msg, removeObject) {
	
	var scriptName= &apos;removeObjectFromJson&apos;;
	var debug= 0;
	//var objJson= JSON.stringify(msg);
	var objJson= JSON.parse(msg);
	var newObjJson= new Object();

	if(debug&gt;0) logger.error(&apos;DEBUG::&apos;+scriptName+&apos; typeof objJson: &apos;+typeof(objJson)+&apos; objJSON: &apos;+JSON.stringify(objJson));
	for (var key in objJson) {
		if(key== removeObject) {
			if(debug&gt;0) logger.error(&apos;DEBUG::&apos;+scriptName+&apos; DELETE key: &apos;+key);
			// delete objJson[key];
		} else {
			newObjJson[key]= objJson[key];
			if(debug&gt;0) logger.error(&apos;DEBUG::&apos;+scriptName+&apos; Add key: &apos;+key+&apos; object: &apos;+objJson[key]+&apos; string: &apos;+JSON.stringify(objJson[key]));
		} // end if 
	} // end for 
	var newMsg= newObjJson;

	if(debug&gt;0) logger.error(&apos;DEBUG::&apos;+scriptName+&apos; AFTER msg: &apos;+JSON.stringify(newMsg));

	// return JSON.stringify(newMsg);
	return newMsg;
} 
</code>
            </properties>
          </codeTemplate>
          <codeTemplate version="4.0.0">
            <id>993a6fd8-454a-4133-ba32-dbcfea71582b</id>
            <name>Update EDITransactionLog</name>
            <revision>1</revision>
            <lastModified>
              <time>1678476123233</time>
              <timezone>America/Chicago</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>/**
	The purpose of this function is to update the status in Insight.
	Populate the channel map with the following variables functionalGroupControlNumber, status, eventDate

	@param {String} arg1 - arg1 description
	@return {String} return description
*/
function updateStatus () {

	//  Build the llst of paramters to pass to the database
	var paramList = new Packages.java.util.ArrayList();
	paramList.add($(&apos;functionalGroupControlNumber&apos;));
	paramList.add($(&apos;eventDate&apos;));  //dateTime in the acknoledged field in this format (&quot;2017-07-31 14:15:01.577&quot;)
	paramList.add(new java.lang.Integer(parseInt($(&apos;status&apos;), 10)));
	
//	logger.info(&quot;updateStatus &quot;+paramList);

	//  SQL Statement and paramters that will be sent to SQL
	var statement = &quot;EXEC dbo.pr_EDITransactionLog_Update ?, ?, ?&quot;;
	//  Code template used for establishiing connection and passing the sql statement and parameter list  
	var result = executeSharedDBStatementFhirCh(statement, false, paramList);
	return result;
	
}</code>
            </properties>
          </codeTemplate>
          <codeTemplate version="4.0.0">
            <id>42cb290e-5fb0-46b8-82db-576ea1e1ba0d</id>
            <name>Update EDITransactionLog from responseStatus in the response transformer </name>
            <revision>1</revision>
            <lastModified>
              <time>1678476123356</time>
              <timezone>America/Chicago</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>/**
	Call this in the response transformer on the destination.

	@param {String} arg1 - arg1 description
	@return {String} return description
*/
function updateReponseStatus() {
	var status = 0;
	if (responseStatus == SENT){
		var status = 1;
		channelMap.put(&apos;status&apos;,status);
	}

updateStatus()
}</code>
            </properties>
          </codeTemplate>
          <codeTemplate version="4.0.0">
            <id>2223579b-f914-4be7-a575-f1a2a2aa1ae2</id>
            <name>ValidateToString</name>
            <revision>1</revision>
            <lastModified>
              <time>1678476123044</time>
              <timezone>America/Chicago</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>/**
	Modify the description here. Modify the function name and parameters as needed. One function per
	template is recommended; create a new code template for each new function.

	@param {Any} mapping - 
	@param {Any} defaultValue - 
	@param {Any} replacement - 
	@return {String} return description
*/
function validateToString(mapping, defaultValue, replacement) {
    if (mapping == null) {
        mapping = &apos;&apos;;
    }
    return validate(mapping, defaultValue, replacement).toString() + &apos;&apos;;
}</code>
            </properties>
          </codeTemplate>
        </codeTemplates>
      </codeTemplateLibrary>
      <codeTemplateLibrary version="4.0.0">
        <id>8c9a8268-4ef0-43e9-ae5b-bf8895f0b80c</id>
        <name>WebPT-FORMAT</name>
        <revision>4</revision>
        <lastModified>
          <time>1703964939902</time>
          <timezone>America/Chicago</timezone>
        </lastModified>
        <description>Include any functions or codes with 
-date &amp; time formating related
-data type formatting</description>
        <includeNewChannels>true</includeNewChannels>
        <enabledChannelIds>
          <string>c5aa527b-0e36-4790-8302-e1a6a472455e</string>
          <string>4e15d4c9-43b4-4d2c-9185-701707cd2f6a</string>
          <string>f7c77a5d-b086-4aed-aa56-e72984abd5ea</string>
          <string>65d47b29-67e5-4533-917c-337880fb8b17</string>
          <string>b7f455da-a5a4-4c75-be8f-d6f2c3561ac8</string>
          <string>42b2b012-ffc4-41ba-a71e-00fbd1cc1c67</string>
          <string>ead4368c-a612-459c-950e-50e49df05d9b</string>
          <string>81988bfb-2e74-4e25-ac01-1a000e027e97</string>
          <string>4964d3cc-7004-41c7-a704-da97ac92caf3</string>
          <string>954d2af0-df2c-46c6-95bc-02661a8d4424</string>
          <string>fd14f323-1f60-4ec5-b3e1-6ce8248bbcf3</string>
          <string>e248ef99-284c-41f3-adac-d7b43433b16f</string>
          <string>e20d28dc-e360-4b54-a225-5c6cddeba9a3</string>
          <string>6910529c-6cd1-4838-9a4f-d3c84faa2866</string>
          <string>8913e845-1fff-427c-bec0-e0a01d131f89</string>
          <string>19a0dcf7-3736-4b25-9049-80301c6cd04d</string>
          <string>32516e02-db8c-47f3-aba9-adfff1ea28c2</string>
          <string>b19c96b2-afb4-4248-83a8-96f521b20489</string>
          <string>f1688a2f-ece0-4292-b5f9-e56c50b6bc5a</string>
          <string>ed58a744-1f83-44aa-ad23-feef56e2f5e6</string>
          <string>4a98f7b0-d1f3-478d-ad65-550f8287fe24</string>
          <string>7a3b0715-12e0-4803-aa51-c1a947ef9b66</string>
          <string>dff92eca-e23d-4802-8e3c-023f3af3e640</string>
          <string>a3e80233-747a-4ce0-9f8f-59dcbe8e2ca6</string>
          <string>0ace74f9-8ee8-45a5-8093-8d5bb95dae90</string>
          <string>32ea3c4a-9c59-4482-beb2-22d729e5e379</string>
          <string>a827a980-9c7f-410c-893a-141429f7b30a</string>
          <string>fba4345d-b56d-4b31-802c-cdac2248902d</string>
          <string>9ba29622-ed1f-4a34-9cbe-6f3df0eb3026</string>
          <string>d6ea31a1-1aa6-4a53-adde-10a1bcdcd3c5</string>
          <string>4966bc7c-223c-4c44-8f71-4625cfcc0cc0</string>
          <string>72383579-097e-4205-b030-ce272c90b835</string>
          <string>88f9a267-e37f-418d-aaf2-d077b7a0cdca</string>
          <string>a2b31875-5c31-4052-938f-a69550a8cb55</string>
          <string>37b05d6c-c044-4394-a60a-deaee676ce0d</string>
          <string>71368dee-5964-4073-bab7-ae0fd3ae90b0</string>
          <string>5cc5d7df-228a-4d24-b774-681c717e1876</string>
          <string>4c3b5879-a8d9-48be-83cc-5f7c5777a188</string>
          <string>c65d1ffa-65af-4ee8-803a-2f32b201889d</string>
          <string>5c763fad-3eae-4e87-b944-0dbfe25814e0</string>
          <string>3792b059-e098-436c-81fe-23502ef5042b</string>
          <string>8a4eb453-fc7a-484a-8e15-422d9b490edf</string>
          <string>a757905f-315a-43be-a624-38780a3d7574</string>
          <string>1c6037e0-7bf9-41ae-b896-5be7b77e711f</string>
          <string>631f9a02-6b74-4ecd-9582-221b98a0450e</string>
          <string>c2277647-41dc-4e15-bce4-2ae23cec064b</string>
          <string>c1fd4789-03e5-4ec3-91d2-cdded4b13365</string>
          <string>318f77fc-a631-48e0-8a4e-a87831bd81a7</string>
          <string>38e80069-5a80-4483-9a22-02c928973719</string>
          <string>ba9dcc01-6b1c-4fc3-afc4-cf1c5da9a8aa</string>
          <string>77033047-c5e7-4308-b2ed-d361923ed9a2</string>
          <string>2e0d9b6c-294f-4506-8632-dc4622b4f651</string>
          <string>d3f6504f-12cd-4e69-a920-6bb3a2195cc2</string>
          <string>a6fc8ba1-0134-4d1a-a341-cd9a2f295595</string>
          <string>57fa694a-2758-4e52-b725-967a74786d1f</string>
          <string>a45d1db0-9b84-49d3-b26b-243dbf2a4f70</string>
          <string>ab7d9121-bd5f-47c1-964a-53531cd178dd</string>
          <string>bfc00235-7e2e-457a-b27f-e5288e9c28c4</string>
          <string>6be39ce0-8f88-42fb-b3a4-4afd4da39734</string>
          <string>754a8caa-2161-45d8-b261-e32d8b0fb044</string>
          <string>9370b181-aa9c-4db3-b7dc-2cd81cc91fdd</string>
          <string>e678dbf5-f021-43dc-84ae-967500d5c31a</string>
          <string>7741037b-845e-4e6d-b6aa-c9f249b06084</string>
          <string>c65024ed-4660-4423-9636-cb6309cae138</string>
          <string>0972a85f-5ad7-4a93-88e1-5f991b7f7879</string>
          <string>3fdef7e5-20e2-4e6f-aad4-a156ddb2e5e2</string>
          <string>ccd59c71-8d2a-40e9-8647-57e000ec6f43</string>
          <string>a25fa941-8ba3-47eb-81d1-24c9e45fe29d</string>
          <string>8cbc4731-752e-4e2e-a61d-018ed3e0cef0</string>
          <string>1b12c7a8-abee-4c24-85a4-d3b447e9d280</string>
          <string>5cfc8ad8-0fb2-48bf-a318-1aabd86cf60e</string>
          <string>10ef3f18-f1c1-495c-80be-026eb56436c5</string>
          <string>c15d4352-13b2-4698-a771-b3593449d7ba</string>
          <string>64e32643-e41c-4986-9550-c634cb02f9ba</string>
          <string>347deee2-a3c1-4542-bc3e-c619defe0b64</string>
          <string>9e040198-05cf-11e8-ba89-0ed5f89f718b</string>
          <string>dc8e6472-bc7e-4ebe-a8dd-968b791e2975</string>
          <string>66487d57-e34e-4a9a-8296-e62a66d3ab8b</string>
          <string>99b43124-34ef-4ead-a348-ef0ac0a52539</string>
          <string>4c2e73a8-aabe-4c04-9ba5-50ab49d3cb95</string>
          <string>0df5acd6-0251-4546-9d35-ed7f1515e00b</string>
          <string>93f57fef-8fc0-4b05-91de-b1cdb48034a2</string>
          <string>db4e2d12-f41b-4da9-87b8-a1feb4c29054</string>
          <string>a6ec1677-5012-430f-bcbc-f41fe39ecf1f</string>
          <string>5c5b6b2c-f3fd-456d-a90d-d684b5fb061e</string>
          <string>42e730bb-0721-435e-8dcf-d25d6d5d1dc6</string>
          <string>c90c935e-e3de-4ffe-839f-5560b39f07fb</string>
          <string>18803b99-6545-4d09-9277-a559ee2e94fd</string>
          <string>5231fded-a3aa-44e8-bd77-3ad84d39e1d2</string>
          <string>89faf430-5bd7-4440-9ed0-4b02d3462403</string>
        </enabledChannelIds>
        <disabledChannelIds/>
        <codeTemplates>
          <codeTemplate version="4.0.0">
            <id>920c9ead-70a6-4168-9d95-89261b73ae44</id>
            <name>12digitDateTime</name>
            <revision>1</revision>
            <lastModified>
              <time>1678476123520</time>
              <timezone>America/Chicago</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>CHANNEL_UNDEPLOY</contextType>
                <contextType>CHANNEL_PREPROCESSOR</contextType>
                <contextType>GLOBAL_UNDEPLOY</contextType>
                <contextType>CHANNEL_BATCH</contextType>
                <contextType>GLOBAL_POSTPROCESSOR</contextType>
                <contextType>GLOBAL_PREPROCESSOR</contextType>
                <contextType>GLOBAL_DEPLOY</contextType>
                <contextType>CHANNEL_POSTPROCESSOR</contextType>
                <contextType>CHANNEL_ATTACHMENT</contextType>
                <contextType>CHANNEL_DEPLOY</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>/**
Take any 12 digit string yyyyMMddHHmm and change to MM/dd/yyyy HH:mm 

	@param {String} arg1 - date and time digit string
	@return {String} return human readable format MM/dd/yyyy HH:mm
*/
function yyyyMMddHHmm(string) {
	return DateUtil.convertDate(&quot;yyyyMMddHHmm&quot;, &quot;MM/dd/yyyy HH:mm&quot;, string);
}</code>
            </properties>
          </codeTemplate>
          <codeTemplate version="4.0.0">
            <id>fe2689ec-1946-46d5-8dd6-8fbbf106e1e6</id>
            <name>14digitDateTime</name>
            <revision>1</revision>
            <lastModified>
              <time>1678476122871</time>
              <timezone>America/Chicago</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>CHANNEL_UNDEPLOY</contextType>
                <contextType>CHANNEL_PREPROCESSOR</contextType>
                <contextType>GLOBAL_UNDEPLOY</contextType>
                <contextType>CHANNEL_BATCH</contextType>
                <contextType>GLOBAL_POSTPROCESSOR</contextType>
                <contextType>GLOBAL_PREPROCESSOR</contextType>
                <contextType>GLOBAL_DEPLOY</contextType>
                <contextType>CHANNEL_POSTPROCESSOR</contextType>
                <contextType>CHANNEL_ATTACHMENT</contextType>
                <contextType>CHANNEL_DEPLOY</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>/**
    Take 14 digit string yyyyMMddHHmmss and change to MM/dd/yyyy HH:mm:ss 

	@param {String} arg1 - date and time digit string
	@return {String} return human readable format MM/dd/yyyy HH:mm:ss
*/
function yyyyMMddHHmmss(string) {
	if (string.length == 14) {
		  return DateUtil.convertDate(&quot;yyyyMMddHHmmss&quot;, &quot;MM/dd/yyyy HH:mm:ss&quot;, string);
	}
	else {
		return &quot;unregcognized string&quot;;
	}
}</code>
            </properties>
          </codeTemplate>
          <codeTemplate version="4.0.0">
            <id>b9db35e2-d5bd-48a1-8cc6-3475c698d7b4</id>
            <name>currentDT_yyyy-MM-dd HH:mm:ss.SSS</name>
            <revision>1</revision>
            <lastModified>
              <time>1678476123114</time>
              <timezone>America/Chicago</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>CHANNEL_UNDEPLOY</contextType>
                <contextType>CHANNEL_PREPROCESSOR</contextType>
                <contextType>GLOBAL_UNDEPLOY</contextType>
                <contextType>CHANNEL_BATCH</contextType>
                <contextType>GLOBAL_POSTPROCESSOR</contextType>
                <contextType>GLOBAL_PREPROCESSOR</contextType>
                <contextType>GLOBAL_DEPLOY</contextType>
                <contextType>CHANNEL_POSTPROCESSOR</contextType>
                <contextType>CHANNEL_ATTACHMENT</contextType>
                <contextType>CHANNEL_DEPLOY</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>/**
	Author: Kirby Knight
	Date Modified:  11/09/2020
	Retund the current date/time down to the millisecond

	@return {String} return description
*/
function currentDtToMilliseconds() {
	return DateUtil.getCurrentDate(&apos;yyyy-MM-dd HH:mm:ss.SSS&apos;);
}</code>
            </properties>
          </codeTemplate>
          <codeTemplate version="4.0.0">
            <id>7e747999-4bec-43fc-978d-7049d3543cf0</id>
            <name>fixHL7NodeOrder</name>
            <revision>1</revision>
            <lastModified>
              <time>1678476123155</time>
              <timezone>America/Chicago</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>/**
	Author: Nick Rupley
	Date Modified: 4/18/2012

	fixHL7NodeOrder: Returns a new E4X node where the order of all siblings and descendants have been fixed as per the Mirth HL7 dot notation convention.

	Arguments
	---------
		Required
		--------
		node: The node to be fixed. 
*/

function fixHL7NodeOrder(node) {
	// Create output node
	var newNode = new XML();
	// In case the node is an XMLList of multiple siblings, loop through each sibling
	for each (sibling in node) {
		// Create new sibling node
		var newSibling = new XML(&apos;&lt;&apos;+sibling.name().toString()+&apos;/&gt;&apos;);
		// Iterate through each child node
		for each (child in sibling.children())
			// If the child has its own children, then recursively fix the node order of the child
			if (child.hasComplexContent())
				newSibling.appendChild(fixHL7NodeOrder(child));
			// If the child doesn&apos;t have its own children, then just add the child to the new sibling node
			else
				newSibling.appendChild(child);
		// After recursively fixing all of the child nodes, now we&apos;ll fix the current node
		newNode += sortHL7Node(newSibling);
	}
	// Return the fixed node
	return newNode;
}

// Helper function for fixHL7NodeOrder
function sortHL7Node(node) {
	// If the node has no children, then there&apos;s nothing to sort
	if (node.hasSimpleContent())
		return node;
	// Create new output node
	var newNode = new XML(&apos;&lt;&apos;+node.name().toString()+&apos;/&gt;&apos;);
	// Iterate through each child in the node
	for each (child in node.children()) {
		// If the child has a QName, then we can sort on it
		if (child.name()) {
			// Get the current &quot;index&quot; of the child. Id est, if the QName is PID.3.1, then the index is 1
			curChildIndex = parseInt(child.name().toString().substring(child.name().toString().lastIndexOf(&apos;.&apos;)+1),10);
			// Boolean placeholder
			var inserted = false;
			// Iterate through each child currently in the NEW node
			for (var i = 0; i &lt;= newNode.children().length()-1; i++) {
				// Get the index of the child of the new node
				loopChildIndex = parseInt(newNode.child(i).name().toString().substring(newNode.child(i).name().toString().lastIndexOf(&apos;.&apos;)+1),10);
				// If the child we want to insert has a lower index then the current child of the new node, then we&apos;re going to insert the child 
				// right before the current newNode child
				if (curChildIndex &lt; loopChildIndex) {
					// Insert the child
					newNode.insertChildBefore(newNode.children()[i],child);
					// Set our flag, indicating that an insertion was made
					inserted = true;
					// No need to continue iteration
					break;
				}
			}
			// If no insertion was made, then the index of the child we want to insert is greater than or equal to all of the
			// indices of the children that have already been inserted in newNode. So, we&apos;ll just append the child to the end.
			if (!inserted)
				newNode.appendChild(child);
		}
	}
	// Return the sorted HL7 node
	return newNode;
}</code>
            </properties>
          </codeTemplate>
          <codeTemplate version="4.0.0">
            <id>dfedacf6-773b-413e-b78d-1bf16a92071d</id>
            <name>formatHL7Date</name>
            <revision>1</revision>
            <lastModified>
              <time>1678476121643</time>
              <timezone>America/Chicago</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>/**
	Take any eight digit HL7 message data string (yyyyMMdd) and formats it human-readable format (MM/dd/yyyy)
	such as 20090612 -&gt; 06/12/2009

	@param {String} arg1 - 8 digit HL7 message data string yyyyMMdd
	@return {String} return date format as MM/dd/yyyy
*/
function formatHL7Date(string) {
	return DateUtil.convertDate(&quot;yyyyMMdd&quot;, &quot;MM/dd/yyyy&quot;, string);
}</code>
            </properties>
          </codeTemplate>
          <codeTemplate version="4.0.0">
            <id>a8f54921-2cb6-4134-8806-3c4e10a757d9</id>
            <name>getCurrentLocalTime</name>
            <revision>1</revision>
            <lastModified>
              <time>1678476122014</time>
              <timezone>America/Chicago</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>CHANNEL_UNDEPLOY</contextType>
                <contextType>CHANNEL_PREPROCESSOR</contextType>
                <contextType>GLOBAL_UNDEPLOY</contextType>
                <contextType>CHANNEL_BATCH</contextType>
                <contextType>GLOBAL_POSTPROCESSOR</contextType>
                <contextType>GLOBAL_PREPROCESSOR</contextType>
                <contextType>GLOBAL_DEPLOY</contextType>
                <contextType>CHANNEL_POSTPROCESSOR</contextType>
                <contextType>CHANNEL_ATTACHMENT</contextType>
                <contextType>CHANNEL_DEPLOY</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>/**
	tmp[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;] = getCurrentLocalTimestamp();

	Modify the description here. Modify the function name and parameters as needed. One function per
	template is recommended; create a new code template for each new function.

	@param {String} arg1 - arg1 description
	@return {String} return description
*/
function getCurrentLocalTimestamp() {
   var formatter = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMddhhmmss&quot;); 
   // your local TZ
   formatter.setTimeZone(Packages.java.util.TimeZone.getTimeZone(&quot;EST&quot;)); 
   return formatter.format(new Packages.java.util.Date()); 
}</code>
            </properties>
          </codeTemplate>
          <codeTemplate version="4.0.0">
            <id>6c5f1bd8-ebbf-4c8e-b465-0be8ccaba0d0</id>
            <name>getCurrentLocalTimeToMs</name>
            <revision>1</revision>
            <lastModified>
              <time>1678476123077</time>
              <timezone>America/Chicago</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>/**

	Gets the current local date/time to the milliseconds
	Converts to the timezone that is passed in Examples (America/New_York, America/Chicago, America/Phoenix )

	@param {String} arg1 - arg1 description
	@return {String} return description
*/
function getCurrentLocalTimestampToMs(timeZone) {
   var formatter = new Packages.java.text.SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss.SSS&quot;); 
   // your local TZ
   formatter.setTimeZone(Packages.java.util.TimeZone.getTimeZone(timeZone)); 
   return formatter.format(new Packages.java.util.Date()); 
}</code>
            </properties>
          </codeTemplate>
          <codeTemplate version="4.0.0">
            <id>78d74c5b-c881-404a-ad96-4e909e1a19f3</id>
            <name>phoneToE164</name>
            <revision>1</revision>
            <lastModified>
              <time>1678476121982</time>
              <timezone>America/Chicago</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>/**
	Convert Insight phone number to E164 format 5554446666 to +15554446666

	@param {Any} phoneIn - 
	@return {String} return description
*/
function phoneToE164(phoneIn) {
	logger.info(&apos;L1 &apos;+phoneIn);
	if(phoneIn != null ){
	//phoneIn = &apos;+1&apos; + phoneIn.toString(); 
	logger.info(&apos;L2 &apos;+phoneIn);
	return &apos;+1&apos; + phoneIn.toString(); 
	} else{
		return null;
	}
}</code>
            </properties>
          </codeTemplate>
        </codeTemplates>
      </codeTemplateLibrary>
      <codeTemplateLibrary version="4.0.0">
        <id>6a32d94d-408c-4e10-9799-e45e150b5c1f</id>
        <name>WebPT-MISC</name>
        <revision>4</revision>
        <lastModified>
          <time>1703964939909</time>
          <timezone>America/Chicago</timezone>
        </lastModified>
        <description>miscellaneous javascript</description>
        <includeNewChannels>true</includeNewChannels>
        <enabledChannelIds>
          <string>c5aa527b-0e36-4790-8302-e1a6a472455e</string>
          <string>4e15d4c9-43b4-4d2c-9185-701707cd2f6a</string>
          <string>f7c77a5d-b086-4aed-aa56-e72984abd5ea</string>
          <string>65d47b29-67e5-4533-917c-337880fb8b17</string>
          <string>b7f455da-a5a4-4c75-be8f-d6f2c3561ac8</string>
          <string>42b2b012-ffc4-41ba-a71e-00fbd1cc1c67</string>
          <string>ead4368c-a612-459c-950e-50e49df05d9b</string>
          <string>81988bfb-2e74-4e25-ac01-1a000e027e97</string>
          <string>4964d3cc-7004-41c7-a704-da97ac92caf3</string>
          <string>954d2af0-df2c-46c6-95bc-02661a8d4424</string>
          <string>fd14f323-1f60-4ec5-b3e1-6ce8248bbcf3</string>
          <string>e248ef99-284c-41f3-adac-d7b43433b16f</string>
          <string>e20d28dc-e360-4b54-a225-5c6cddeba9a3</string>
          <string>6910529c-6cd1-4838-9a4f-d3c84faa2866</string>
          <string>8913e845-1fff-427c-bec0-e0a01d131f89</string>
          <string>19a0dcf7-3736-4b25-9049-80301c6cd04d</string>
          <string>32516e02-db8c-47f3-aba9-adfff1ea28c2</string>
          <string>b19c96b2-afb4-4248-83a8-96f521b20489</string>
          <string>f1688a2f-ece0-4292-b5f9-e56c50b6bc5a</string>
          <string>ed58a744-1f83-44aa-ad23-feef56e2f5e6</string>
          <string>4a98f7b0-d1f3-478d-ad65-550f8287fe24</string>
          <string>7a3b0715-12e0-4803-aa51-c1a947ef9b66</string>
          <string>dff92eca-e23d-4802-8e3c-023f3af3e640</string>
          <string>a3e80233-747a-4ce0-9f8f-59dcbe8e2ca6</string>
          <string>0ace74f9-8ee8-45a5-8093-8d5bb95dae90</string>
          <string>32ea3c4a-9c59-4482-beb2-22d729e5e379</string>
          <string>a827a980-9c7f-410c-893a-141429f7b30a</string>
          <string>fba4345d-b56d-4b31-802c-cdac2248902d</string>
          <string>9ba29622-ed1f-4a34-9cbe-6f3df0eb3026</string>
          <string>d6ea31a1-1aa6-4a53-adde-10a1bcdcd3c5</string>
          <string>4966bc7c-223c-4c44-8f71-4625cfcc0cc0</string>
          <string>72383579-097e-4205-b030-ce272c90b835</string>
          <string>88f9a267-e37f-418d-aaf2-d077b7a0cdca</string>
          <string>a2b31875-5c31-4052-938f-a69550a8cb55</string>
          <string>37b05d6c-c044-4394-a60a-deaee676ce0d</string>
          <string>71368dee-5964-4073-bab7-ae0fd3ae90b0</string>
          <string>5cc5d7df-228a-4d24-b774-681c717e1876</string>
          <string>4c3b5879-a8d9-48be-83cc-5f7c5777a188</string>
          <string>c65d1ffa-65af-4ee8-803a-2f32b201889d</string>
          <string>5c763fad-3eae-4e87-b944-0dbfe25814e0</string>
          <string>3792b059-e098-436c-81fe-23502ef5042b</string>
          <string>8a4eb453-fc7a-484a-8e15-422d9b490edf</string>
          <string>a757905f-315a-43be-a624-38780a3d7574</string>
          <string>1c6037e0-7bf9-41ae-b896-5be7b77e711f</string>
          <string>631f9a02-6b74-4ecd-9582-221b98a0450e</string>
          <string>c2277647-41dc-4e15-bce4-2ae23cec064b</string>
          <string>c1fd4789-03e5-4ec3-91d2-cdded4b13365</string>
          <string>318f77fc-a631-48e0-8a4e-a87831bd81a7</string>
          <string>38e80069-5a80-4483-9a22-02c928973719</string>
          <string>ba9dcc01-6b1c-4fc3-afc4-cf1c5da9a8aa</string>
          <string>77033047-c5e7-4308-b2ed-d361923ed9a2</string>
          <string>2e0d9b6c-294f-4506-8632-dc4622b4f651</string>
          <string>d3f6504f-12cd-4e69-a920-6bb3a2195cc2</string>
          <string>a6fc8ba1-0134-4d1a-a341-cd9a2f295595</string>
          <string>57fa694a-2758-4e52-b725-967a74786d1f</string>
          <string>a45d1db0-9b84-49d3-b26b-243dbf2a4f70</string>
          <string>ab7d9121-bd5f-47c1-964a-53531cd178dd</string>
          <string>bfc00235-7e2e-457a-b27f-e5288e9c28c4</string>
          <string>6be39ce0-8f88-42fb-b3a4-4afd4da39734</string>
          <string>754a8caa-2161-45d8-b261-e32d8b0fb044</string>
          <string>9370b181-aa9c-4db3-b7dc-2cd81cc91fdd</string>
          <string>e678dbf5-f021-43dc-84ae-967500d5c31a</string>
          <string>7741037b-845e-4e6d-b6aa-c9f249b06084</string>
          <string>c65024ed-4660-4423-9636-cb6309cae138</string>
          <string>0972a85f-5ad7-4a93-88e1-5f991b7f7879</string>
          <string>3fdef7e5-20e2-4e6f-aad4-a156ddb2e5e2</string>
          <string>ccd59c71-8d2a-40e9-8647-57e000ec6f43</string>
          <string>a25fa941-8ba3-47eb-81d1-24c9e45fe29d</string>
          <string>8cbc4731-752e-4e2e-a61d-018ed3e0cef0</string>
          <string>1b12c7a8-abee-4c24-85a4-d3b447e9d280</string>
          <string>5cfc8ad8-0fb2-48bf-a318-1aabd86cf60e</string>
          <string>10ef3f18-f1c1-495c-80be-026eb56436c5</string>
          <string>c15d4352-13b2-4698-a771-b3593449d7ba</string>
          <string>64e32643-e41c-4986-9550-c634cb02f9ba</string>
          <string>347deee2-a3c1-4542-bc3e-c619defe0b64</string>
          <string>9e040198-05cf-11e8-ba89-0ed5f89f718b</string>
          <string>dc8e6472-bc7e-4ebe-a8dd-968b791e2975</string>
          <string>66487d57-e34e-4a9a-8296-e62a66d3ab8b</string>
          <string>99b43124-34ef-4ead-a348-ef0ac0a52539</string>
          <string>4c2e73a8-aabe-4c04-9ba5-50ab49d3cb95</string>
          <string>0df5acd6-0251-4546-9d35-ed7f1515e00b</string>
          <string>93f57fef-8fc0-4b05-91de-b1cdb48034a2</string>
          <string>db4e2d12-f41b-4da9-87b8-a1feb4c29054</string>
          <string>a6ec1677-5012-430f-bcbc-f41fe39ecf1f</string>
          <string>5c5b6b2c-f3fd-456d-a90d-d684b5fb061e</string>
          <string>42e730bb-0721-435e-8dcf-d25d6d5d1dc6</string>
          <string>c90c935e-e3de-4ffe-839f-5560b39f07fb</string>
          <string>18803b99-6545-4d09-9277-a559ee2e94fd</string>
          <string>5231fded-a3aa-44e8-bd77-3ad84d39e1d2</string>
          <string>89faf430-5bd7-4440-9ed0-4b02d3462403</string>
        </enabledChannelIds>
        <disabledChannelIds/>
        <codeTemplates>
          <codeTemplate version="4.0.0">
            <id>84b4f1c7-f82d-4140-9fbd-98a95f68ff32</id>
            <name>getChannelState</name>
            <revision>1</revision>
            <lastModified>
              <time>1678476122648</time>
              <timezone>America/Chicago</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>CHANNEL_UNDEPLOY</contextType>
                <contextType>CHANNEL_PREPROCESSOR</contextType>
                <contextType>GLOBAL_UNDEPLOY</contextType>
                <contextType>CHANNEL_BATCH</contextType>
                <contextType>GLOBAL_POSTPROCESSOR</contextType>
                <contextType>GLOBAL_PREPROCESSOR</contextType>
                <contextType>GLOBAL_DEPLOY</contextType>
                <contextType>CHANNEL_POSTPROCESSOR</contextType>
                <contextType>CHANNEL_ATTACHMENT</contextType>
                <contextType>CHANNEL_DEPLOY</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>/**
	Modify the description here. Modify the function name and parameters as needed. One function per
	template is recommended; create a new code template for each new function.

	@param {String} arg1 - arg1 description
	@return {String} return description
*/
function GetChannelState(channel_id) {

    var channel_status = &quot;NA&quot;;

    var channel_count = parseInt(Packages.com.webreach.mirth.server.controllers.ChannelStatusController.getInstance().getChannelStatusList().size());

    for(var i=0;i&lt;channel_count;i++) {
        if (channel_id == Packages.com.webreach.mirth.server.controllers.ChannelStatusController.getInstance().getChannelStatusList().get(i).getChannelId()) {
            channel_status = Packages.com.webreach.mirth.server.controllers.ChannelStatusController.getInstance().getChannelStatusList().get(i).getState();
        }
    }

    return channel_status;

}</code>
            </properties>
          </codeTemplate>
          <codeTemplate version="4.0.0">
            <id>715435a9-cb15-4e8f-bc5b-4249eaea6e17</id>
            <name>momentjs</name>
            <revision>1</revision>
            <lastModified>
              <time>1678476122487</time>
              <timezone>America/Chicago</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>COMPILED_CODE</type>
              <code>/**
	Testing MIRTH-3794 using external JavaScript library &quot;moment.js&quot;
*/
//! moment.js
//! version : 2.10.6
//! authors : Tim Wood, Iskren Chernev, Moment.js contributors
//! license : MIT
//! momentjs.com
!function(a,b){&quot;object&quot;==typeof exports&amp;&amp;&quot;undefined&quot;!=typeof module?module.exports=b():&quot;function&quot;==typeof define&amp;&amp;define.amd?define(b):a.moment=b()}(this,function(){&quot;use strict&quot;;function a(){return Hc.apply(null,arguments)}function b(a){Hc=a}function c(a){return&quot;[object Array]&quot;===Object.prototype.toString.call(a)}function d(a){return a instanceof Date||&quot;[object Date]&quot;===Object.prototype.toString.call(a)}function e(a,b){var c,d=[];for(c=0;c&lt;a.length;++c)d.push(b(a[c],c));return d}function f(a,b){return Object.prototype.hasOwnProperty.call(a,b)}function g(a,b){for(var c in b)f(b,c)&amp;&amp;(a[c]=b[c]);return f(b,&quot;toString&quot;)&amp;&amp;(a.toString=b.toString),f(b,&quot;valueOf&quot;)&amp;&amp;(a.valueOf=b.valueOf),a}function h(a,b,c,d){return Ca(a,b,c,d,!0).utc()}function i(){return{empty:!1,unusedTokens:[],unusedInput:[],overflow:-2,charsLeftOver:0,nullInput:!1,invalidMonth:null,invalidFormat:!1,userInvalidated:!1,iso:!1}}function j(a){return null==a._pf&amp;&amp;(a._pf=i()),a._pf}function k(a){if(null==a._isValid){var b=j(a);a._isValid=!(isNaN(a._d.getTime())||!(b.overflow&lt;0)||b.empty||b.invalidMonth||b.invalidWeekday||b.nullInput||b.invalidFormat||b.userInvalidated),a._strict&amp;&amp;(a._isValid=a._isValid&amp;&amp;0===b.charsLeftOver&amp;&amp;0===b.unusedTokens.length&amp;&amp;void 0===b.bigHour)}return a._isValid}function l(a){var b=h(NaN);return null!=a?g(j(b),a):j(b).userInvalidated=!0,b}function m(a,b){var c,d,e;if(&quot;undefined&quot;!=typeof b._isAMomentObject&amp;&amp;(a._isAMomentObject=b._isAMomentObject),&quot;undefined&quot;!=typeof b._i&amp;&amp;(a._i=b._i),&quot;undefined&quot;!=typeof b._f&amp;&amp;(a._f=b._f),&quot;undefined&quot;!=typeof b._l&amp;&amp;(a._l=b._l),&quot;undefined&quot;!=typeof b._strict&amp;&amp;(a._strict=b._strict),&quot;undefined&quot;!=typeof b._tzm&amp;&amp;(a._tzm=b._tzm),&quot;undefined&quot;!=typeof b._isUTC&amp;&amp;(a._isUTC=b._isUTC),&quot;undefined&quot;!=typeof b._offset&amp;&amp;(a._offset=b._offset),&quot;undefined&quot;!=typeof b._pf&amp;&amp;(a._pf=j(b)),&quot;undefined&quot;!=typeof b._locale&amp;&amp;(a._locale=b._locale),Jc.length&gt;0)for(c in Jc)d=Jc[c],e=b[d],&quot;undefined&quot;!=typeof e&amp;&amp;(a[d]=e);return a}function n(b){m(this,b),this._d=new Date(null!=b._d?b._d.getTime():NaN),Kc===!1&amp;&amp;(Kc=!0,a.updateOffset(this),Kc=!1)}function o(a){return a instanceof n||null!=a&amp;&amp;null!=a._isAMomentObject}function p(a){return 0&gt;a?Math.ceil(a):Math.floor(a)}function q(a){var b=+a,c=0;return 0!==b&amp;&amp;isFinite(b)&amp;&amp;(c=p(b)),c}function r(a,b,c){var d,e=Math.min(a.length,b.length),f=Math.abs(a.length-b.length),g=0;for(d=0;e&gt;d;d++)(c&amp;&amp;a[d]!==b[d]||!c&amp;&amp;q(a[d])!==q(b[d]))&amp;&amp;g++;return g+f}function s(){}function t(a){return a?a.toLowerCase().replace(&quot;_&quot;,&quot;-&quot;):a}function u(a){for(var b,c,d,e,f=0;f&lt;a.length;){for(e=t(a[f]).split(&quot;-&quot;),b=e.length,c=t(a[f+1]),c=c?c.split(&quot;-&quot;):null;b&gt;0;){if(d=v(e.slice(0,b).join(&quot;-&quot;)))return d;if(c&amp;&amp;c.length&gt;=b&amp;&amp;r(e,c,!0)&gt;=b-1)break;b--}f++}return null}function v(a){var b=null;if(!Lc[a]&amp;&amp;&quot;undefined&quot;!=typeof module&amp;&amp;module&amp;&amp;module.exports)try{b=Ic._abbr,require(&quot;./locale/&quot;+a),w(b)}catch(c){}return Lc[a]}function w(a,b){var c;return a&amp;&amp;(c=&quot;undefined&quot;==typeof b?y(a):x(a,b),c&amp;&amp;(Ic=c)),Ic._abbr}function x(a,b){return null!==b?(b.abbr=a,Lc[a]=Lc[a]||new s,Lc[a].set(b),w(a),Lc[a]):(delete Lc[a],null)}function y(a){var b;if(a&amp;&amp;a._locale&amp;&amp;a._locale._abbr&amp;&amp;(a=a._locale._abbr),!a)return Ic;if(!c(a)){if(b=v(a))return b;a=[a]}return u(a)}function z(a,b){var c=a.toLowerCase();Mc[c]=Mc[c+&quot;s&quot;]=Mc[b]=a}function A(a){return&quot;string&quot;==typeof a?Mc[a]||Mc[a.toLowerCase()]:void 0}function B(a){var b,c,d={};for(c in a)f(a,c)&amp;&amp;(b=A(c),b&amp;&amp;(d[b]=a[c]));return d}function C(b,c){return function(d){return null!=d?(E(this,b,d),a.updateOffset(this,c),this):D(this,b)}}function D(a,b){return a._d[&quot;get&quot;+(a._isUTC?&quot;UTC&quot;:&quot;&quot;)+b]()}function E(a,b,c){return a._d[&quot;set&quot;+(a._isUTC?&quot;UTC&quot;:&quot;&quot;)+b](c)}function F(a,b){var c;if(&quot;object&quot;==typeof a)for(c in a)this.set(c,a[c]);else if(a=A(a),&quot;function&quot;==typeof this[a])return this[a](b);return this}function G(a,b,c){var d=&quot;&quot;+Math.abs(a),e=b-d.length,f=a&gt;=0;return(f?c?&quot;+&quot;:&quot;&quot;:&quot;-&quot;)+Math.pow(10,Math.max(0,e)).toString().substr(1)+d}function H(a,b,c,d){var e=d;&quot;string&quot;==typeof d&amp;&amp;(e=function(){return this[d]()}),a&amp;&amp;(Qc[a]=e),b&amp;&amp;(Qc[b[0]]=function(){return G(e.apply(this,arguments),b[1],b[2])}),c&amp;&amp;(Qc[c]=function(){return this.localeData().ordinal(e.apply(this,arguments),a)})}function I(a){return a.match(/\[[\s\S]/)?a.replace(/^\[|\]$/g,&quot;&quot;):a.replace(/\\/g,&quot;&quot;)}function J(a){var b,c,d=a.match(Nc);for(b=0,c=d.length;c&gt;b;b++)Qc[d[b]]?d[b]=Qc[d[b]]:d[b]=I(d[b]);return function(e){var f=&quot;&quot;;for(b=0;c&gt;b;b++)f+=d[b]instanceof Function?d[b].call(e,a):d[b];return f}}function K(a,b){return a.isValid()?(b=L(b,a.localeData()),Pc[b]=Pc[b]||J(b),Pc[b](a)):a.localeData().invalidDate()}function L(a,b){function c(a){return b.longDateFormat(a)||a}var d=5;for(Oc.lastIndex=0;d&gt;=0&amp;&amp;Oc.test(a);)a=a.replace(Oc,c),Oc.lastIndex=0,d-=1;return a}function M(a){return&quot;function&quot;==typeof a&amp;&amp;&quot;[object Function]&quot;===Object.prototype.toString.call(a)}function N(a,b,c){dd[a]=M(b)?b:function(a){return a&amp;&amp;c?c:b}}function O(a,b){return f(dd,a)?dd[a](b._strict,b._locale):new RegExp(P(a))}function P(a){return a.replace(&quot;\\&quot;,&quot;&quot;).replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,function(a,b,c,d,e){return b||c||d||e}).replace(/[-\/\\^$*+?.()|[\]{}]/g,&quot;\\$&amp;&quot;)}function Q(a,b){var c,d=b;for(&quot;string&quot;==typeof a&amp;&amp;(a=[a]),&quot;number&quot;==typeof b&amp;&amp;(d=function(a,c){c[b]=q(a)}),c=0;c&lt;a.length;c++)ed[a[c]]=d}function R(a,b){Q(a,function(a,c,d,e){d._w=d._w||{},b(a,d._w,d,e)})}function S(a,b,c){null!=b&amp;&amp;f(ed,a)&amp;&amp;ed[a](b,c._a,c,a)}function T(a,b){return new Date(Date.UTC(a,b+1,0)).getUTCDate()}function U(a){return this._months[a.month()]}function V(a){return this._monthsShort[a.month()]}function W(a,b,c){var d,e,f;for(this._monthsParse||(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[]),d=0;12&gt;d;d++){if(e=h([2e3,d]),c&amp;&amp;!this._longMonthsParse[d]&amp;&amp;(this._longMonthsParse[d]=new RegExp(&quot;^&quot;+this.months(e,&quot;&quot;).replace(&quot;.&quot;,&quot;&quot;)+&quot;$&quot;,&quot;i&quot;),this._shortMonthsParse[d]=new RegExp(&quot;^&quot;+this.monthsShort(e,&quot;&quot;).replace(&quot;.&quot;,&quot;&quot;)+&quot;$&quot;,&quot;i&quot;)),c||this._monthsParse[d]||(f=&quot;^&quot;+this.months(e,&quot;&quot;)+&quot;|^&quot;+this.monthsShort(e,&quot;&quot;),this._monthsParse[d]=new RegExp(f.replace(&quot;.&quot;,&quot;&quot;),&quot;i&quot;)),c&amp;&amp;&quot;MMMM&quot;===b&amp;&amp;this._longMonthsParse[d].test(a))return d;if(c&amp;&amp;&quot;MMM&quot;===b&amp;&amp;this._shortMonthsParse[d].test(a))return d;if(!c&amp;&amp;this._monthsParse[d].test(a))return d}}function X(a,b){var c;return&quot;string&quot;==typeof b&amp;&amp;(b=a.localeData().monthsParse(b),&quot;number&quot;!=typeof b)?a:(c=Math.min(a.date(),T(a.year(),b)),a._d[&quot;set&quot;+(a._isUTC?&quot;UTC&quot;:&quot;&quot;)+&quot;Month&quot;](b,c),a)}function Y(b){return null!=b?(X(this,b),a.updateOffset(this,!0),this):D(this,&quot;Month&quot;)}function Z(){return T(this.year(),this.month())}function $(a){var b,c=a._a;return c&amp;&amp;-2===j(a).overflow&amp;&amp;(b=c[gd]&lt;0||c[gd]&gt;11?gd:c[hd]&lt;1||c[hd]&gt;T(c[fd],c[gd])?hd:c[id]&lt;0||c[id]&gt;24||24===c[id]&amp;&amp;(0!==c[jd]||0!==c[kd]||0!==c[ld])?id:c[jd]&lt;0||c[jd]&gt;59?jd:c[kd]&lt;0||c[kd]&gt;59?kd:c[ld]&lt;0||c[ld]&gt;999?ld:-1,j(a)._overflowDayOfYear&amp;&amp;(fd&gt;b||b&gt;hd)&amp;&amp;(b=hd),j(a).overflow=b),a}function _(b){a.suppressDeprecationWarnings===!1&amp;&amp;&quot;undefined&quot;!=typeof console&amp;&amp;console.warn&amp;&amp;console.warn(&quot;Deprecation warning: &quot;+b)}function aa(a,b){var c=!0;return g(function(){return c&amp;&amp;(_(a+&quot;\n&quot;+(new Error).stack),c=!1),b.apply(this,arguments)},b)}function ba(a,b){od[a]||(_(b),od[a]=!0)}function ca(a){var b,c,d=a._i,e=pd.exec(d);if(e){for(j(a).iso=!0,b=0,c=qd.length;c&gt;b;b++)if(qd[b][1].exec(d)){a._f=qd[b][0];break}for(b=0,c=rd.length;c&gt;b;b++)if(rd[b][1].exec(d)){a._f+=(e[6]||&quot; &quot;)+rd[b][0];break}d.match(ad)&amp;&amp;(a._f+=&quot;Z&quot;),va(a)}else a._isValid=!1}function da(b){var c=sd.exec(b._i);return null!==c?void(b._d=new Date(+c[1])):(ca(b),void(b._isValid===!1&amp;&amp;(delete b._isValid,a.createFromInputFallback(b))))}function ea(a,b,c,d,e,f,g){var h=new Date(a,b,c,d,e,f,g);return 1970&gt;a&amp;&amp;h.setFullYear(a),h}function fa(a){var b=new Date(Date.UTC.apply(null,arguments));return 1970&gt;a&amp;&amp;b.setUTCFullYear(a),b}function ga(a){return ha(a)?366:365}function ha(a){return a%4===0&amp;&amp;a%100!==0||a%400===0}function ia(){return ha(this.year())}function ja(a,b,c){var d,e=c-b,f=c-a.day();return f&gt;e&amp;&amp;(f-=7),e-7&gt;f&amp;&amp;(f+=7),d=Da(a).add(f,&quot;d&quot;),{week:Math.ceil(d.dayOfYear()/7),year:d.year()}}function ka(a){return ja(a,this._week.dow,this._week.doy).week}function la(){return this._week.dow}function ma(){return this._week.doy}function na(a){var b=this.localeData().week(this);return null==a?b:this.add(7*(a-b),&quot;d&quot;)}function oa(a){var b=ja(this,1,4).week;return null==a?b:this.add(7*(a-b),&quot;d&quot;)}function pa(a,b,c,d,e){var f,g=6+e-d,h=fa(a,0,1+g),i=h.getUTCDay();return e&gt;i&amp;&amp;(i+=7),c=null!=c?1*c:e,f=1+g+7*(b-1)-i+c,{year:f&gt;0?a:a-1,dayOfYear:f&gt;0?f:ga(a-1)+f}}function qa(a){var b=Math.round((this.clone().startOf(&quot;day&quot;)-this.clone().startOf(&quot;year&quot;))/864e5)+1;return null==a?b:this.add(a-b,&quot;d&quot;)}function ra(a,b,c){return null!=a?a:null!=b?b:c}function sa(a){var b=new Date;return a._useUTC?[b.getUTCFullYear(),b.getUTCMonth(),b.getUTCDate()]:[b.getFullYear(),b.getMonth(),b.getDate()]}function ta(a){var b,c,d,e,f=[];if(!a._d){for(d=sa(a),a._w&amp;&amp;null==a._a[hd]&amp;&amp;null==a._a[gd]&amp;&amp;ua(a),a._dayOfYear&amp;&amp;(e=ra(a._a[fd],d[fd]),a._dayOfYear&gt;ga(e)&amp;&amp;(j(a)._overflowDayOfYear=!0),c=fa(e,0,a._dayOfYear),a._a[gd]=c.getUTCMonth(),a._a[hd]=c.getUTCDate()),b=0;3&gt;b&amp;&amp;null==a._a[b];++b)a._a[b]=f[b]=d[b];for(;7&gt;b;b++)a._a[b]=f[b]=null==a._a[b]?2===b?1:0:a._a[b];24===a._a[id]&amp;&amp;0===a._a[jd]&amp;&amp;0===a._a[kd]&amp;&amp;0===a._a[ld]&amp;&amp;(a._nextDay=!0,a._a[id]=0),a._d=(a._useUTC?fa:ea).apply(null,f),null!=a._tzm&amp;&amp;a._d.setUTCMinutes(a._d.getUTCMinutes()-a._tzm),a._nextDay&amp;&amp;(a._a[id]=24)}}function ua(a){var b,c,d,e,f,g,h;b=a._w,null!=b.GG||null!=b.W||null!=b.E?(f=1,g=4,c=ra(b.GG,a._a[fd],ja(Da(),1,4).year),d=ra(b.W,1),e=ra(b.E,1)):(f=a._locale._week.dow,g=a._locale._week.doy,c=ra(b.gg,a._a[fd],ja(Da(),f,g).year),d=ra(b.w,1),null!=b.d?(e=b.d,f&gt;e&amp;&amp;++d):e=null!=b.e?b.e+f:f),h=pa(c,d,e,g,f),a._a[fd]=h.year,a._dayOfYear=h.dayOfYear}function va(b){if(b._f===a.ISO_8601)return void ca(b);b._a=[],j(b).empty=!0;var c,d,e,f,g,h=&quot;&quot;+b._i,i=h.length,k=0;for(e=L(b._f,b._locale).match(Nc)||[],c=0;c&lt;e.length;c++)f=e[c],d=(h.match(O(f,b))||[])[0],d&amp;&amp;(g=h.substr(0,h.indexOf(d)),g.length&gt;0&amp;&amp;j(b).unusedInput.push(g),h=h.slice(h.indexOf(d)+d.length),k+=d.length),Qc[f]?(d?j(b).empty=!1:j(b).unusedTokens.push(f),S(f,d,b)):b._strict&amp;&amp;!d&amp;&amp;j(b).unusedTokens.push(f);j(b).charsLeftOver=i-k,h.length&gt;0&amp;&amp;j(b).unusedInput.push(h),j(b).bigHour===!0&amp;&amp;b._a[id]&lt;=12&amp;&amp;b._a[id]&gt;0&amp;&amp;(j(b).bigHour=void 0),b._a[id]=wa(b._locale,b._a[id],b._meridiem),ta(b),$(b)}function wa(a,b,c){var d;return null==c?b:null!=a.meridiemHour?a.meridiemHour(b,c):null!=a.isPM?(d=a.isPM(c),d&amp;&amp;12&gt;b&amp;&amp;(b+=12),d||12!==b||(b=0),b):b}function xa(a){var b,c,d,e,f;if(0===a._f.length)return j(a).invalidFormat=!0,void(a._d=new Date(NaN));for(e=0;e&lt;a._f.length;e++)f=0,b=m({},a),null!=a._useUTC&amp;&amp;(b._useUTC=a._useUTC),b._f=a._f[e],va(b),k(b)&amp;&amp;(f+=j(b).charsLeftOver,f+=10*j(b).unusedTokens.length,j(b).score=f,(null==d||d&gt;f)&amp;&amp;(d=f,c=b));g(a,c||b)}function ya(a){if(!a._d){var b=B(a._i);a._a=[b.year,b.month,b.day||b.date,b.hour,b.minute,b.second,b.millisecond],ta(a)}}function za(a){var b=new n($(Aa(a)));return b._nextDay&amp;&amp;(b.add(1,&quot;d&quot;),b._nextDay=void 0),b}function Aa(a){var b=a._i,e=a._f;return a._locale=a._locale||y(a._l),null===b||void 0===e&amp;&amp;&quot;&quot;===b?l({nullInput:!0}):(&quot;string&quot;==typeof b&amp;&amp;(a._i=b=a._locale.preparse(b)),o(b)?new n($(b)):(c(e)?xa(a):e?va(a):d(b)?a._d=b:Ba(a),a))}function Ba(b){var f=b._i;void 0===f?b._d=new Date:d(f)?b._d=new Date(+f):&quot;string&quot;==typeof f?da(b):c(f)?(b._a=e(f.slice(0),function(a){return parseInt(a,10)}),ta(b)):&quot;object&quot;==typeof f?ya(b):&quot;number&quot;==typeof f?b._d=new Date(f):a.createFromInputFallback(b)}function Ca(a,b,c,d,e){var f={};return&quot;boolean&quot;==typeof c&amp;&amp;(d=c,c=void 0),f._isAMomentObject=!0,f._useUTC=f._isUTC=e,f._l=c,f._i=a,f._f=b,f._strict=d,za(f)}function Da(a,b,c,d){return Ca(a,b,c,d,!1)}function Ea(a,b){var d,e;if(1===b.length&amp;&amp;c(b[0])&amp;&amp;(b=b[0]),!b.length)return Da();for(d=b[0],e=1;e&lt;b.length;++e)(!b[e].isValid()||b[e][a](d))&amp;&amp;(d=b[e]);return d}function Fa(){var a=[].slice.call(arguments,0);return Ea(&quot;isBefore&quot;,a)}function Ga(){var a=[].slice.call(arguments,0);return Ea(&quot;isAfter&quot;,a)}function Ha(a){var b=B(a),c=b.year||0,d=b.quarter||0,e=b.month||0,f=b.week||0,g=b.day||0,h=b.hour||0,i=b.minute||0,j=b.second||0,k=b.millisecond||0;this._milliseconds=+k+1e3*j+6e4*i+36e5*h,this._days=+g+7*f,this._months=+e+3*d+12*c,this._data={},this._locale=y(),this._bubble()}function Ia(a){return a instanceof Ha}function Ja(a,b){H(a,0,0,function(){var a=this.utcOffset(),c=&quot;+&quot;;return 0&gt;a&amp;&amp;(a=-a,c=&quot;-&quot;),c+G(~~(a/60),2)+b+G(~~a%60,2)})}function Ka(a){var b=(a||&quot;&quot;).match(ad)||[],c=b[b.length-1]||[],d=(c+&quot;&quot;).match(xd)||[&quot;-&quot;,0,0],e=+(60*d[1])+q(d[2]);return&quot;+&quot;===d[0]?e:-e}function La(b,c){var e,f;return c._isUTC?(e=c.clone(),f=(o(b)||d(b)?+b:+Da(b))-+e,e._d.setTime(+e._d+f),a.updateOffset(e,!1),e):Da(b).local()}function Ma(a){return 15*-Math.round(a._d.getTimezoneOffset()/15)}function Na(b,c){var d,e=this._offset||0;return null!=b?(&quot;string&quot;==typeof b&amp;&amp;(b=Ka(b)),Math.abs(b)&lt;16&amp;&amp;(b=60*b),!this._isUTC&amp;&amp;c&amp;&amp;(d=Ma(this)),this._offset=b,this._isUTC=!0,null!=d&amp;&amp;this.add(d,&quot;m&quot;),e!==b&amp;&amp;(!c||this._changeInProgress?bb(this,Ya(b-e,&quot;m&quot;),1,!1):this._changeInProgress||(this._changeInProgress=!0,a.updateOffset(this,!0),this._changeInProgress=null)),this):this._isUTC?e:Ma(this)}function Oa(a,b){return null!=a?(&quot;string&quot;!=typeof a&amp;&amp;(a=-a),this.utcOffset(a,b),this):-this.utcOffset()}function Pa(a){return this.utcOffset(0,a)}function Qa(a){return this._isUTC&amp;&amp;(this.utcOffset(0,a),this._isUTC=!1,a&amp;&amp;this.subtract(Ma(this),&quot;m&quot;)),this}function Ra(){return this._tzm?this.utcOffset(this._tzm):&quot;string&quot;==typeof this._i&amp;&amp;this.utcOffset(Ka(this._i)),this}function Sa(a){return a=a?Da(a).utcOffset():0,(this.utcOffset()-a)%60===0}function Ta(){return this.utcOffset()&gt;this.clone().month(0).utcOffset()||this.utcOffset()&gt;this.clone().month(5).utcOffset()}function Ua(){if(&quot;undefined&quot;!=typeof this._isDSTShifted)return this._isDSTShifted;var a={};if(m(a,this),a=Aa(a),a._a){var b=a._isUTC?h(a._a):Da(a._a);this._isDSTShifted=this.isValid()&amp;&amp;r(a._a,b.toArray())&gt;0}else this._isDSTShifted=!1;return this._isDSTShifted}function Va(){return!this._isUTC}function Wa(){return this._isUTC}function Xa(){return this._isUTC&amp;&amp;0===this._offset}function Ya(a,b){var c,d,e,g=a,h=null;return Ia(a)?g={ms:a._milliseconds,d:a._days,M:a._months}:&quot;number&quot;==typeof a?(g={},b?g[b]=a:g.milliseconds=a):(h=yd.exec(a))?(c=&quot;-&quot;===h[1]?-1:1,g={y:0,d:q(h[hd])*c,h:q(h[id])*c,m:q(h[jd])*c,s:q(h[kd])*c,ms:q(h[ld])*c}):(h=zd.exec(a))?(c=&quot;-&quot;===h[1]?-1:1,g={y:Za(h[2],c),M:Za(h[3],c),d:Za(h[4],c),h:Za(h[5],c),m:Za(h[6],c),s:Za(h[7],c),w:Za(h[8],c)}):null==g?g={}:&quot;object&quot;==typeof g&amp;&amp;(&quot;from&quot;in g||&quot;to&quot;in g)&amp;&amp;(e=_a(Da(g.from),Da(g.to)),g={},g.ms=e.milliseconds,g.M=e.months),d=new Ha(g),Ia(a)&amp;&amp;f(a,&quot;_locale&quot;)&amp;&amp;(d._locale=a._locale),d}function Za(a,b){var c=a&amp;&amp;parseFloat(a.replace(&quot;,&quot;,&quot;.&quot;));return(isNaN(c)?0:c)*b}function $a(a,b){var c={milliseconds:0,months:0};return c.months=b.month()-a.month()+12*(b.year()-a.year()),a.clone().add(c.months,&quot;M&quot;).isAfter(b)&amp;&amp;--c.months,c.milliseconds=+b-+a.clone().add(c.months,&quot;M&quot;),c}function _a(a,b){var c;return b=La(b,a),a.isBefore(b)?c=$a(a,b):(c=$a(b,a),c.milliseconds=-c.milliseconds,c.months=-c.months),c}function ab(a,b){return function(c,d){var e,f;return null===d||isNaN(+d)||(ba(b,&quot;moment().&quot;+b+&quot;(period, number) is deprecated. Please use moment().&quot;+b+&quot;(number, period).&quot;),f=c,c=d,d=f),c=&quot;string&quot;==typeof c?+c:c,e=Ya(c,d),bb(this,e,a),this}}function bb(b,c,d,e){var f=c._milliseconds,g=c._days,h=c._months;e=null==e?!0:e,f&amp;&amp;b._d.setTime(+b._d+f*d),g&amp;&amp;E(b,&quot;Date&quot;,D(b,&quot;Date&quot;)+g*d),h&amp;&amp;X(b,D(b,&quot;Month&quot;)+h*d),e&amp;&amp;a.updateOffset(b,g||h)}function cb(a,b){var c=a||Da(),d=La(c,this).startOf(&quot;day&quot;),e=this.diff(d,&quot;days&quot;,!0),f=-6&gt;e?&quot;sameElse&quot;:-1&gt;e?&quot;lastWeek&quot;:0&gt;e?&quot;lastDay&quot;:1&gt;e?&quot;sameDay&quot;:2&gt;e?&quot;nextDay&quot;:7&gt;e?&quot;nextWeek&quot;:&quot;sameElse&quot;;return this.format(b&amp;&amp;b[f]||this.localeData().calendar(f,this,Da(c)))}function db(){return new n(this)}function eb(a,b){var c;return b=A(&quot;undefined&quot;!=typeof b?b:&quot;millisecond&quot;),&quot;millisecond&quot;===b?(a=o(a)?a:Da(a),+this&gt;+a):(c=o(a)?+a:+Da(a),c&lt;+this.clone().startOf(b))}function fb(a,b){var c;return b=A(&quot;undefined&quot;!=typeof b?b:&quot;millisecond&quot;),&quot;millisecond&quot;===b?(a=o(a)?a:Da(a),+a&gt;+this):(c=o(a)?+a:+Da(a),+this.clone().endOf(b)&lt;c)}function gb(a,b,c){return this.isAfter(a,c)&amp;&amp;this.isBefore(b,c)}function hb(a,b){var c;return b=A(b||&quot;millisecond&quot;),&quot;millisecond&quot;===b?(a=o(a)?a:Da(a),+this===+a):(c=+Da(a),+this.clone().startOf(b)&lt;=c&amp;&amp;c&lt;=+this.clone().endOf(b))}function ib(a,b,c){var d,e,f=La(a,this),g=6e4*(f.utcOffset()-this.utcOffset());return b=A(b),&quot;year&quot;===b||&quot;month&quot;===b||&quot;quarter&quot;===b?(e=jb(this,f),&quot;quarter&quot;===b?e/=3:&quot;year&quot;===b&amp;&amp;(e/=12)):(d=this-f,e=&quot;second&quot;===b?d/1e3:&quot;minute&quot;===b?d/6e4:&quot;hour&quot;===b?d/36e5:&quot;day&quot;===b?(d-g)/864e5:&quot;week&quot;===b?(d-g)/6048e5:d),c?e:p(e)}function jb(a,b){var c,d,e=12*(b.year()-a.year())+(b.month()-a.month()),f=a.clone().add(e,&quot;months&quot;);return 0&gt;b-f?(c=a.clone().add(e-1,&quot;months&quot;),d=(b-f)/(f-c)):(c=a.clone().add(e+1,&quot;months&quot;),d=(b-f)/(c-f)),-(e+d)}function kb(){return this.clone().locale(&quot;en&quot;).format(&quot;ddd MMM DD YYYY HH:mm:ss [GMT]ZZ&quot;)}function lb(){var a=this.clone().utc();return 0&lt;a.year()&amp;&amp;a.year()&lt;=9999?&quot;function&quot;==typeof Date.prototype.toISOString?this.toDate().toISOString():K(a,&quot;YYYY-MM-DD[T]HH:mm:ss.SSS[Z]&quot;):K(a,&quot;YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]&quot;)}function mb(b){var c=K(this,b||a.defaultFormat);return this.localeData().postformat(c)}function nb(a,b){return this.isValid()?Ya({to:this,from:a}).locale(this.locale()).humanize(!b):this.localeData().invalidDate()}function ob(a){return this.from(Da(),a)}function pb(a,b){return this.isValid()?Ya({from:this,to:a}).locale(this.locale()).humanize(!b):this.localeData().invalidDate()}function qb(a){return this.to(Da(),a)}function rb(a){var b;return void 0===a?this._locale._abbr:(b=y(a),null!=b&amp;&amp;(this._locale=b),this)}function sb(){return this._locale}function tb(a){switch(a=A(a)){case&quot;year&quot;:this.month(0);case&quot;quarter&quot;:case&quot;month&quot;:this.date(1);case&quot;week&quot;:case&quot;isoWeek&quot;:case&quot;day&quot;:this.hours(0);case&quot;hour&quot;:this.minutes(0);case&quot;minute&quot;:this.seconds(0);case&quot;second&quot;:this.milliseconds(0)}return&quot;week&quot;===a&amp;&amp;this.weekday(0),&quot;isoWeek&quot;===a&amp;&amp;this.isoWeekday(1),&quot;quarter&quot;===a&amp;&amp;this.month(3*Math.floor(this.month()/3)),this}function ub(a){return a=A(a),void 0===a||&quot;millisecond&quot;===a?this:this.startOf(a).add(1,&quot;isoWeek&quot;===a?&quot;week&quot;:a).subtract(1,&quot;ms&quot;)}function vb(){return+this._d-6e4*(this._offset||0)}function wb(){return Math.floor(+this/1e3)}function xb(){return this._offset?new Date(+this):this._d}function yb(){var a=this;return[a.year(),a.month(),a.date(),a.hour(),a.minute(),a.second(),a.millisecond()]}function zb(){var a=this;return{years:a.year(),months:a.month(),date:a.date(),hours:a.hours(),minutes:a.minutes(),seconds:a.seconds(),milliseconds:a.milliseconds()}}function Ab(){return k(this)}function Bb(){return g({},j(this))}function Cb(){return j(this).overflow}function Db(a,b){H(0,[a,a.length],0,b)}function Eb(a,b,c){return ja(Da([a,11,31+b-c]),b,c).week}function Fb(a){var b=ja(this,this.localeData()._week.dow,this.localeData()._week.doy).year;return null==a?b:this.add(a-b,&quot;y&quot;)}function Gb(a){var b=ja(this,1,4).year;return null==a?b:this.add(a-b,&quot;y&quot;)}function Hb(){return Eb(this.year(),1,4)}function Ib(){var a=this.localeData()._week;return Eb(this.year(),a.dow,a.doy)}function Jb(a){return null==a?Math.ceil((this.month()+1)/3):this.month(3*(a-1)+this.month()%3)}function Kb(a,b){return&quot;string&quot;!=typeof a?a:isNaN(a)?(a=b.weekdaysParse(a),&quot;number&quot;==typeof a?a:null):parseInt(a,10)}function Lb(a){return this._weekdays[a.day()]}function Mb(a){return this._weekdaysShort[a.day()]}function Nb(a){return this._weekdaysMin[a.day()]}function Ob(a){var b,c,d;for(this._weekdaysParse=this._weekdaysParse||[],b=0;7&gt;b;b++)if(this._weekdaysParse[b]||(c=Da([2e3,1]).day(b),d=&quot;^&quot;+this.weekdays(c,&quot;&quot;)+&quot;|^&quot;+this.weekdaysShort(c,&quot;&quot;)+&quot;|^&quot;+this.weekdaysMin(c,&quot;&quot;),this._weekdaysParse[b]=new RegExp(d.replace(&quot;.&quot;,&quot;&quot;),&quot;i&quot;)),this._weekdaysParse[b].test(a))return b}function Pb(a){var b=this._isUTC?this._d.getUTCDay():this._d.getDay();return null!=a?(a=Kb(a,this.localeData()),this.add(a-b,&quot;d&quot;)):b}function Qb(a){var b=(this.day()+7-this.localeData()._week.dow)%7;return null==a?b:this.add(a-b,&quot;d&quot;)}function Rb(a){return null==a?this.day()||7:this.day(this.day()%7?a:a-7)}function Sb(a,b){H(a,0,0,function(){return this.localeData().meridiem(this.hours(),this.minutes(),b)})}function Tb(a,b){return b._meridiemParse}function Ub(a){return&quot;p&quot;===(a+&quot;&quot;).toLowerCase().charAt(0)}function Vb(a,b,c){return a&gt;11?c?&quot;pm&quot;:&quot;PM&quot;:c?&quot;am&quot;:&quot;AM&quot;}function Wb(a,b){b[ld]=q(1e3*(&quot;0.&quot;+a))}function Xb(){return this._isUTC?&quot;UTC&quot;:&quot;&quot;}function Yb(){return this._isUTC?&quot;Coordinated Universal Time&quot;:&quot;&quot;}function Zb(a){return Da(1e3*a)}function $b(){return Da.apply(null,arguments).parseZone()}function _b(a,b,c){var d=this._calendar[a];return&quot;function&quot;==typeof d?d.call(b,c):d}function ac(a){var b=this._longDateFormat[a],c=this._longDateFormat[a.toUpperCase()];return b||!c?b:(this._longDateFormat[a]=c.replace(/MMMM|MM|DD|dddd/g,function(a){return a.slice(1)}),this._longDateFormat[a])}function bc(){return this._invalidDate}function cc(a){return this._ordinal.replace(&quot;%d&quot;,a)}function dc(a){return a}function ec(a,b,c,d){var e=this._relativeTime[c];return&quot;function&quot;==typeof e?e(a,b,c,d):e.replace(/%d/i,a)}function fc(a,b){var c=this._relativeTime[a&gt;0?&quot;future&quot;:&quot;past&quot;];return&quot;function&quot;==typeof c?c(b):c.replace(/%s/i,b)}function gc(a){var b,c;for(c in a)b=a[c],&quot;function&quot;==typeof b?this[c]=b:this[&quot;_&quot;+c]=b;this._ordinalParseLenient=new RegExp(this._ordinalParse.source+&quot;|&quot;+/\d{1,2}/.source)}function hc(a,b,c,d){var e=y(),f=h().set(d,b);return e[c](f,a)}function ic(a,b,c,d,e){if(&quot;number&quot;==typeof a&amp;&amp;(b=a,a=void 0),a=a||&quot;&quot;,null!=b)return hc(a,b,c,e);var f,g=[];for(f=0;d&gt;f;f++)g[f]=hc(a,f,c,e);return g}function jc(a,b){return ic(a,b,&quot;months&quot;,12,&quot;month&quot;)}function kc(a,b){return ic(a,b,&quot;monthsShort&quot;,12,&quot;month&quot;)}function lc(a,b){return ic(a,b,&quot;weekdays&quot;,7,&quot;day&quot;)}function mc(a,b){return ic(a,b,&quot;weekdaysShort&quot;,7,&quot;day&quot;)}function nc(a,b){return ic(a,b,&quot;weekdaysMin&quot;,7,&quot;day&quot;)}function oc(){var a=this._data;return this._milliseconds=Wd(this._milliseconds),this._days=Wd(this._days),this._months=Wd(this._months),a.milliseconds=Wd(a.milliseconds),a.seconds=Wd(a.seconds),a.minutes=Wd(a.minutes),a.hours=Wd(a.hours),a.months=Wd(a.months),a.years=Wd(a.years),this}function pc(a,b,c,d){var e=Ya(b,c);return a._milliseconds+=d*e._milliseconds,a._days+=d*e._days,a._months+=d*e._months,a._bubble()}function qc(a,b){return pc(this,a,b,1)}function rc(a,b){return pc(this,a,b,-1)}function sc(a){return 0&gt;a?Math.floor(a):Math.ceil(a)}function tc(){var a,b,c,d,e,f=this._milliseconds,g=this._days,h=this._months,i=this._data;return f&gt;=0&amp;&amp;g&gt;=0&amp;&amp;h&gt;=0||0&gt;=f&amp;&amp;0&gt;=g&amp;&amp;0&gt;=h||(f+=864e5*sc(vc(h)+g),g=0,h=0),i.milliseconds=f%1e3,a=p(f/1e3),i.seconds=a%60,b=p(a/60),i.minutes=b%60,c=p(b/60),i.hours=c%24,g+=p(c/24),e=p(uc(g)),h+=e,g-=sc(vc(e)),d=p(h/12),h%=12,i.days=g,i.months=h,i.years=d,this}function uc(a){return 4800*a/146097}function vc(a){return 146097*a/4800}function wc(a){var b,c,d=this._milliseconds;if(a=A(a),&quot;month&quot;===a||&quot;year&quot;===a)return b=this._days+d/864e5,c=this._months+uc(b),&quot;month&quot;===a?c:c/12;switch(b=this._days+Math.round(vc(this._months)),a){case&quot;week&quot;:return b/7+d/6048e5;case&quot;day&quot;:return b+d/864e5;case&quot;hour&quot;:return 24*b+d/36e5;case&quot;minute&quot;:return 1440*b+d/6e4;case&quot;second&quot;:return 86400*b+d/1e3;case&quot;millisecond&quot;:return Math.floor(864e5*b)+d;default:throw new Error(&quot;Unknown unit &quot;+a)}}function xc(){return this._milliseconds+864e5*this._days+this._months%12*2592e6+31536e6*q(this._months/12)}function yc(a){return function(){return this.as(a)}}function zc(a){return a=A(a),this[a+&quot;s&quot;]()}function Ac(a){return function(){return this._data[a]}}function Bc(){return p(this.days()/7)}function Cc(a,b,c,d,e){return e.relativeTime(b||1,!!c,a,d)}function Dc(a,b,c){var d=Ya(a).abs(),e=ke(d.as(&quot;s&quot;)),f=ke(d.as(&quot;m&quot;)),g=ke(d.as(&quot;h&quot;)),h=ke(d.as(&quot;d&quot;)),i=ke(d.as(&quot;M&quot;)),j=ke(d.as(&quot;y&quot;)),k=e&lt;le.s&amp;&amp;[&quot;s&quot;,e]||1===f&amp;&amp;[&quot;m&quot;]||f&lt;le.m&amp;&amp;[&quot;mm&quot;,f]||1===g&amp;&amp;[&quot;h&quot;]||g&lt;le.h&amp;&amp;[&quot;hh&quot;,g]||1===h&amp;&amp;[&quot;d&quot;]||h&lt;le.d&amp;&amp;[&quot;dd&quot;,h]||1===i&amp;&amp;[&quot;M&quot;]||i&lt;le.M&amp;&amp;[&quot;MM&quot;,i]||1===j&amp;&amp;[&quot;y&quot;]||[&quot;yy&quot;,j];return k[2]=b,k[3]=+a&gt;0,k[4]=c,Cc.apply(null,k)}function Ec(a,b){return void 0===le[a]?!1:void 0===b?le[a]:(le[a]=b,!0)}function Fc(a){var b=this.localeData(),c=Dc(this,!a,b);return a&amp;&amp;(c=b.pastFuture(+this,c)),b.postformat(c)}function Gc(){var a,b,c,d=me(this._milliseconds)/1e3,e=me(this._days),f=me(this._months);a=p(d/60),b=p(a/60),d%=60,a%=60,c=p(f/12),f%=12;var g=c,h=f,i=e,j=b,k=a,l=d,m=this.asSeconds();return m?(0&gt;m?&quot;-&quot;:&quot;&quot;)+&quot;P&quot;+(g?g+&quot;Y&quot;:&quot;&quot;)+(h?h+&quot;M&quot;:&quot;&quot;)+(i?i+&quot;D&quot;:&quot;&quot;)+(j||k||l?&quot;T&quot;:&quot;&quot;)+(j?j+&quot;H&quot;:&quot;&quot;)+(k?k+&quot;M&quot;:&quot;&quot;)+(l?l+&quot;S&quot;:&quot;&quot;):&quot;P0D&quot;}var Hc,Ic,Jc=a.momentProperties=[],Kc=!1,Lc={},Mc={},Nc=/(\[[^\[]*\])|(\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Q|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,Oc=/(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,Pc={},Qc={},Rc=/\d/,Sc=/\d\d/,Tc=/\d{3}/,Uc=/\d{4}/,Vc=/[+-]?\d{6}/,Wc=/\d\d?/,Xc=/\d{1,3}/,Yc=/\d{1,4}/,Zc=/[+-]?\d{1,6}/,$c=/\d+/,_c=/[+-]?\d+/,ad=/Z|[+-]\d\d:?\d\d/gi,bd=/[+-]?\d+(\.\d{1,3})?/,cd=/[0-9]*[&apos;a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i,dd={},ed={},fd=0,gd=1,hd=2,id=3,jd=4,kd=5,ld=6;H(&quot;M&quot;,[&quot;MM&quot;,2],&quot;Mo&quot;,function(){return this.month()+1}),H(&quot;MMM&quot;,0,0,function(a){return this.localeData().monthsShort(this,a)}),H(&quot;MMMM&quot;,0,0,function(a){return this.localeData().months(this,a)}),z(&quot;month&quot;,&quot;M&quot;),N(&quot;M&quot;,Wc),N(&quot;MM&quot;,Wc,Sc),N(&quot;MMM&quot;,cd),N(&quot;MMMM&quot;,cd),Q([&quot;M&quot;,&quot;MM&quot;],function(a,b){b[gd]=q(a)-1}),Q([&quot;MMM&quot;,&quot;MMMM&quot;],function(a,b,c,d){var e=c._locale.monthsParse(a,d,c._strict);null!=e?b[gd]=e:j(c).invalidMonth=a});var md=&quot;January_February_March_April_May_June_July_August_September_October_November_December&quot;.split(&quot;_&quot;),nd=&quot;Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec&quot;.split(&quot;_&quot;),od={};a.suppressDeprecationWarnings=!1;var pd=/^\s*(?:[+-]\d{6}|\d{4})-(?:(\d\d-\d\d)|(W\d\d$)|(W\d\d-\d)|(\d\d\d))((T| )(\d\d(:\d\d(:\d\d(\.\d+)?)?)?)?([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,qd=[[&quot;YYYYYY-MM-DD&quot;,/[+-]\d{6}-\d{2}-\d{2}/],[&quot;YYYY-MM-DD&quot;,/\d{4}-\d{2}-\d{2}/],[&quot;GGGG-[W]WW-E&quot;,/\d{4}-W\d{2}-\d/],[&quot;GGGG-[W]WW&quot;,/\d{4}-W\d{2}/],[&quot;YYYY-DDD&quot;,/\d{4}-\d{3}/]],rd=[[&quot;HH:mm:ss.SSSS&quot;,/(T| )\d\d:\d\d:\d\d\.\d+/],[&quot;HH:mm:ss&quot;,/(T| )\d\d:\d\d:\d\d/],[&quot;HH:mm&quot;,/(T| )\d\d:\d\d/],[&quot;HH&quot;,/(T| )\d\d/]],sd=/^\/?Date\((\-?\d+)/i;a.createFromInputFallback=aa(&quot;moment construction falls back to js Date. This is discouraged and will be removed in upcoming major release. Please refer to https://github.com/moment/moment/issues/1407 for more info.&quot;,function(a){a._d=new Date(a._i+(a._useUTC?&quot; UTC&quot;:&quot;&quot;))}),H(0,[&quot;YY&quot;,2],0,function(){return this.year()%100}),H(0,[&quot;YYYY&quot;,4],0,&quot;year&quot;),H(0,[&quot;YYYYY&quot;,5],0,&quot;year&quot;),H(0,[&quot;YYYYYY&quot;,6,!0],0,&quot;year&quot;),z(&quot;year&quot;,&quot;y&quot;),N(&quot;Y&quot;,_c),N(&quot;YY&quot;,Wc,Sc),N(&quot;YYYY&quot;,Yc,Uc),N(&quot;YYYYY&quot;,Zc,Vc),N(&quot;YYYYYY&quot;,Zc,Vc),Q([&quot;YYYYY&quot;,&quot;YYYYYY&quot;],fd),Q(&quot;YYYY&quot;,function(b,c){c[fd]=2===b.length?a.parseTwoDigitYear(b):q(b)}),Q(&quot;YY&quot;,function(b,c){c[fd]=a.parseTwoDigitYear(b)}),a.parseTwoDigitYear=function(a){return q(a)+(q(a)&gt;68?1900:2e3)};var td=C(&quot;FullYear&quot;,!1);H(&quot;w&quot;,[&quot;ww&quot;,2],&quot;wo&quot;,&quot;week&quot;),H(&quot;W&quot;,[&quot;WW&quot;,2],&quot;Wo&quot;,&quot;isoWeek&quot;),z(&quot;week&quot;,&quot;w&quot;),z(&quot;isoWeek&quot;,&quot;W&quot;),N(&quot;w&quot;,Wc),N(&quot;ww&quot;,Wc,Sc),N(&quot;W&quot;,Wc),N(&quot;WW&quot;,Wc,Sc),R([&quot;w&quot;,&quot;ww&quot;,&quot;W&quot;,&quot;WW&quot;],function(a,b,c,d){b[d.substr(0,1)]=q(a)});var ud={dow:0,doy:6};H(&quot;DDD&quot;,[&quot;DDDD&quot;,3],&quot;DDDo&quot;,&quot;dayOfYear&quot;),z(&quot;dayOfYear&quot;,&quot;DDD&quot;),N(&quot;DDD&quot;,Xc),N(&quot;DDDD&quot;,Tc),Q([&quot;DDD&quot;,&quot;DDDD&quot;],function(a,b,c){c._dayOfYear=q(a)}),a.ISO_8601=function(){};var vd=aa(&quot;moment().min is deprecated, use moment.min instead. https://github.com/moment/moment/issues/1548&quot;,function(){var a=Da.apply(null,arguments);return this&gt;a?this:a}),wd=aa(&quot;moment().max is deprecated, use moment.max instead. https://github.com/moment/moment/issues/1548&quot;,function(){var a=Da.apply(null,arguments);return a&gt;this?this:a});Ja(&quot;Z&quot;,&quot;:&quot;),Ja(&quot;ZZ&quot;,&quot;&quot;),N(&quot;Z&quot;,ad),N(&quot;ZZ&quot;,ad),Q([&quot;Z&quot;,&quot;ZZ&quot;],function(a,b,c){c._useUTC=!0,c._tzm=Ka(a)});var xd=/([\+\-]|\d\d)/gi;a.updateOffset=function(){};var yd=/(\-)?(?:(\d*)\.)?(\d+)\:(\d+)(?:\:(\d+)\.?(\d{3})?)?/,zd=/^(-)?P(?:(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?|([0-9,.]*)W)$/;Ya.fn=Ha.prototype;var Ad=ab(1,&quot;add&quot;),Bd=ab(-1,&quot;subtract&quot;);a.defaultFormat=&quot;YYYY-MM-DDTHH:mm:ssZ&quot;;var Cd=aa(&quot;moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.&quot;,function(a){return void 0===a?this.localeData():this.locale(a)});H(0,[&quot;gg&quot;,2],0,function(){return this.weekYear()%100}),H(0,[&quot;GG&quot;,2],0,function(){return this.isoWeekYear()%100}),Db(&quot;gggg&quot;,&quot;weekYear&quot;),Db(&quot;ggggg&quot;,&quot;weekYear&quot;),Db(&quot;GGGG&quot;,&quot;isoWeekYear&quot;),Db(&quot;GGGGG&quot;,&quot;isoWeekYear&quot;),z(&quot;weekYear&quot;,&quot;gg&quot;),z(&quot;isoWeekYear&quot;,&quot;GG&quot;),N(&quot;G&quot;,_c),N(&quot;g&quot;,_c),N(&quot;GG&quot;,Wc,Sc),N(&quot;gg&quot;,Wc,Sc),N(&quot;GGGG&quot;,Yc,Uc),N(&quot;gggg&quot;,Yc,Uc),N(&quot;GGGGG&quot;,Zc,Vc),N(&quot;ggggg&quot;,Zc,Vc),R([&quot;gggg&quot;,&quot;ggggg&quot;,&quot;GGGG&quot;,&quot;GGGGG&quot;],function(a,b,c,d){b[d.substr(0,2)]=q(a)}),R([&quot;gg&quot;,&quot;GG&quot;],function(b,c,d,e){c[e]=a.parseTwoDigitYear(b)}),H(&quot;Q&quot;,0,0,&quot;quarter&quot;),z(&quot;quarter&quot;,&quot;Q&quot;),N(&quot;Q&quot;,Rc),Q(&quot;Q&quot;,function(a,b){b[gd]=3*(q(a)-1)}),H(&quot;D&quot;,[&quot;DD&quot;,2],&quot;Do&quot;,&quot;date&quot;),z(&quot;date&quot;,&quot;D&quot;),N(&quot;D&quot;,Wc),N(&quot;DD&quot;,Wc,Sc),N(&quot;Do&quot;,function(a,b){return a?b._ordinalParse:b._ordinalParseLenient}),Q([&quot;D&quot;,&quot;DD&quot;],hd),Q(&quot;Do&quot;,function(a,b){b[hd]=q(a.match(Wc)[0],10)});var Dd=C(&quot;Date&quot;,!0);H(&quot;d&quot;,0,&quot;do&quot;,&quot;day&quot;),H(&quot;dd&quot;,0,0,function(a){return this.localeData().weekdaysMin(this,a)}),H(&quot;ddd&quot;,0,0,function(a){return this.localeData().weekdaysShort(this,a)}),H(&quot;dddd&quot;,0,0,function(a){return this.localeData().weekdays(this,a)}),H(&quot;e&quot;,0,0,&quot;weekday&quot;),H(&quot;E&quot;,0,0,&quot;isoWeekday&quot;),z(&quot;day&quot;,&quot;d&quot;),z(&quot;weekday&quot;,&quot;e&quot;),z(&quot;isoWeekday&quot;,&quot;E&quot;),N(&quot;d&quot;,Wc),N(&quot;e&quot;,Wc),N(&quot;E&quot;,Wc),N(&quot;dd&quot;,cd),N(&quot;ddd&quot;,cd),N(&quot;dddd&quot;,cd),R([&quot;dd&quot;,&quot;ddd&quot;,&quot;dddd&quot;],function(a,b,c){var d=c._locale.weekdaysParse(a);null!=d?b.d=d:j(c).invalidWeekday=a}),R([&quot;d&quot;,&quot;e&quot;,&quot;E&quot;],function(a,b,c,d){b[d]=q(a)});var Ed=&quot;Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday&quot;.split(&quot;_&quot;),Fd=&quot;Sun_Mon_Tue_Wed_Thu_Fri_Sat&quot;.split(&quot;_&quot;),Gd=&quot;Su_Mo_Tu_We_Th_Fr_Sa&quot;.split(&quot;_&quot;);H(&quot;H&quot;,[&quot;HH&quot;,2],0,&quot;hour&quot;),H(&quot;h&quot;,[&quot;hh&quot;,2],0,function(){return this.hours()%12||12}),Sb(&quot;a&quot;,!0),Sb(&quot;A&quot;,!1),z(&quot;hour&quot;,&quot;h&quot;),N(&quot;a&quot;,Tb),N(&quot;A&quot;,Tb),N(&quot;H&quot;,Wc),N(&quot;h&quot;,Wc),N(&quot;HH&quot;,Wc,Sc),N(&quot;hh&quot;,Wc,Sc),Q([&quot;H&quot;,&quot;HH&quot;],id),Q([&quot;a&quot;,&quot;A&quot;],function(a,b,c){c._isPm=c._locale.isPM(a),c._meridiem=a}),Q([&quot;h&quot;,&quot;hh&quot;],function(a,b,c){b[id]=q(a),j(c).bigHour=!0});var Hd=/[ap]\.?m?\.?/i,Id=C(&quot;Hours&quot;,!0);H(&quot;m&quot;,[&quot;mm&quot;,2],0,&quot;minute&quot;),z(&quot;minute&quot;,&quot;m&quot;),N(&quot;m&quot;,Wc),N(&quot;mm&quot;,Wc,Sc),Q([&quot;m&quot;,&quot;mm&quot;],jd);var Jd=C(&quot;Minutes&quot;,!1);H(&quot;s&quot;,[&quot;ss&quot;,2],0,&quot;second&quot;),z(&quot;second&quot;,&quot;s&quot;),N(&quot;s&quot;,Wc),N(&quot;ss&quot;,Wc,Sc),Q([&quot;s&quot;,&quot;ss&quot;],kd);var Kd=C(&quot;Seconds&quot;,!1);H(&quot;S&quot;,0,0,function(){return~~(this.millisecond()/100)}),H(0,[&quot;SS&quot;,2],0,function(){return~~(this.millisecond()/10)}),H(0,[&quot;SSS&quot;,3],0,&quot;millisecond&quot;),H(0,[&quot;SSSS&quot;,4],0,function(){return 10*this.millisecond()}),H(0,[&quot;SSSSS&quot;,5],0,function(){return 100*this.millisecond()}),H(0,[&quot;SSSSSS&quot;,6],0,function(){return 1e3*this.millisecond()}),H(0,[&quot;SSSSSSS&quot;,7],0,function(){return 1e4*this.millisecond()}),H(0,[&quot;SSSSSSSS&quot;,8],0,function(){return 1e5*this.millisecond()}),H(0,[&quot;SSSSSSSSS&quot;,9],0,function(){return 1e6*this.millisecond()}),z(&quot;millisecond&quot;,&quot;ms&quot;),N(&quot;S&quot;,Xc,Rc),N(&quot;SS&quot;,Xc,Sc),N(&quot;SSS&quot;,Xc,Tc);var Ld;for(Ld=&quot;SSSS&quot;;Ld.length&lt;=9;Ld+=&quot;S&quot;)N(Ld,$c);for(Ld=&quot;S&quot;;Ld.length&lt;=9;Ld+=&quot;S&quot;)Q(Ld,Wb);var Md=C(&quot;Milliseconds&quot;,!1);H(&quot;z&quot;,0,0,&quot;zoneAbbr&quot;),H(&quot;zz&quot;,0,0,&quot;zoneName&quot;);var Nd=n.prototype;Nd.add=Ad,Nd.calendar=cb,Nd.clone=db,Nd.diff=ib,Nd.endOf=ub,Nd.format=mb,Nd.from=nb,Nd.fromNow=ob,Nd.to=pb,Nd.toNow=qb,Nd.get=F,Nd.invalidAt=Cb,Nd.isAfter=eb,Nd.isBefore=fb,Nd.isBetween=gb,Nd.isSame=hb,Nd.isValid=Ab,Nd.lang=Cd,Nd.locale=rb,Nd.localeData=sb,Nd.max=wd,Nd.min=vd,Nd.parsingFlags=Bb,Nd.set=F,Nd.startOf=tb,Nd.subtract=Bd,Nd.toArray=yb,Nd.toObject=zb,Nd.toDate=xb,Nd.toISOString=lb,Nd.toJSON=lb,Nd.toString=kb,Nd.unix=wb,Nd.valueOf=vb,Nd.year=td,Nd.isLeapYear=ia,Nd.weekYear=Fb,Nd.isoWeekYear=Gb,Nd.quarter=Nd.quarters=Jb,Nd.month=Y,Nd.daysInMonth=Z,Nd.week=Nd.weeks=na,Nd.isoWeek=Nd.isoWeeks=oa,Nd.weeksInYear=Ib,Nd.isoWeeksInYear=Hb,Nd.date=Dd,Nd.day=Nd.days=Pb,Nd.weekday=Qb,Nd.isoWeekday=Rb,Nd.dayOfYear=qa,Nd.hour=Nd.hours=Id,Nd.minute=Nd.minutes=Jd,Nd.second=Nd.seconds=Kd,
Nd.millisecond=Nd.milliseconds=Md,Nd.utcOffset=Na,Nd.utc=Pa,Nd.local=Qa,Nd.parseZone=Ra,Nd.hasAlignedHourOffset=Sa,Nd.isDST=Ta,Nd.isDSTShifted=Ua,Nd.isLocal=Va,Nd.isUtcOffset=Wa,Nd.isUtc=Xa,Nd.isUTC=Xa,Nd.zoneAbbr=Xb,Nd.zoneName=Yb,Nd.dates=aa(&quot;dates accessor is deprecated. Use date instead.&quot;,Dd),Nd.months=aa(&quot;months accessor is deprecated. Use month instead&quot;,Y),Nd.years=aa(&quot;years accessor is deprecated. Use year instead&quot;,td),Nd.zone=aa(&quot;moment().zone is deprecated, use moment().utcOffset instead. https://github.com/moment/moment/issues/1779&quot;,Oa);var Od=Nd,Pd={sameDay:&quot;[Today at] LT&quot;,nextDay:&quot;[Tomorrow at] LT&quot;,nextWeek:&quot;dddd [at] LT&quot;,lastDay:&quot;[Yesterday at] LT&quot;,lastWeek:&quot;[Last] dddd [at] LT&quot;,sameElse:&quot;L&quot;},Qd={LTS:&quot;h:mm:ss A&quot;,LT:&quot;h:mm A&quot;,L:&quot;MM/DD/YYYY&quot;,LL:&quot;MMMM D, YYYY&quot;,LLL:&quot;MMMM D, YYYY h:mm A&quot;,LLLL:&quot;dddd, MMMM D, YYYY h:mm A&quot;},Rd=&quot;Invalid date&quot;,Sd=&quot;%d&quot;,Td=/\d{1,2}/,Ud={future:&quot;in %s&quot;,past:&quot;%s ago&quot;,s:&quot;a few seconds&quot;,m:&quot;a minute&quot;,mm:&quot;%d minutes&quot;,h:&quot;an hour&quot;,hh:&quot;%d hours&quot;,d:&quot;a day&quot;,dd:&quot;%d days&quot;,M:&quot;a month&quot;,MM:&quot;%d months&quot;,y:&quot;a year&quot;,yy:&quot;%d years&quot;},Vd=s.prototype;Vd._calendar=Pd,Vd.calendar=_b,Vd._longDateFormat=Qd,Vd.longDateFormat=ac,Vd._invalidDate=Rd,Vd.invalidDate=bc,Vd._ordinal=Sd,Vd.ordinal=cc,Vd._ordinalParse=Td,Vd.preparse=dc,Vd.postformat=dc,Vd._relativeTime=Ud,Vd.relativeTime=ec,Vd.pastFuture=fc,Vd.set=gc,Vd.months=U,Vd._months=md,Vd.monthsShort=V,Vd._monthsShort=nd,Vd.monthsParse=W,Vd.week=ka,Vd._week=ud,Vd.firstDayOfYear=ma,Vd.firstDayOfWeek=la,Vd.weekdays=Lb,Vd._weekdays=Ed,Vd.weekdaysMin=Nb,Vd._weekdaysMin=Gd,Vd.weekdaysShort=Mb,Vd._weekdaysShort=Fd,Vd.weekdaysParse=Ob,Vd.isPM=Ub,Vd._meridiemParse=Hd,Vd.meridiem=Vb,w(&quot;en&quot;,{ordinalParse:/\d{1,2}(th|st|nd|rd)/,ordinal:function(a){var b=a%10,c=1===q(a%100/10)?&quot;th&quot;:1===b?&quot;st&quot;:2===b?&quot;nd&quot;:3===b?&quot;rd&quot;:&quot;th&quot;;return a+c}}),a.lang=aa(&quot;moment.lang is deprecated. Use moment.locale instead.&quot;,w),a.langData=aa(&quot;moment.langData is deprecated. Use moment.localeData instead.&quot;,y);var Wd=Math.abs,Xd=yc(&quot;ms&quot;),Yd=yc(&quot;s&quot;),Zd=yc(&quot;m&quot;),$d=yc(&quot;h&quot;),_d=yc(&quot;d&quot;),ae=yc(&quot;w&quot;),be=yc(&quot;M&quot;),ce=yc(&quot;y&quot;),de=Ac(&quot;milliseconds&quot;),ee=Ac(&quot;seconds&quot;),fe=Ac(&quot;minutes&quot;),ge=Ac(&quot;hours&quot;),he=Ac(&quot;days&quot;),ie=Ac(&quot;months&quot;),je=Ac(&quot;years&quot;),ke=Math.round,le={s:45,m:45,h:22,d:26,M:11},me=Math.abs,ne=Ha.prototype;ne.abs=oc,ne.add=qc,ne.subtract=rc,ne.as=wc,ne.asMilliseconds=Xd,ne.asSeconds=Yd,ne.asMinutes=Zd,ne.asHours=$d,ne.asDays=_d,ne.asWeeks=ae,ne.asMonths=be,ne.asYears=ce,ne.valueOf=xc,ne._bubble=tc,ne.get=zc,ne.milliseconds=de,ne.seconds=ee,ne.minutes=fe,ne.hours=ge,ne.days=he,ne.weeks=Bc,ne.months=ie,ne.years=je,ne.humanize=Fc,ne.toISOString=Gc,ne.toString=Gc,ne.toJSON=Gc,ne.locale=rb,ne.localeData=sb,ne.toIsoString=aa(&quot;toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)&quot;,Gc),ne.lang=Cd,H(&quot;X&quot;,0,0,&quot;unix&quot;),H(&quot;x&quot;,0,0,&quot;valueOf&quot;),N(&quot;x&quot;,_c),N(&quot;X&quot;,bd),Q(&quot;X&quot;,function(a,b,c){c._d=new Date(1e3*parseFloat(a,10))}),Q(&quot;x&quot;,function(a,b,c){c._d=new Date(q(a))}),a.version=&quot;2.10.6&quot;,b(Da),a.fn=Od,a.min=Fa,a.max=Ga,a.utc=h,a.unix=Zb,a.months=jc,a.isDate=d,a.locale=w,a.invalid=l,a.duration=Ya,a.isMoment=o,a.weekdays=lc,a.parseZone=$b,a.localeData=y,a.isDuration=Ia,a.monthsShort=kc,a.weekdaysMin=nc,a.defineLocale=x,a.weekdaysShort=mc,a.normalizeUnits=A,a.relativeTimeThreshold=Ec;var oe=a;return oe});</code>
            </properties>
          </codeTemplate>
          <codeTemplate version="4.0.0">
            <id>2c64669f-f07e-4365-bf64-c559ace83004</id>
            <name>stopOnErrorCount</name>
            <revision>1</revision>
            <lastModified>
              <time>1678476122375</time>
              <timezone>America/Chicago</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>/**
	Function to Stop a channel if it reaches a particular error count. 
	Also sends an alert message via another channel (this sends a sms via our monitoring system).

	@param {String} arg1 - arg1 description
	@return {String} return description
*/
function stopOnErrorCount(cid, errorCount) {
	var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();
	var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();
	var stats = channelStatisticsController.getStatistics(cid);
	// var numOfQueued = stats.queued;
	var numOfErrors = stats.error;

	if(numOfErrors &gt; errorCount )
	{
		//Stop Me
		channelStatusController.stopChannel(cid);
		//Alert msg sent to _SVHALERT channel
		var channelController = Packages.com.mirth.connect.server.controllers.ChannelController.getInstance();
		var channelName = channelController.getDeployedChannelById(cid).getName();
		var alertmsg = &apos;mirth01 mirth_channel_status codeTemplate_stopOnErrorCount 0 &apos; +
					   &apos;channel &apos; + channelName + &apos; stopped&apos;;
		router.routeMessage(&apos;_SVHALERT&apos;, alertmsg);
	}
}</code>
            </properties>
          </codeTemplate>
          <codeTemplate version="4.0.0">
            <id>08044817-3504-4fc1-80ee-404870195151</id>
            <name>test</name>
            <revision>1</revision>
            <lastModified>
              <time>1678476122745</time>
              <timezone>America/Chicago</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>CHANNEL_UNDEPLOY</contextType>
                <contextType>CHANNEL_PREPROCESSOR</contextType>
                <contextType>CHANNEL_POSTPROCESSOR</contextType>
                <contextType>CHANNEL_ATTACHMENT</contextType>
                <contextType>CHANNEL_BATCH</contextType>
                <contextType>CHANNEL_DEPLOY</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>COMPILED_CODE</type>
              <code>/**
	Modify the description here. Modify the function name and parameters as needed. One function per
	template is recommended; create a new code template for each new function.
	searchword
	@param {String} arg1 - arg1 description
	@return {String} return description
*/
function testfunc(arg1) {
	return arg1;
}</code>
            </properties>
          </codeTemplate>
        </codeTemplates>
      </codeTemplateLibrary>
      <codeTemplateLibrary version="4.0.0">
        <id>833c5444-6415-4d62-a76b-caa39589c2fa</id>
        <name>WebPT-Mirth</name>
        <revision>1</revision>
        <lastModified>
          <time>1678476121602</time>
          <timezone>America/Chicago</timezone>
        </lastModified>
        <description></description>
        <includeNewChannels>true</includeNewChannels>
        <enabledChannelIds>
          <string>3792b059-e098-436c-81fe-23502ef5042b</string>
        </enabledChannelIds>
        <disabledChannelIds/>
        <codeTemplates>
          <codeTemplate version="4.0.0">
            <id>b9eceb1d-8abb-4931-8247-209d70519f99</id>
            <name>Fix HL7v2 Node Order</name>
            <revision>1</revision>
            <lastModified>
              <time>1678476121804</time>
              <timezone>America/Chicago</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>CHANNEL_UNDEPLOY</contextType>
                <contextType>CHANNEL_PREPROCESSOR</contextType>
                <contextType>GLOBAL_UNDEPLOY</contextType>
                <contextType>CHANNEL_BATCH</contextType>
                <contextType>GLOBAL_POSTPROCESSOR</contextType>
                <contextType>GLOBAL_PREPROCESSOR</contextType>
                <contextType>GLOBAL_DEPLOY</contextType>
                <contextType>CHANNEL_POSTPROCESSOR</contextType>
                <contextType>CHANNEL_ATTACHMENT</contextType>
                <contextType>CHANNEL_DEPLOY</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>/*

	See issue: http://www.mirthcorp.com/community/issues/browse/MIRTH-625

	Author: Nick Rupley
	Date Modified: 4/18/2012

	fixHL7NodeOrder: Returns a new E4X node where the order of all siblings and descendants have been fixed as per the Mirth HL7 dot notation convention.

	Arguments
	---------
		Required
		--------
		node: The node to be fixed. 
*/
function fixHL7NodeOrder(node) {
	// Create output node
	var newNode = new XML();
	// In case the node is an XMLList of multiple siblings, loop through each sibling
	for each (sibling in node) {
		// Create new sibling node
		var newSibling = new XML(&apos;&lt;&apos;+sibling.name().toString()+&apos;/&gt;&apos;);
		// Iterate through each child node
		for each (child in sibling.children())
			// If the child has its own children, then recursively fix the node order of the child
			if (child.hasComplexContent())
				newSibling.appendChild(fixHL7NodeOrder(child));
			// If the child doesn&apos;t have its own children, then just add the child to the new sibling node
			else
				newSibling.appendChild(child);
		// After recursively fixing all of the child nodes, now we&apos;ll fix the current node
		newNode += sortHL7Node(newSibling);
	}
	// Return the fixed node
	return newNode;
}

function sortHL7Node(node) {
	// If the node has no children, then there&apos;s nothing to sort
	if (node.hasSimpleContent())
		return node;
	// Create new output node
	var newNode = new XML(&apos;&lt;&apos;+node.name().toString()+&apos;/&gt;&apos;);
	// Iterate through each child in the node
	for each (child in node.children()) {
		// If the child has a QName, then we can sort on it
		if (child.name()) {
			// Get the current &quot;index&quot; of the child. Id est, if the QName is PID.3.1, then the index is 1
			curChildIndex = parseInt(child.name().toString().substring(child.name().toString().lastIndexOf(&apos;.&apos;)+1),10);
			// Boolean placeholder
			var inserted = false;
			// Iterate through each child currently in the NEW node
			for (var i = 0; i &lt;= newNode.children().length()-1; i++) {
				// Get the index of the child of the new node
				loopChildIndex = parseInt(newNode.child(i).name().toString().substring(newNode.child(i).name().toString().lastIndexOf(&apos;.&apos;)+1),10);
				// If the child we want to insert has a lower index then the current child of the new node, then we&apos;re going to insert the child 
				// right before the current newNode child
				if (curChildIndex &lt; loopChildIndex) {
					// Insert the child
					newNode.insertChildBefore(newNode.children()[i],child);
					// Set our flag, indicating that an insertion was made
					inserted = true;
					// No need to continue iteration
					break;
				}
			}
			// If no insertion was made, then the index of the child we want to insert is greater than or equal to all of the
			// indices of the children that have already been inserted in newNode. So, we&apos;ll just append the child to the end.
			if (!inserted)
				newNode.appendChild(child);
		}
	}
	// Return the sorted HL7 node
	return newNode;
}</code>
            </properties>
          </codeTemplate>
        </codeTemplates>
      </codeTemplateLibrary>
      <codeTemplateLibrary version="4.0.0">
        <id>35f4c250-08b4-4e42-8e60-f85aa98dfe50</id>
        <name>WebPT-Translations</name>
        <revision>4</revision>
        <lastModified>
          <time>1703964939924</time>
          <timezone>America/Chicago</timezone>
        </lastModified>
        <description></description>
        <includeNewChannels>true</includeNewChannels>
        <enabledChannelIds>
          <string>c5aa527b-0e36-4790-8302-e1a6a472455e</string>
          <string>4e15d4c9-43b4-4d2c-9185-701707cd2f6a</string>
          <string>f7c77a5d-b086-4aed-aa56-e72984abd5ea</string>
          <string>65d47b29-67e5-4533-917c-337880fb8b17</string>
          <string>b7f455da-a5a4-4c75-be8f-d6f2c3561ac8</string>
          <string>42b2b012-ffc4-41ba-a71e-00fbd1cc1c67</string>
          <string>ead4368c-a612-459c-950e-50e49df05d9b</string>
          <string>81988bfb-2e74-4e25-ac01-1a000e027e97</string>
          <string>4964d3cc-7004-41c7-a704-da97ac92caf3</string>
          <string>954d2af0-df2c-46c6-95bc-02661a8d4424</string>
          <string>fd14f323-1f60-4ec5-b3e1-6ce8248bbcf3</string>
          <string>e248ef99-284c-41f3-adac-d7b43433b16f</string>
          <string>e20d28dc-e360-4b54-a225-5c6cddeba9a3</string>
          <string>6910529c-6cd1-4838-9a4f-d3c84faa2866</string>
          <string>8913e845-1fff-427c-bec0-e0a01d131f89</string>
          <string>19a0dcf7-3736-4b25-9049-80301c6cd04d</string>
          <string>32516e02-db8c-47f3-aba9-adfff1ea28c2</string>
          <string>b19c96b2-afb4-4248-83a8-96f521b20489</string>
          <string>f1688a2f-ece0-4292-b5f9-e56c50b6bc5a</string>
          <string>ed58a744-1f83-44aa-ad23-feef56e2f5e6</string>
          <string>4a98f7b0-d1f3-478d-ad65-550f8287fe24</string>
          <string>7a3b0715-12e0-4803-aa51-c1a947ef9b66</string>
          <string>dff92eca-e23d-4802-8e3c-023f3af3e640</string>
          <string>a3e80233-747a-4ce0-9f8f-59dcbe8e2ca6</string>
          <string>0ace74f9-8ee8-45a5-8093-8d5bb95dae90</string>
          <string>32ea3c4a-9c59-4482-beb2-22d729e5e379</string>
          <string>a827a980-9c7f-410c-893a-141429f7b30a</string>
          <string>fba4345d-b56d-4b31-802c-cdac2248902d</string>
          <string>9ba29622-ed1f-4a34-9cbe-6f3df0eb3026</string>
          <string>d6ea31a1-1aa6-4a53-adde-10a1bcdcd3c5</string>
          <string>4966bc7c-223c-4c44-8f71-4625cfcc0cc0</string>
          <string>72383579-097e-4205-b030-ce272c90b835</string>
          <string>88f9a267-e37f-418d-aaf2-d077b7a0cdca</string>
          <string>a2b31875-5c31-4052-938f-a69550a8cb55</string>
          <string>37b05d6c-c044-4394-a60a-deaee676ce0d</string>
          <string>71368dee-5964-4073-bab7-ae0fd3ae90b0</string>
          <string>5cc5d7df-228a-4d24-b774-681c717e1876</string>
          <string>4c3b5879-a8d9-48be-83cc-5f7c5777a188</string>
          <string>c65d1ffa-65af-4ee8-803a-2f32b201889d</string>
          <string>5c763fad-3eae-4e87-b944-0dbfe25814e0</string>
          <string>3792b059-e098-436c-81fe-23502ef5042b</string>
          <string>8a4eb453-fc7a-484a-8e15-422d9b490edf</string>
          <string>a757905f-315a-43be-a624-38780a3d7574</string>
          <string>1c6037e0-7bf9-41ae-b896-5be7b77e711f</string>
          <string>631f9a02-6b74-4ecd-9582-221b98a0450e</string>
          <string>c2277647-41dc-4e15-bce4-2ae23cec064b</string>
          <string>c1fd4789-03e5-4ec3-91d2-cdded4b13365</string>
          <string>318f77fc-a631-48e0-8a4e-a87831bd81a7</string>
          <string>38e80069-5a80-4483-9a22-02c928973719</string>
          <string>ba9dcc01-6b1c-4fc3-afc4-cf1c5da9a8aa</string>
          <string>77033047-c5e7-4308-b2ed-d361923ed9a2</string>
          <string>2e0d9b6c-294f-4506-8632-dc4622b4f651</string>
          <string>d3f6504f-12cd-4e69-a920-6bb3a2195cc2</string>
          <string>a6fc8ba1-0134-4d1a-a341-cd9a2f295595</string>
          <string>57fa694a-2758-4e52-b725-967a74786d1f</string>
          <string>a45d1db0-9b84-49d3-b26b-243dbf2a4f70</string>
          <string>ab7d9121-bd5f-47c1-964a-53531cd178dd</string>
          <string>bfc00235-7e2e-457a-b27f-e5288e9c28c4</string>
          <string>6be39ce0-8f88-42fb-b3a4-4afd4da39734</string>
          <string>754a8caa-2161-45d8-b261-e32d8b0fb044</string>
          <string>9370b181-aa9c-4db3-b7dc-2cd81cc91fdd</string>
          <string>e678dbf5-f021-43dc-84ae-967500d5c31a</string>
          <string>7741037b-845e-4e6d-b6aa-c9f249b06084</string>
          <string>c65024ed-4660-4423-9636-cb6309cae138</string>
          <string>0972a85f-5ad7-4a93-88e1-5f991b7f7879</string>
          <string>3fdef7e5-20e2-4e6f-aad4-a156ddb2e5e2</string>
          <string>ccd59c71-8d2a-40e9-8647-57e000ec6f43</string>
          <string>a25fa941-8ba3-47eb-81d1-24c9e45fe29d</string>
          <string>8cbc4731-752e-4e2e-a61d-018ed3e0cef0</string>
          <string>1b12c7a8-abee-4c24-85a4-d3b447e9d280</string>
          <string>5cfc8ad8-0fb2-48bf-a318-1aabd86cf60e</string>
          <string>10ef3f18-f1c1-495c-80be-026eb56436c5</string>
          <string>c15d4352-13b2-4698-a771-b3593449d7ba</string>
          <string>64e32643-e41c-4986-9550-c634cb02f9ba</string>
          <string>347deee2-a3c1-4542-bc3e-c619defe0b64</string>
          <string>9e040198-05cf-11e8-ba89-0ed5f89f718b</string>
          <string>dc8e6472-bc7e-4ebe-a8dd-968b791e2975</string>
          <string>66487d57-e34e-4a9a-8296-e62a66d3ab8b</string>
          <string>99b43124-34ef-4ead-a348-ef0ac0a52539</string>
          <string>4c2e73a8-aabe-4c04-9ba5-50ab49d3cb95</string>
          <string>0df5acd6-0251-4546-9d35-ed7f1515e00b</string>
          <string>93f57fef-8fc0-4b05-91de-b1cdb48034a2</string>
          <string>db4e2d12-f41b-4da9-87b8-a1feb4c29054</string>
          <string>a6ec1677-5012-430f-bcbc-f41fe39ecf1f</string>
          <string>5c5b6b2c-f3fd-456d-a90d-d684b5fb061e</string>
          <string>42e730bb-0721-435e-8dcf-d25d6d5d1dc6</string>
          <string>c90c935e-e3de-4ffe-839f-5560b39f07fb</string>
          <string>18803b99-6545-4d09-9277-a559ee2e94fd</string>
          <string>5231fded-a3aa-44e8-bd77-3ad84d39e1d2</string>
          <string>89faf430-5bd7-4440-9ed0-4b02d3462403</string>
        </enabledChannelIds>
        <disabledChannelIds/>
        <codeTemplates>
          <codeTemplate version="4.0.0">
            <id>be8f057b-2640-4613-b2e7-83326c59169c</id>
            <name>AddZeros</name>
            <revision>1</revision>
            <lastModified>
              <time>1678476122826</time>
              <timezone>America/Chicago</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>function addZeroes(num) {
   return num.toLocaleString(&quot;en&quot;, {useGrouping: false, minimumFractionDigits: 2})
}</code>
            </properties>
          </codeTemplate>
          <codeTemplate version="4.0.0">
            <id>51913864-7702-489a-b7c6-54992c12b19d</id>
            <name>FindLookupValueWithDefault</name>
            <revision>1</revision>
            <lastModified>
              <time>1678476122218</time>
              <timezone>America/Chicago</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>CHANNEL_UNDEPLOY</contextType>
                <contextType>CHANNEL_PREPROCESSOR</contextType>
                <contextType>GLOBAL_UNDEPLOY</contextType>
                <contextType>CHANNEL_BATCH</contextType>
                <contextType>GLOBAL_POSTPROCESSOR</contextType>
                <contextType>GLOBAL_PREPROCESSOR</contextType>
                <contextType>GLOBAL_DEPLOY</contextType>
                <contextType>CHANNEL_POSTPROCESSOR</contextType>
                <contextType>CHANNEL_ATTACHMENT</contextType>
                <contextType>CHANNEL_DEPLOY</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>function FindLookupValueWithDefault ( LookupGlobalMapName, LeftValue){
    /*********************************
    DESCRIPTION: Retrieves lookup table values from the global map and uses the input values to return output values

     PARAMETERS:
       LookupGlobalMapName - name of the lookup table in the Global Map
       LeftValue - The value to look up
       DefaultValue1 - the first default value if a match was not found
       DefaultValue2 - the second default value if a match was not found

    RETURNS:
       An object containing the replacement value and associated OID if applicable

    REMARKS: 
    ********************************/
        // Retrieve the previously matched item from the globalmap
        //    We do this to save time and not look through a huge lookup table tons of times
        //    unless we absolutely have to
        var prevItem = globalChannelMap.get(LookupGlobalMapName + &apos;-Previous&apos;);

        // This is the same item requested for this globalmap name - just return the previous value
        if ( prevItem != null &amp;&amp; prevItem.LeftValue == LeftValue) {
            return prevItem;
        }

        //
        // If we reach this point the previous item either did not exist or did not match 
        //

        // Retrieve the array with lookup objects from the globalmap and search for the matching value
        var arr = globalChannelMap.get(LookupGlobalMapName);
        var obj = new Object();
        //obj.LeftValue = LeftValue;
        //obj.RightValue1 = DefaultValue1;
        //obj.RightValue2   = DefaultValue2; 
        for each ( item in arr )
        {
            var pattern=new RegExp(&quot;^&quot; + item.LeftValue + &quot;$&quot;);
            var result = pattern.test(LeftValue );

            if ( pattern.test(LeftValue ) )
            {
                obj = item;
                break;
            } 
        }

        // Store the previous value in the globalmap
        globalChannelMap.put( LookupGlobalMapName + &apos;-Previous&apos;, obj );

        // Return the object we found or created
        return obj;
    }</code>
            </properties>
          </codeTemplate>
          <codeTemplate version="4.0.0">
            <id>c276be9f-c8f1-4dea-8df0-e000c6745271</id>
            <name>FindLookupValueWithInsuranceId</name>
            <revision>1</revision>
            <lastModified>
              <time>1678476122080</time>
              <timezone>America/Chicago</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>CHANNEL_UNDEPLOY</contextType>
                <contextType>CHANNEL_PREPROCESSOR</contextType>
                <contextType>GLOBAL_UNDEPLOY</contextType>
                <contextType>CHANNEL_BATCH</contextType>
                <contextType>GLOBAL_POSTPROCESSOR</contextType>
                <contextType>GLOBAL_PREPROCESSOR</contextType>
                <contextType>GLOBAL_DEPLOY</contextType>
                <contextType>CHANNEL_POSTPROCESSOR</contextType>
                <contextType>CHANNEL_ATTACHMENT</contextType>
                <contextType>CHANNEL_DEPLOY</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>function FindLookupValueWithInsuranceId ( LookupGlobalMapName, LeftValue){
    /*********************************
    DESCRIPTION: Retrieves lookup table values from the global map and uses the input values to return output values

     PARAMETERS:
       LookupGlobalMapName - name of the lookup table in the Global Map
       LeftValue - The value to look up
       DefaultValue1 - the first default value if a match was not found
       DefaultValue2 - the second default value if a match was not found

    RETURNS:
       An object containing the replacement value and associated OID if applicable

    REMARKS: 
    ********************************/
        // Retrieve the previously matched item from the globalmap
        //    We do this to save time and not look through a huge lookup table tons of times
        //    unless we absolutely have to
        var prevItem = globalChannelMap.get(LookupGlobalMapName + &apos;-Previous&apos;);

        // This is the same item requested for this globalmap name - just return the previous value
        if ( prevItem != null &amp;&amp; prevItem.LeftValue == LeftValue) {
            return prevItem;
        }

        //
        // If we reach this point the previous item either did not exist or did not match 
        //

        // Retrieve the array with lookup objects from the globalmap and search for the matching value
        var arr = globalChannelMap.get(LookupGlobalMapName);
        var obj = new Object();
        for each ( item in arr )
        {
            var pattern=new RegExp(&quot;^&quot; + item.LeftValue + &quot;$&quot;);             
            var result = pattern.test(LeftValue );
	
            if ( pattern.test(LeftValue ) )
            {
                obj = item;
                break;
            } 
        }

        // Store the previous value in the globalmap
        globalChannelMap.put( LookupGlobalMapName + &apos;-Previous&apos;, obj );

        // Return the object we found or created
        return obj;
    }</code>
            </properties>
          </codeTemplate>
          <codeTemplate version="4.0.0">
            <id>7d746da2-58c6-44eb-ad5c-c5bfd0a0c537</id>
            <name>UseExternalProblemID</name>
            <revision>1</revision>
            <lastModified>
              <time>1678476122349</time>
              <timezone>America/Chicago</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>/**
	Modify the description here. Modify the function name and parameters as needed. One function per
	template is recommended; create a new code template for each new function.

	@param {String} arg1 - arg1 description
	@return {String} return description
*/
function useExternalProblemID() {

if ([&apos;2804&apos;, &apos;2822&apos;].indexOf($(&apos;tenantId&apos;) + &apos;&apos;) &gt; -1) {
    tmp[&apos;Visit&apos;][&apos;AccountNumber&apos;] = msg[&apos;visitexternalproblemid&apos;].toString()
} else {
    tmp[&apos;Visit&apos;][&apos;AccountNumber&apos;] = msg[&apos;visitaccountnumber&apos;].toString();
}
}</code>
            </properties>
          </codeTemplate>
          <codeTemplate version="4.0.0">
            <id>07730e85-7f30-4ddf-90a4-78183c896ab5</id>
            <name>UseExternalVisitID</name>
            <revision>1</revision>
            <lastModified>
              <time>1678476122192</time>
              <timezone>America/Chicago</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>/**
	Modify the description here. Modify the function name and parameters as needed. One function per
	template is recommended; create a new code template for each new function.

	@param {String} arg1 - arg1 description
	@return {String} return description
*/
function useExternalVisitID() {
	
if ($(&apos;tenantId&apos;)  == &apos;9999&apos; ) {
    tmp[&apos;Visit&apos;][&apos;VisitNumber&apos;] = msg[&apos;visitexternalvisitid&apos;].toString()
} else {
    tmp[&apos;Visit&apos;][&apos;VisitNumber&apos;] = msg[&apos;visitvisitnumber&apos;].toString();
}
}</code>
            </properties>
          </codeTemplate>
        </codeTemplates>
      </codeTemplateLibrary>
    </codeTemplateLibraries>
    <channelTags>
      <channelTag>
        <id>5037a89b-003f-457b-9497-670ad7d9d47b</id>
        <name>CSV</name>
        <channelIds>
          <string>77033047-c5e7-4308-b2ed-d361923ed9a2</string>
          <string>ab7d9121-bd5f-47c1-964a-53531cd178dd</string>
          <string>aed44a77-012f-4eee-aa3e-73234edf4542</string>
        </channelIds>
        <backgroundColor>
          <red>255</red>
          <green>0</green>
          <blue>0</blue>
          <alpha>255</alpha>
        </backgroundColor>
      </channelTag>
      <channelTag>
        <id>9b54edad-c345-4a01-8ea1-8352f85f7241</id>
        <name>Database</name>
        <channelIds>
          <string>ab7d9121-bd5f-47c1-964a-53531cd178dd</string>
        </channelIds>
        <backgroundColor>
          <red>128</red>
          <green>0</green>
          <blue>0</blue>
          <alpha>255</alpha>
        </backgroundColor>
      </channelTag>
      <channelTag>
        <id>c977a28e-18bc-4072-93d9-db92b5bec0d6</id>
        <name>FILE</name>
        <channelIds>
          <string>347deee2-a3c1-4542-bc3e-c619defe0b64</string>
          <string>7311d096-fb98-4242-81fd-9c1a3d12261e</string>
          <string>27139815-1d29-4f32-ad00-fc266f2448cd</string>
          <string>a3e80233-747a-4ce0-9f8f-59dcbe8e2ca6</string>
          <string>ab7d9121-bd5f-47c1-964a-53531cd178dd</string>
          <string>aed44a77-012f-4eee-aa3e-73234edf4542</string>
          <string>99b43124-34ef-4ead-a348-ef0ac0a52539</string>
          <string>bfc00235-7e2e-457a-b27f-e5288e9c28c4</string>
        </channelIds>
        <backgroundColor>
          <red>0</red>
          <green>255</green>
          <blue>255</blue>
          <alpha>255</alpha>
        </backgroundColor>
      </channelTag>
      <channelTag>
        <id>fe315905-5b94-4f8f-930b-f5804216d425</id>
        <name>MySQL</name>
        <channelIds>
          <string>f7c77a5d-b086-4aed-aa56-e72984abd5ea</string>
          <string>ab7d9121-bd5f-47c1-964a-53531cd178dd</string>
          <string>d6ea31a1-1aa6-4a53-adde-10a1bcdcd3c5</string>
          <string>72383579-097e-4205-b030-ce272c90b835</string>
        </channelIds>
        <backgroundColor>
          <red>255</red>
          <green>0</green>
          <blue>0</blue>
          <alpha>255</alpha>
        </backgroundColor>
      </channelTag>
    </channelTags>
  </exportData>
</channel>